DEBUG [2015-09-01 17:22:11,481] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-09-01 17:22:11,497] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-09-01 17:22:11,497] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-09-01 17:22:11,497] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-09-01 17:22:11,513] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-09-01 17:22:11,576] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-09-01 17:22:11,656] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-09-01 17:22:11,672] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-09-01 17:22:11,672] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-09-01 17:22:11,734] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-09-01 17:22:11,750] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-09-01 17:22:11,750] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-09-01 17:22:11,781] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-09-01 17:22:11,813] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-09-01 17:22:11,859] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-09-01 17:22:11,859] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:11,859] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:11,859] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:11,859] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:11,859] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:11,875] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:11,875] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:11,875] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:11,875] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:11,875] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:11,875] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:11,875] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:11,875] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:11,891] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-09-01 17:22:11,922] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends\FollowerSearch$_start_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends\FollowerSearch.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\Twitter4JBase.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-09-01 17:22:12,000] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class]
 DEBUG [2015-09-01 17:22:12,000] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-09-01 17:22:12,000] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-09-01 17:22:12,016] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-09-01 17:22:12,016] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-09-01 17:22:12,303] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-09-01 17:22:12,304] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-09-01 17:22:12,306] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericXmlApplicationContext@3098cf3b: startup date [Tue Sep 01 17:22:12 KST 2015]; root of context hierarchy
 DEBUG [2015-09-01 17:22:12,306] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericXmlApplicationContext@3098cf3b: org.springframework.beans.factory.support.DefaultListableBeanFactory@1a9c38eb: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2]; root of factory hierarchy
 DEBUG [2015-09-01 17:22:12,353] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:22:12,353] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:22:12,384] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:12,384] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:22:12,462] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:22:12,462] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:22:12,462] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:12,462] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:22:12,462] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:22:12,462] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:22:12,462] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:12,462] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:22:12,462] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:22:12,462] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:22:12,462] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:12,462] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:22:12,462] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:22:12,462] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:22:12,462] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:12,462] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:22:12,462] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:22:12,462] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:22:12,462] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:12,462] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:22:12,462] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:22:12,478] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:22:12,478] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:12,478] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:22:12,478] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@4fc5e095]
 DEBUG [2015-09-01 17:22:12,478] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@5bfa8cc5]
 DEBUG [2015-09-01 17:22:12,478] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a9c38eb: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-09-01 17:22:12,478] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-09-01 17:22:12,478] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-09-01 17:22:12,494] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-09-01 17:22:12,494] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:12,509] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-09-01 17:22:12,556] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:22:12,556] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:22:12,587] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:12,629] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:22:12,629] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:22:12,644] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:12,675] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:22:12,675] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-09-01 17:22:12,864] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:12,895] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-09-01 17:22:12,895] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:22:12,958] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@bc57b40
 DEBUG [2015-09-01 17:22:12,958] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@bc57b40
 DEBUG [2015-09-01 17:22:12,958] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@bc57b40
 DEBUG [2015-09-01 17:22:12,958] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@77cf3f8b
 DEBUG [2015-09-01 17:22:12,958] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2427e004
 DEBUG [2015-09-01 17:22:12,958] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@1b58ff9e
 DEBUG [2015-09-01 17:22:12,958] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@76b74e9c
 DEBUG [2015-09-01 17:22:12,958] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@76b74e9c
 DEBUG [2015-09-01 17:22:12,958] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@76b74e9c
 DEBUG [2015-09-01 17:22:12,958] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@23c388c2
 DEBUG [2015-09-01 17:22:12,958] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@23c388c2
 DEBUG [2015-09-01 17:22:12,958] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@23c388c2
 DEBUG [2015-09-01 17:22:12,973] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@3174cb09
 DEBUG [2015-09-01 17:22:12,973] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@3174cb09
 DEBUG [2015-09-01 17:22:12,973] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3174cb09
 DEBUG [2015-09-01 17:22:12,973] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@352c308
 DEBUG [2015-09-01 17:22:12,973] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@352c308
 DEBUG [2015-09-01 17:22:12,973] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@352c308
 DEBUG [2015-09-01 17:22:12,973] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@5a021cb9
 DEBUG [2015-09-01 17:22:12,973] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@5a021cb9
 DEBUG [2015-09-01 17:22:12,973] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5a021cb9
 DEBUG [2015-09-01 17:22:12,973] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@5c77053b
 DEBUG [2015-09-01 17:22:12,973] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@5c77053b
 DEBUG [2015-09-01 17:22:12,973] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c77053b
 DEBUG [2015-09-01 17:22:12,973] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@7072bc39
 DEBUG [2015-09-01 17:22:12,973] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@7072bc39
 DEBUG [2015-09-01 17:22:12,989] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7072bc39
 DEBUG [2015-09-01 17:22:12,989] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@41200e0c
 DEBUG [2015-09-01 17:22:12,989] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@41200e0c
 DEBUG [2015-09-01 17:22:12,989] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@24be2d9c
 DEBUG [2015-09-01 17:22:12,989] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@24be2d9c
 DEBUG [2015-09-01 17:22:12,989] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@702ed190
 DEBUG [2015-09-01 17:22:12,989] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@702ed190
 DEBUG [2015-09-01 17:22:12,989] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@40bffbca
 DEBUG [2015-09-01 17:22:12,989] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@40bffbca
 DEBUG [2015-09-01 17:22:12,989] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@43c67247
 DEBUG [2015-09-01 17:22:12,989] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@43c67247
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@5bd1ceca
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5bd1ceca
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@73393584
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@73393584
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@73393584
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1827a871
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@f8908f6
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f8908f6
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f8908f6
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e11bc55
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@82c57b3
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@82c57b3
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@1734f68
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1734f68
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7dac3fd8
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7dac3fd8
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@6ce1f601
 DEBUG [2015-09-01 17:22:13,005] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6ce1f601
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@20312893
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@20312893
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54ec8cc9
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@cc62a3b
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@3dddbe65
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@3dddbe65
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@3dddbe65
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@251f7d26
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@251f7d26
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@251f7d26
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@60d84f61
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@2575f671
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@2575f671
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@2575f671
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@30c0ccff
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@30c0ccff
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@30c0ccff
 DEBUG [2015-09-01 17:22:13,020] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@5851bd4f
 DEBUG [2015-09-01 17:22:13,036] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@588ab592
 DEBUG [2015-09-01 17:22:13,036] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@588ab592
 DEBUG [2015-09-01 17:22:13,036] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2024293c
 DEBUG [2015-09-01 17:22:13,036] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@5167268
 DEBUG [2015-09-01 17:22:13,036] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5167268
 DEBUG [2015-09-01 17:22:13,036] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1af7f54a
 DEBUG [2015-09-01 17:22:13,036] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@50b8ae8d
 DEBUG [2015-09-01 17:22:13,036] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@4d0402b
 DEBUG [2015-09-01 17:22:13,036] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4d0402b
 DEBUG [2015-09-01 17:22:13,036] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3153ddfc
 DEBUG [2015-09-01 17:22:13,036] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@60afd40d
 DEBUG [2015-09-01 17:22:13,036] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@28a2a3e7
 DEBUG [2015-09-01 17:22:13,036] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3f2049b6
 DEBUG [2015-09-01 17:22:13,036] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@10b3df93
 DEBUG [2015-09-01 17:22:13,036] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@ea27e34
 DEBUG [2015-09-01 17:22:13,036] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@33a2499c
 DEBUG [2015-09-01 17:22:13,036] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e72dba7
  INFO [2015-09-01 17:22:13,067] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-09-01 17:22:13,084] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-09-01 17:22:13,084] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-09-01 17:22:13,084] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-09-01 17:22:13,084] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-09-01 17:22:13,146] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-09-01 17:22:13,146] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-09-01 17:22:13,146] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-09-01 17:22:13,146] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-09-01 17:22:13,146] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-09-01 17:22:13,146] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-09-01 17:22:13,146] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-09-01 17:22:13,162] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-09-01 17:22:13,162] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-09-01 17:22:13,162] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-09-01 17:22:13,162] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-09-01 17:22:13,162] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-09-01 17:22:13,162] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-09-01 17:22:13,162] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-09-01 17:22:13,162] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-09-01 17:22:13,193] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-09-01 17:22:13,209] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-09-01 17:22:13,209] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-09-01 17:22:13,240] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-09-01 17:22:13,240] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-09-01 17:22:13,240] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-09-01 17:22:13,256] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-09-01 17:22:13,287] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-09-01 17:22:13,302] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-09-01 17:22:13,302] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-09-01 17:22:13,302] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-09-01 17:22:13,318] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-09-01 17:22:13,318] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-09-01 17:22:13,318] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-09-01 17:22:13,318] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-09-01 17:22:13,318] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-09-01 17:22:13,318] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-09-01 17:22:13,318] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-09-01 17:22:13,318] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-09-01 17:22:13,318] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-09-01 17:22:13,334] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-09-01 17:22:13,334] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-09-01 17:22:13,334] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-09-01 17:22:13,334] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-09-01 17:22:13,334] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-09-01 17:22:13,334] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-09-01 17:22:13,334] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-09-01 17:22:13,334] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-09-01 17:22:13,334] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-09-01 17:22:13,334] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-09-01 17:22:13,334] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-09-01 17:22:13,334] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-09-01 17:22:13,334] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-09-01 17:22:13,334] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-09-01 17:22:13,334] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-09-01 17:22:13,802] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-09-01 17:22:13,802] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-09-01 17:22:13,818] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-09-01 17:22:13,849] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-09-01 17:22:13,849] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-09-01 17:22:13,849] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-09-01 17:22:13,849] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-09-01 17:22:13,865] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-09-01 17:22:13,865] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-09-01 17:22:13,865] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-09-01 17:22:13,865] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-09-01 17:22:13,865] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-09-01 17:22:13,865] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-09-01 17:22:13,896] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-09-01 17:22:13,896] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-09-01 17:22:13,896] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-09-01 17:22:13,896] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.11.0\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:instantclient_12_1;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=com.twitter.twitter4j.stream.PrintFilterStream, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=invalidate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-09-01 17:22:13,924] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-09-01 17:22:14,064] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-09-01 17:22:14,064] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-09-01 17:22:14,064] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-09-01 17:22:14,064] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-09-01 17:22:14,064] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-09-01 17:22:14,064] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-09-01 17:22:14,111] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:22:14,111] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:22:14,111] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:22:14,111] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:22:14,111] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:22:14,111] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-09-01 17:22:14,111] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:22:14,111] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:22:14,111] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:22:14,111] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:22:14,111] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:22:14,111] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:22:14,143] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-09-01 17:22:14,158] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: 5cd72b4f-d137-4839-b53e-3a61505e5b9a (unnamed)
  INFO [2015-09-01 17:22:14,158] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-09-01 17:22:14,158] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
 DEBUG [2015-09-01 17:22:14,158] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-09-01 17:22:14,158] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-09-01 17:22:14,158] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:22:14,158] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-09-01 17:22:14,158] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:22:14,158] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-09-01 17:22:14,158] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-09-01 17:22:14,158] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-09-01 17:22:14,158] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-09-01 17:22:14,175] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:22:14,175] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:22:14,175] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:14,175] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-09-01 17:22:14,175] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:22:14,175] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:22:14,175] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:14,175] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:14,190] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-09-01 17:22:14,190] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:14,206] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:22:14,206] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-09-01 17:22:14,206] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:14,206] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-09-01 17:22:14,206] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:14,424] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-09-01 17:22:14,424] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-09-01 17:22:14,424] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:14,440] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:14,440] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:22:14,440] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:22:14,456] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:14,456] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:22:14,456] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:22:14,456] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:14,456] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:22:14,456] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:22:14,487] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-09-01 17:22:14,487] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-09-01 17:22:14,487] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:22:14,487] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:14,487] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:22:14,487] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:22:14,487] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:22:14,487] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:22:14,487] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:22:14,487] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:14,487] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:22:14,487] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:22:14,487] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-09-01 17:22:14,487] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-09-01 17:22:14,487] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-09-01 17:22:14,487] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-09-01 17:22:14,487] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-09-01 17:22:14,487] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:22:14,487] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:22:14,487] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:14,502] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-09-01 17:22:14,502] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:22:14,502] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:22:14,502] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:14,502] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:22:14,502] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:14,502] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:22:14,502] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:22:14,502] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:22:14,502] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:22:14,502] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-09-01 17:22:14,502] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-09-01 17:22:14,502] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-09-01 17:22:14,502] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-09-01 17:22:14,502] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-09-01 17:22:14,502] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:14,502] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-09-01 17:22:14,502] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-09-01 17:22:14,502] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-09-01 17:22:14,502] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-09-01 17:22:14,502] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-09-01 17:22:14,518] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-09-01 17:22:14,518] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:14,518] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-09-01 17:22:14,518] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-09-01 17:22:14,518] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-09-01 17:22:14,518] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:14,534] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-09-01 17:22:14,534] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-09-01 17:22:14,534] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-09-01 17:22:14,534] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-09-01 17:22:14,534] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-09-01 17:22:14,534] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:14,534] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-09-01 17:22:14,534] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-09-01 17:22:14,549] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-09-01 17:22:14,549] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-09-01 17:22:14,549] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-09-01 17:22:14,549] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-09-01 17:22:14,549] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:22:14,549] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:22:14,549] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:22:14,549] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:22:14,549] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:22:14,549] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-09-01 17:22:14,549] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-09-01 17:22:14,549] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:22:14,549] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:22:14,549] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:22:14,549] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:22:14,549] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:22:14,549] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:22:14,565] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:14,565] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:22:14,565] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-09-01 17:22:14,581] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@fcc6023] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-09-01 17:22:14,581] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:22:14,581] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-09-01 17:22:14,581] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-09-01 17:22:14,581] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:14,581] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:22:14,581] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-09-01 17:22:14,581] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-09-01 17:22:14,596] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-09-01 17:22:14,596] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-09-01 17:22:14,596] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:14,596] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:22:14,596] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-09-01 17:22:14,596] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-09-01 17:22:14,596] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:14,596] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:22:14,596] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:22:14,596] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:22:14,596] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:22:14,596] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:22:14,596] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@30e9ca13]
 DEBUG [2015-09-01 17:22:14,596] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-09-01 17:22:14,612] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:14,612] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:22:14,612] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-09-01 17:22:14,612] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-09-01 17:22:14,612] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-09-01 17:22:14,690] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'configProperty'
  INFO [2015-09-01 17:22:14,877] (SLF4JLogger.java[info]:83) - Establishing connection.
 DEBUG [2015-09-01 17:22:14,877] (SLF4JLogger.java[debug]:67) - Twitter Stream consumer-1[Establishing connection]
 DEBUG [2015-09-01 17:22:15,081] (SLF4JLogger.java[debug]:67) - Request: 
 DEBUG [2015-09-01 17:22:15,081] (SLF4JLogger.java[debug]:75) - POST https://stream.twitter.com/1.1/statuses/filter.json
 DEBUG [2015-09-01 17:22:15,081] (SLF4JLogger.java[debug]:75) - OAuth base string: POST&https%3A%2F%2Fstream.twitter.com%2F1.1%2Fstatuses%2Ffilter.json&count%3D0%26language%3Dko%26oauth_consumer_key%3DWKzK4qYGZYuoOEYcnS9L50Gej%26oauth_nonce%3D861854255%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1441095735%26oauth_token%3D3147697626-sn2hFfU81AxKN33y6qBbDChO98YptDPfelnq1I3%26oauth_version%3D1.0%26stall_warnings%3Dtrue%26track%3Dtwitter
 DEBUG [2015-09-01 17:22:15,299] (SLF4JLogger.java[debug]:75) - OAuth signature: PfMzlY4ZvXLwuYVcwyWERBirZgw=
 DEBUG [2015-09-01 17:22:15,315] (SLF4JLogger.java[debug]:75) - Authorization: **********************************************************************************************************************************************************************************************************************************************************************************
 DEBUG [2015-09-01 17:22:15,315] (SLF4JLogger.java[debug]:67) - X-Twitter-Client-Version: 4.0.0
 DEBUG [2015-09-01 17:22:15,315] (SLF4JLogger.java[debug]:67) - X-Twitter-Client-URL: http://twitter4j.org/en/twitter4j-4.0.0.xml
 DEBUG [2015-09-01 17:22:15,315] (SLF4JLogger.java[debug]:67) - X-Twitter-Client: Twitter4J
 DEBUG [2015-09-01 17:22:15,315] (SLF4JLogger.java[debug]:67) - User-Agent: twitter4j http://twitter4j.org/ /4.0.0
 DEBUG [2015-09-01 17:22:15,315] (SLF4JLogger.java[debug]:67) - Connection: close
 DEBUG [2015-09-01 17:22:15,315] (SLF4JLogger.java[debug]:67) - Accept-Encoding: gzip
 DEBUG [2015-09-01 17:22:15,315] (SLF4JLogger.java[debug]:75) - Post Params: count=0&track=twitter&language=ko&stall_warnings=true
 DEBUG [2015-09-01 17:22:16,549] (SLF4JLogger.java[debug]:67) - Response: 
 DEBUG [2015-09-01 17:22:16,549] (SLF4JLogger.java[debug]:67) - date: Tue, 01 Sep 2015 08:22:19 GMT
 DEBUG [2015-09-01 17:22:16,549] (SLF4JLogger.java[debug]:67) - HTTP/1.1 200 OK
 DEBUG [2015-09-01 17:22:16,549] (SLF4JLogger.java[debug]:67) - server: tsa
 DEBUG [2015-09-01 17:22:16,549] (SLF4JLogger.java[debug]:67) - transfer-encoding: chunked
 DEBUG [2015-09-01 17:22:16,549] (SLF4JLogger.java[debug]:67) - x-connection-hash: 3823fd261985a6ade06a73f28392def2
 DEBUG [2015-09-01 17:22:16,549] (SLF4JLogger.java[debug]:67) - content-type: application/json
 DEBUG [2015-09-01 17:22:16,549] (SLF4JLogger.java[debug]:67) - connection: close
 DEBUG [2015-09-01 17:22:16,549] (SLF4JLogger.java[debug]:67) - content-Encoding: gzip
  INFO [2015-09-01 17:22:16,549] (SLF4JLogger.java[info]:83) - Connection established.
  INFO [2015-09-01 17:22:16,549] (SLF4JLogger.java[info]:83) - Receiving status stream.
 DEBUG [2015-09-01 17:22:16,565] (SLF4JLogger.java[debug]:67) - Twitter Stream consumer-1[Receiving stream]
 DEBUG [2015-09-01 17:22:16,753] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/MkWQmGV1OP","type":"video","media_url":"http://pbs.twimg.com/ext_tw_video_thumb/638324789766062080/pu/img/qlvgoTPi98JsE3ta.jpg","source_status_id":638325181786644480,"url":"http://t.co/MkWQmGV1OP","indices":[85,107],"sizes":{"small":{"w":340,"h":191,"resize":"fit"},"large":{"w":1024,"h":576,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":338,"resize":"fit"}},"id_str":"638324789766062080","expanded_url":"http://twitter.com/BTS_twt/status/638325181786644480/video/1","source_status_id_str":"638325181786644480","media_url_https":"https://pbs.twimg.com/ext_tw_video_thumb/638324789766062080/pu/img/qlvgoTPi98JsE3ta.jpg","id":638324789766062080,"video_info":{"aspect_ratio":[16,9],"duration_millis":30000,"variants":[{"content_type":"video/webm","bitrate":832000,"url":"https://video.twimg.com/ext_tw_video/638324789766062080/pu/vid/640x360/i2vkbcu-3hoybQ1-.webm"},{"content_type":"video/mp4","bitrate":320000,"url":"https://video.twimg.com/ext_tw_video/638324789766062080/pu/vid/320x180/cF2rJEPeN4MCSBAi.mp4"},{"content_type":"application/x-mpegURL","url":"https://video.twimg.com/ext_tw_video/638324789766062080/pu/pl/nykHKummHW-8KuUj.m3u8"},{"content_type":"video/mp4","bitrate":832000,"url":"https://video.twimg.com/ext_tw_video/638324789766062080/pu/vid/640x360/i2vkbcu-3hoybQ1-.mp4"},{"content_type":"video/mp4","bitrate":2176000,"url":"https://video.twimg.com/ext_tw_video/638324789766062080/pu/vid/1280x720/Hx8hAnUorr_3EeqS.mp4"},{"content_type":"application/dash+xml","url":"https://video.twimg.com/ext_tw_video/638324789766062080/pu/pl/nykHKummHW-8KuUj.mpd"}]}}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/MkWQmGV1OP","indices":[72,94],"sizes":{"small":{"w":340,"h":191,"resize":"fit"},"large":{"w":1024,"h":576,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":338,"resize":"fit"}},"id_str":"638324789766062080","expanded_url":"http://twitter.com/BTS_twt/status/638325181786644480/video/1","media_url_https":"https://pbs.twimg.com/ext_tw_video_thumb/638324789766062080/pu/img/qlvgoTPi98JsE3ta.jpg","id":638324789766062080,"type":"video","media_url":"http://pbs.twimg.com/ext_tw_video_thumb/638324789766062080/pu/img/qlvgoTPi98JsE3ta.jpg","url":"http://t.co/MkWQmGV1OP","video_info":{"aspect_ratio":[16,9],"duration_millis":30000,"variants":[{"content_type":"video/webm","bitrate":832000,"url":"https://video.twimg.com/ext_tw_video/638324789766062080/pu/vid/640x360/i2vkbcu-3hoybQ1-.webm"},{"content_type":"video/mp4","bitrate":320000,"url":"https://video.twimg.com/ext_tw_video/638324789766062080/pu/vid/320x180/cF2rJEPeN4MCSBAi.mp4"},{"content_type":"application/x-mpegURL","url":"https://video.twimg.com/ext_tw_video/638324789766062080/pu/pl/nykHKummHW-8KuUj.m3u8"},{"content_type":"video/mp4","bitrate":832000,"url":"https://video.twimg.com/ext_tw_video/638324789766062080/pu/vid/640x360/i2vkbcu-3hoybQ1-.mp4"},{"content_type":"video/mp4","bitrate":2176000,"url":"https://video.twimg.com/ext_tw_video/638324789766062080/pu/vid/1280x720/Hx8hAnUorr_3EeqS.mp4"},{"content_type":"application/dash+xml","url":"https://video.twimg.com/ext_tw_video/638324789766062080/pu/pl/nykHKummHW-8KuUj.mpd"}]}}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Mon Aug 31 12:19:17 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone<\/a>","retweet_count":28402,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638325181786644480","in_reply_to_user_id":null,"favorite_count":42092,"id":638325181786644480,"text":"조만간 블로그에서 봐요~\n#JHOPE_practice \n#JHOPE_Poppin \n#HopeOnTheStreet\n#H.O.T.S http://t.co/MkWQmGV1OP","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[],"hashtags":[{"indices":[14,29],"text":"JHOPE_practice"},{"indices":[31,44],"text":"JHOPE_Poppin"},{"indices":[46,62],"text":"HopeOnTheStreet"},{"indices":[63,65],"text":"H"}],"media":[{"display_url":"pic.twitter.com/MkWQmGV1OP","indices":[72,94],"sizes":{"small":{"w":340,"h":191,"resize":"fit"},"large":{"w":1024,"h":576,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":338,"resize":"fit"}},"id_str":"638324789766062080","expanded_url":"http://twitter.com/BTS_twt/status/638325181786644480/video/1","media_url_https":"https://pbs.twimg.com/ext_tw_video_thumb/638324789766062080/pu/img/qlvgoTPi98JsE3ta.jpg","id":638324789766062080,"type":"photo","media_url":"http://pbs.twimg.com/ext_tw_video_thumb/638324789766062080/pu/img/qlvgoTPi98JsE3ta.jpg","url":"http://t.co/MkWQmGV1OP"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":28800,"friends_count":66,"profile_image_url_https":"https://pbs.twimg.com/profile_images/612324436012765188/ST6KInHS_normal.jpg","listed_count":6172,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme14/bg.gif","default_profile_image":false,"favourites_count":27,"description":"방탄소년단입니다~~~ \nHi! We're BTS! http://bts.ibighit.com","created_at":"Thu Jul 14 06:32:56 +0000 2011","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme14/bg.gif","protected":false,"screen_name":"BTS_twt","id_str":"335141638","profile_link_color":"FF0000","id":335141638,"geo_enabled":true,"profile_background_color":"FFFFFF","lang":"ko","profile_sidebar_border_color":"FFFFFF","profile_text_color":"333333","verified":true,"profile_image_url":"http://pbs.twimg.com/profile_images/612324436012765188/ST6KInHS_normal.jpg","time_zone":"Irkutsk","url":"http://btsblog.ibighit.com","contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/335141638/1434824850","statuses_count":7488,"follow_request_sent":null,"followers_count":1220734,"profile_use_background_image":true,"default_profile":false,"following":null,"name":"방탄소년단","location":"","profile_sidebar_fill_color":"EFEFEF","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627934748545024","in_reply_to_user_id":null,"favorite_count":0,"id":638627934748545024,"text":"RT @BTS_twt: 조만간 블로그에서 봐요~\n#JHOPE_practice \n#JHOPE_Poppin \n#HopeOnTheStreet\n#H.O.T.S http://t.co/MkWQmGV1OP","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739434","entities":{"urls":[],"hashtags":[{"indices":[27,42],"text":"JHOPE_practice"},{"indices":[44,57],"text":"JHOPE_Poppin"},{"indices":[59,75],"text":"HopeOnTheStreet"},{"indices":[76,78],"text":"H"}],"media":[{"display_url":"pic.twitter.com/MkWQmGV1OP","indices":[85,107],"sizes":{"small":{"w":340,"h":191,"resize":"fit"},"large":{"w":1024,"h":576,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":338,"resize":"fit"}},"id_str":"638324789766062080","expanded_url":"http://twitter.com/BTS_twt/status/638325181786644480/video/1","source_status_id_str":"638325181786644480","media_url_https":"https://pbs.twimg.com/ext_tw_video_thumb/638324789766062080/pu/img/qlvgoTPi98JsE3ta.jpg","id":638324789766062080,"type":"photo","media_url":"http://pbs.twimg.com/ext_tw_video_thumb/638324789766062080/pu/img/qlvgoTPi98JsE3ta.jpg","source_status_id":638325181786644480,"url":"http://t.co/MkWQmGV1OP"}],"user_mentions":[{"indices":[3,11],"screen_name":"BTS_twt","id_str":"335141638","name":"방탄소년단","id":335141638}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":null,"friends_count":163,"profile_image_url_https":"https://pbs.twimg.com/profile_images/629901931280883712/tUbm5oZG_normal.jpg","listed_count":0,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme11/bg.gif","default_profile_image":false,"favourites_count":192,"description":"K I M V T A E","created_at":"Thu Mar 27 01:44:00 +0000 2014","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme11/bg.gif","protected":false,"screen_name":"_cheekycupcake_","id_str":"2413447712","profile_link_color":"B40B43","id":2413447712,"geo_enabled":true,"profile_background_color":"FF6699","lang":"en","profile_sidebar_border_color":"CC3366","profile_text_color":"362720","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/629901931280883712/tUbm5oZG_normal.jpg","time_zone":null,"url":null,"contributors_enabled":false,"profile_background_tile":true,"profile_banner_url":"https://pbs.twimg.com/profile_banners/2413447712/1435294526","statuses_count":1705,"follow_request_sent":null,"followers_count":50,"profile_use_background_image":true,"default_profile":false,"following":null,"name":"nazirahamran_","location":"","profile_sidebar_fill_color":"E5507E","notifications":null}}
 DEBUG [2015-09-01 17:22:16,990] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/DdBx5r11jw","indices":[41,63],"sizes":{"small":{"w":340,"h":453,"resize":"fit"},"large":{"w":768,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":800,"resize":"fit"}},"id_str":"638543979626151936","expanded_url":"http://twitter.com/r_oa_d/status/638543987414974464/photo/1","source_status_id_str":"638543987414974464","media_url_https":"https://pbs.twimg.com/media/CNyQXccUwAAcrIm.jpg","id":638543979626151936,"type":"photo","media_url":"http://pbs.twimg.com/media/CNyQXccUwAAcrIm.jpg","source_status_id":638543987414974464,"url":"http://t.co/DdBx5r11jw"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/DdBx5r11jw","indices":[29,51],"sizes":{"small":{"w":340,"h":453,"resize":"fit"},"large":{"w":768,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":800,"resize":"fit"}},"id_str":"638543979626151936","expanded_url":"http://twitter.com/r_oa_d/status/638543987414974464/photo/1","media_url_https":"https://pbs.twimg.com/media/CNyQXccUwAAcrIm.jpg","id":638543979626151936,"type":"photo","media_url":"http://pbs.twimg.com/media/CNyQXccUwAAcrIm.jpg","url":"http://t.co/DdBx5r11jw"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 02:48:44 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone<\/a>","retweet_count":1,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638543987414974464","in_reply_to_user_id":null,"favorite_count":0,"id":638543987414974464,"text":"요즘은 둘리 산책을 밤에만 나가니까 사진이 없네;; http://t.co/DdBx5r11jw","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/DdBx5r11jw","indices":[29,51],"sizes":{"small":{"w":340,"h":453,"resize":"fit"},"large":{"w":768,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":800,"resize":"fit"}},"id_str":"638543979626151936","expanded_url":"http://twitter.com/r_oa_d/status/638543987414974464/photo/1","media_url_https":"https://pbs.twimg.com/media/CNyQXccUwAAcrIm.jpg","id":638543979626151936,"type":"photo","media_url":"http://pbs.twimg.com/media/CNyQXccUwAAcrIm.jpg","url":"http://t.co/DdBx5r11jw"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":32400,"friends_count":175,"profile_image_url_https":"https://pbs.twimg.com/profile_images/637098475612581888/XweFpWcF_normal.jpg","listed_count":2,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":108,"description":"정청래 이재명 이상호 RT & 구RT하면 차단합니다.","created_at":"Sat Jul 11 09:17:56 +0000 2015","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"r_oa_d","id_str":"3275454882","profile_link_color":"0084B4","id":3275454882,"geo_enabled":true,"profile_background_color":"C0DEED","lang":"ko","profile_sidebar_border_color":"C0DEED","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/637098475612581888/XweFpWcF_normal.jpg","time_zone":"Seoul","url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/3275454882/1439246093","statuses_count":826,"follow_request_sent":null,"followers_count":176,"profile_use_background_image":true,"default_profile":true,"following":null,"name":"다시","location":"","profile_sidebar_fill_color":"DDEEF6","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627935440605184","in_reply_to_user_id":null,"favorite_count":0,"id":638627935440605184,"text":"RT @r_oa_d: 요즘은 둘리 산책을 밤에만 나가니까 사진이 없네;; http://t.co/DdBx5r11jw","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739599","entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/DdBx5r11jw","indices":[41,63],"sizes":{"small":{"w":340,"h":453,"resize":"fit"},"large":{"w":768,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":800,"resize":"fit"}},"id_str":"638543979626151936","expanded_url":"http://twitter.com/r_oa_d/status/638543987414974464/photo/1","source_status_id_str":"638543987414974464","media_url_https":"https://pbs.twimg.com/media/CNyQXccUwAAcrIm.jpg","id":638543979626151936,"type":"photo","media_url":"http://pbs.twimg.com/media/CNyQXccUwAAcrIm.jpg","source_status_id":638543987414974464,"url":"http://t.co/DdBx5r11jw"}],"user_mentions":[{"indices":[3,10],"screen_name":"r_oa_d","id_str":"3275454882","name":"다시","id":3275454882}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":28800,"friends_count":324,"profile_image_url_https":"https://pbs.twimg.com/profile_images/615084188371292161/Fte8fo6r_normal.jpg","listed_count":28,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme19/bg.gif","default_profile_image":false,"favourites_count":42,"description":"친DJ친노친문입니다.","created_at":"Sun Jan 29 12:41:40 +0000 2012","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme19/bg.gif","protected":false,"screen_name":"sjy2089","id_str":"477666100","profile_link_color":"CC0000","id":477666100,"geo_enabled":false,"profile_background_color":"FFF04D","lang":"ko","profile_sidebar_border_color":"FFFFFF","profile_text_color":"0C3E53","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/615084188371292161/Fte8fo6r_normal.jpg","time_zone":"Irkutsk","url":"http://blog.naver.com/sjy2089/40169269452","contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/477666100/1431746327","statuses_count":42177,"follow_request_sent":null,"followers_count":4960,"profile_use_background_image":true,"default_profile":false,"following":null,"name":"지연 [+문재인]","location":"","profile_sidebar_fill_color":"FFF7CC","notifications":null}}
 DEBUG [2015-09-01 17:22:17,099] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/nQZ397cHUT","indices":[139,140],"sizes":{"small":{"w":340,"h":191,"resize":"fit"},"large":{"w":1024,"h":576,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":337,"resize":"fit"}},"id_str":"638548508593664004","expanded_url":"http://twitter.com/R_11919297/status/638548513853300736/photo/1","source_status_id_str":"638548513853300736","media_url_https":"https://pbs.twimg.com/media/CNyUfEKUsAQ443R.jpg","id":638548508593664004,"type":"photo","media_url":"http://pbs.twimg.com/media/CNyUfEKUsAQ443R.jpg","source_status_id":638548513853300736,"url":"http://t.co/nQZ397cHUT"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/nQZ397cHUT","indices":[118,140],"sizes":{"small":{"w":340,"h":191,"resize":"fit"},"large":{"w":1024,"h":576,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":337,"resize":"fit"}},"id_str":"638548508593664004","expanded_url":"http://twitter.com/R_11919297/status/638548513853300736/photo/1","media_url_https":"https://pbs.twimg.com/media/CNyUfEKUsAQ443R.jpg","id":638548508593664004,"type":"photo","media_url":"http://pbs.twimg.com/media/CNyUfEKUsAQ443R.jpg","url":"http://t.co/nQZ397cHUT"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 03:06:44 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweet_count":1975,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638548513853300736","in_reply_to_user_id":null,"favorite_count":145,"id":638548513853300736,"text":"우리반 급훈\nㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ\n실제로 선생님이 쓰신 것.. http://t.co/nQZ397cHUT","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/nQZ397cHUT","indices":[118,140],"sizes":{"small":{"w":340,"h":191,"resize":"fit"},"large":{"w":1024,"h":576,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":337,"resize":"fit"}},"id_str":"638548508593664004","expanded_url":"http://twitter.com/R_11919297/status/638548513853300736/photo/1","media_url_https":"https://pbs.twimg.com/media/CNyUfEKUsAQ443R.jpg","id":638548508593664004,"type":"photo","media_url":"http://pbs.twimg.com/media/CNyUfEKUsAQ443R.jpg","url":"http://t.co/nQZ397cHUT"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":32400,"friends_count":208,"profile_image_url_https":"https://pbs.twimg.com/profile_images/637632045577977857/ZKoY5brx_normal.jpg","listed_count":0,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme6/bg.gif","default_profile_image":false,"favourites_count":878,"description":"그림쟁이    :: 잡덕 커뮤러입니다! 요즘은 닌타마 버닝 중!","created_at":"Sun May 10 13:17:20 +0000 2015","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme6/bg.gif","protected":false,"screen_name":"R_11919297","id_str":"3190847923","profile_link_color":"0084B4","id":3190847923,"geo_enabled":false,"profile_background_color":"709397","lang":"ko","profile_sidebar_border_color":"000000","profile_text_color":"000000","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/637632045577977857/ZKoY5brx_normal.jpg","time_zone":"Seoul","url":null,"contributors_enabled":false,"profile_background_tile":false,"statuses_count":5222,"follow_request_sent":null,"followers_count":137,"profile_use_background_image":true,"default_profile":false,"following":null,"name":"온","location":"","profile_sidebar_fill_color":"000000","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627935398686720","in_reply_to_user_id":null,"favorite_count":0,"id":638627935398686720,"text":"RT @R_11919297: 우리반 급훈\nㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ\n실제로 선생님이 쓰신 것.. http:\u2026","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739589","entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/nQZ397cHUT","indices":[139,140],"sizes":{"small":{"w":340,"h":191,"resize":"fit"},"large":{"w":1024,"h":576,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":337,"resize":"fit"}},"id_str":"638548508593664004","expanded_url":"http://twitter.com/R_11919297/status/638548513853300736/photo/1","source_status_id_str":"638548513853300736","media_url_https":"https://pbs.twimg.com/media/CNyUfEKUsAQ443R.jpg","id":638548508593664004,"type":"photo","media_url":"http://pbs.twimg.com/media/CNyUfEKUsAQ443R.jpg","source_status_id":638548513853300736,"url":"http://t.co/nQZ397cHUT"}],"user_mentions":[{"indices":[3,14],"screen_name":"R_11919297","id_str":"3190847923","name":"온","id":3190847923}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":null,"friends_count":158,"profile_image_url_https":"https://pbs.twimg.com/profile_images/637300630789328896/Vg-ma6qP_normal.jpg","listed_count":0,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":5141,"description":"프로필 확인부탁드립니다  정치계/비덕계 팔로안받으니깐 팔로하지마삼                                     2차 본진/럽라/별나비/잡덕                          러브라이버 주제에 리게이라니 네놈 인생은 망한것이렷다","created_at":"Wed Oct 22 13:36:42 +0000 2014","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"deep622ys","id_str":"2870971644","profile_link_color":"3B94D9","id":2870971644,"geo_enabled":false,"profile_background_color":"000000","lang":"ko","profile_sidebar_border_color":"000000","profile_text_color":"000000","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/637300630789328896/Vg-ma6qP_normal.jpg","time_zone":null,"url":"https://www.evernote.com/shard/s522/sh/804042af-00e5-455b-9fdc-623cde7eab71/eee6fbe9c3f7cbe43921d93a","contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/2870971644/1438621427","statuses_count":77942,"follow_request_sent":null,"followers_count":102,"profile_use_background_image":false,"default_profile":false,"following":null,"name":"←존예(엔트)","location":"헤더는 앤캐가 점령했습니다 다이스키♥/인장헤더는 포요님","profile_sidebar_fill_color":"000000","notifications":null}}
 DEBUG [2015-09-01 17:22:17,209] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/zNovc5aart","indices":[113,135],"sizes":{"small":{"w":340,"h":226,"resize":"fit"},"large":{"w":700,"h":467,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":400,"resize":"fit"}},"id_str":"638498962824032256","expanded_url":"http://twitter.com/cubeunited/status/638498964577218560/photo/1","source_status_id_str":"638498964577218560","media_url_https":"https://pbs.twimg.com/media/CNxnbHyU8AArFdg.jpg","id":638498962824032256,"type":"photo","media_url":"http://pbs.twimg.com/media/CNxnbHyU8AArFdg.jpg","source_status_id":638498964577218560,"url":"http://t.co/zNovc5aart"},{"display_url":"pic.twitter.com/zNovc5aart","indices":[113,135],"sizes":{"small":{"w":340,"h":226,"resize":"fit"},"large":{"w":700,"h":467,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":400,"resize":"fit"}},"id_str":"638498963658686464","expanded_url":"http://twitter.com/cubeunited/status/638498964577218560/photo/1","source_status_id_str":"638498964577218560","media_url_https":"https://pbs.twimg.com/media/CNxnbK5UwAABy8Q.jpg","id":638498963658686464,"type":"photo","media_url":"http://pbs.twimg.com/media/CNxnbK5UwAABy8Q.jpg","source_status_id":638498964577218560,"url":"http://t.co/zNovc5aart"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/zNovc5aart","indices":[97,119],"sizes":{"small":{"w":340,"h":226,"resize":"fit"},"large":{"w":700,"h":467,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":400,"resize":"fit"}},"id_str":"638498962824032256","expanded_url":"http://twitter.com/cubeunited/status/638498964577218560/photo/1","media_url_https":"https://pbs.twimg.com/media/CNxnbHyU8AArFdg.jpg","id":638498962824032256,"type":"photo","media_url":"http://pbs.twimg.com/media/CNxnbHyU8AArFdg.jpg","url":"http://t.co/zNovc5aart"},{"display_url":"pic.twitter.com/zNovc5aart","indices":[97,119],"sizes":{"small":{"w":340,"h":226,"resize":"fit"},"large":{"w":700,"h":467,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":400,"resize":"fit"}},"id_str":"638498963658686464","expanded_url":"http://twitter.com/cubeunited/status/638498964577218560/photo/1","media_url_https":"https://pbs.twimg.com/media/CNxnbK5UwAABy8Q.jpg","id":638498963658686464,"type":"photo","media_url":"http://pbs.twimg.com/media/CNxnbK5UwAABy8Q.jpg","url":"http://t.co/zNovc5aart"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Mon Aug 31 23:49:50 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client<\/a>","retweet_count":2417,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638498964577218560","in_reply_to_user_id":null,"favorite_count":1555,"id":638498964577218560,"text":"[#뮤지컬_신데렐라] 크리스토퍼 왕자 #양요섭 의 열기가득 연습실 현장! 9월 최고의 무대를 위해 구슬땀 흘리고 있는 양요섭, 많이 기대해주세요 :) #신데렐라 #BEAST http://t.co/zNovc5aart","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[],"hashtags":[{"indices":[1,10],"text":"뮤지컬_신데렐라"},{"indices":[21,25],"text":"양요섭"},{"indices":[84,89],"text":"신데렐라"},{"indices":[90,96],"text":"BEAST"}],"media":[{"display_url":"pic.twitter.com/zNovc5aart","indices":[97,119],"sizes":{"small":{"w":340,"h":226,"resize":"fit"},"large":{"w":700,"h":467,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":400,"resize":"fit"}},"id_str":"638498962824032256","expanded_url":"http://twitter.com/cubeunited/status/638498964577218560/photo/1","media_url_https":"https://pbs.twimg.com/media/CNxnbHyU8AArFdg.jpg","id":638498962824032256,"type":"photo","media_url":"http://pbs.twimg.com/media/CNxnbHyU8AArFdg.jpg","url":"http://t.co/zNovc5aart"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":null,"friends_count":29,"profile_image_url_https":"https://pbs.twimg.com/profile_images/499811462953443328/8pAwAGpe_normal.jpeg","listed_count":2593,"profile_background_image_url":"http://pbs.twimg.com/profile_background_images/499811078788743168/eraW_a1f.jpeg","default_profile_image":false,"favourites_count":1,"description":"4Minute, BEAST, G.NA , BTOB , 노지훈, 김기리, 비, 신지훈, 곽승남, 오예리, 나종찬","created_at":"Mon Aug 01 14:58:08 +0000 2011","is_translator":false,"profile_background_image_url_https":"https://pbs.twimg.com/profile_background_images/499811078788743168/eraW_a1f.jpeg","protected":false,"screen_name":"cubeunited","id_str":"346604946","profile_link_color":"0084B4","id":346604946,"geo_enabled":true,"profile_background_color":"C0DEED","lang":"ko","profile_sidebar_border_color":"000000","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/499811462953443328/8pAwAGpe_normal.jpeg","time_zone":null,"url":"http://www.cubeent.co.kr","contributors_enabled":false,"profile_background_tile":true,"profile_banner_url":"https://pbs.twimg.com/profile_banners/346604946/1407999331","statuses_count":2688,"follow_request_sent":null,"followers_count":461529,"profile_use_background_image":true,"default_profile":false,"following":null,"name":"CUBE ENTERTAINMENT","location":"GLOBE","profile_sidebar_fill_color":"DDEEF6","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627935520358400","in_reply_to_user_id":null,"favorite_count":0,"id":638627935520358400,"text":"RT @cubeunited: [#뮤지컬_신데렐라] 크리스토퍼 왕자 #양요섭 의 열기가득 연습실 현장! 9월 최고의 무대를 위해 구슬땀 흘리고 있는 양요섭, 많이 기대해주세요 :) #신데렐라 #BEAST http://t.co/zNovc5aart","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739618","entities":{"urls":[],"hashtags":[{"indices":[17,26],"text":"뮤지컬_신데렐라"},{"indices":[37,41],"text":"양요섭"},{"indices":[100,105],"text":"신데렐라"},{"indices":[106,112],"text":"BEAST"}],"media":[{"display_url":"pic.twitter.com/zNovc5aart","indices":[113,135],"sizes":{"small":{"w":340,"h":226,"resize":"fit"},"large":{"w":700,"h":467,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":400,"resize":"fit"}},"id_str":"638498962824032256","expanded_url":"http://twitter.com/cubeunited/status/638498964577218560/photo/1","source_status_id_str":"638498964577218560","media_url_https":"https://pbs.twimg.com/media/CNxnbHyU8AArFdg.jpg","id":638498962824032256,"type":"photo","media_url":"http://pbs.twimg.com/media/CNxnbHyU8AArFdg.jpg","source_status_id":638498964577218560,"url":"http://t.co/zNovc5aart"}],"user_mentions":[{"indices":[3,14],"screen_name":"cubeunited","id_str":"346604946","name":"CUBE ENTERTAINMENT","id":346604946}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":null,"friends_count":19,"profile_image_url_https":"https://pbs.twimg.com/profile_images/541451128995471360/plSp4Z8c_normal.jpeg","listed_count":0,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":263,"description":"beast♥beauty","created_at":"Wed Apr 04 08:10:14 +0000 2012","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"sszin1213","id_str":"544944236","profile_link_color":"0084B4","id":544944236,"geo_enabled":false,"profile_background_color":"C0DEED","lang":"ko","profile_sidebar_border_color":"C0DEED","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/541451128995471360/plSp4Z8c_normal.jpeg","time_zone":null,"url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/544944236/1412594164","statuses_count":1070,"follow_request_sent":null,"followers_count":18,"profile_use_background_image":true,"default_profile":true,"following":null,"name":"SUJIN","location":"","profile_sidebar_fill_color":"DDEEF6","notifications":null}}
 DEBUG [2015-09-01 17:22:17,319] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/NIhE3ethcg","indices":[47,69],"sizes":{"small":{"w":340,"h":395,"resize":"fit"},"large":{"w":599,"h":697,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":599,"h":697,"resize":"fit"}},"id_str":"638627926569652224","expanded_url":"http://twitter.com/zustever/status/638627935000260608/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzctzLUEAAGcI2.jpg","id":638627926569652224,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzctzLUEAAGcI2.jpg","url":"http://t.co/NIhE3ethcg"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627935000260608","in_reply_to_user_id":null,"favorite_count":0,"id":638627935000260608,"text":"빙고를 해보았다. 빙고 하나도 안뜸.\n\n그런데 이걸 할수록 내가 노답인걸 느껴짐.. http://t.co/NIhE3ethcg","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739494","entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/NIhE3ethcg","indices":[47,69],"sizes":{"small":{"w":340,"h":395,"resize":"fit"},"large":{"w":599,"h":697,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":599,"h":697,"resize":"fit"}},"id_str":"638627926569652224","expanded_url":"http://twitter.com/zustever/status/638627935000260608/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzctzLUEAAGcI2.jpg","id":638627926569652224,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzctzLUEAAGcI2.jpg","url":"http://t.co/NIhE3ethcg"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":-25200,"friends_count":527,"profile_image_url_https":"https://pbs.twimg.com/profile_images/625623968121098242/8UaQPyja_normal.jpg","listed_count":17,"profile_background_image_url":"http://pbs.twimg.com/profile_background_images/588237961990246400/iRI1uPeu.jpg","default_profile_image":false,"favourites_count":6493,"description":"La Dolce Vita / 공부도 잘하고 게임도 잘하고픈 3.5차원적인 지구인 / 카페 알바생 / 은근히 잡덕 + 애니덕후 / A-Heart 26th / LOL / SC2 / Sony Xperia Z3 Compact","created_at":"Wed Feb 23 11:24:33 +0000 2011","is_translator":false,"profile_background_image_url_https":"https://pbs.twimg.com/profile_background_images/588237961990246400/iRI1uPeu.jpg","protected":false,"screen_name":"zustever","id_str":"256462752","profile_link_color":"8266CC","id":256462752,"geo_enabled":false,"profile_background_color":"F5ABB5","lang":"ko","profile_sidebar_border_color":"FFFFFF","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/625623968121098242/8UaQPyja_normal.jpg","time_zone":"Pacific Time (US & Canada)","url":"http://twpf.jp/zustever","contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/256462752/1437914934","statuses_count":170118,"follow_request_sent":null,"followers_count":1080,"profile_use_background_image":true,"default_profile":false,"following":null,"name":"카페알바뛰는 저스트에버","location":"어느 우주 은하의 리듬 속","profile_sidebar_fill_color":"DDEEF6","notifications":null}}
 DEBUG [2015-09-01 17:22:17,433] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/a7n7XhvEUP","indices":[6,28],"sizes":{"small":{"w":340,"h":340,"resize":"fit"},"large":{"w":494,"h":494,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":494,"h":494,"resize":"fit"}},"id_str":"638627928289316864","expanded_url":"http://twitter.com/KMHYRM/status/638627935222501381/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzct5lUEAAD51I.jpg","id":638627928289316864,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzct5lUEAAD51I.jpg","url":"http://t.co/a7n7XhvEUP"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone<\/a>","retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627935222501381","in_reply_to_user_id":null,"favorite_count":0,"id":638627935222501381,"text":"✨준면시✨ http://t.co/a7n7XhvEUP","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739547","entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/a7n7XhvEUP","indices":[6,28],"sizes":{"small":{"w":340,"h":340,"resize":"fit"},"large":{"w":494,"h":494,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":494,"h":494,"resize":"fit"}},"id_str":"638627928289316864","expanded_url":"http://twitter.com/KMHYRM/status/638627935222501381/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzct5lUEAAD51I.jpg","id":638627928289316864,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzct5lUEAAD51I.jpg","url":"http://t.co/a7n7XhvEUP"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":null,"friends_count":421,"profile_image_url_https":"https://pbs.twimg.com/profile_images/638207995155906560/zB6Jvk_B_normal.jpg","listed_count":1,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":81,"description":"며니는 사랑둥이얌","created_at":"Fri Oct 10 14:32:39 +0000 2014","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"KMHYRM","id_str":"2850430410","profile_link_color":"F5ABB5","id":2850430410,"geo_enabled":true,"profile_background_color":"FFFFFF","lang":"ko","profile_sidebar_border_color":"000000","profile_text_color":"000000","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/638207995155906560/zB6Jvk_B_normal.jpg","time_zone":null,"url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/2850430410/1440158354","statuses_count":5259,"follow_request_sent":null,"followers_count":25,"profile_use_background_image":false,"default_profile":false,"following":null,"name":"✨이상해씨✨","location":"","profile_sidebar_fill_color":"000000","notifications":null}}
 DEBUG [2015-09-01 17:22:17,542] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/7R7faptsuq","type":"animated_gif","media_url":"http://pbs.twimg.com/tweet_video_thumb/CNzXVQpUAAAYcYX.png","source_status_id":638622034323357696,"url":"http://t.co/7R7faptsuq","indices":[64,86],"sizes":{"small":{"w":268,"h":294,"resize":"fit"},"large":{"w":268,"h":294,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":268,"h":294,"resize":"fit"}},"id_str":"638622007425236992","expanded_url":"http://twitter.com/merrypeal412/status/638622034323357696/photo/1","source_status_id_str":"638622034323357696","media_url_https":"https://pbs.twimg.com/tweet_video_thumb/CNzXVQpUAAAYcYX.png","id":638622007425236992,"video_info":{"aspect_ratio":[134,147],"variants":[{"content_type":"video/mp4","bitrate":0,"url":"https://pbs.twimg.com/tweet_video/CNzXVQpUAAAYcYX.mp4"}]}}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/7R7faptsuq","indices":[46,68],"sizes":{"small":{"w":268,"h":294,"resize":"fit"},"large":{"w":268,"h":294,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":268,"h":294,"resize":"fit"}},"id_str":"638622007425236992","expanded_url":"http://twitter.com/merrypeal412/status/638622034323357696/photo/1","media_url_https":"https://pbs.twimg.com/tweet_video_thumb/CNzXVQpUAAAYcYX.png","id":638622007425236992,"type":"animated_gif","media_url":"http://pbs.twimg.com/tweet_video_thumb/CNzXVQpUAAAYcYX.png","url":"http://t.co/7R7faptsuq","video_info":{"aspect_ratio":[134,147],"variants":[{"content_type":"video/mp4","bitrate":0,"url":"https://pbs.twimg.com/tweet_video/CNzXVQpUAAAYcYX.mp4"}]}}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 07:58:52 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweet_count":195,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638622034323357696","in_reply_to_user_id":null,"favorite_count":253,"id":638622034323357696,"text":"팬들이 이름 부르니까 웃음 터진 세훈이😇\nhttp://t.co/Oqy6J5ZNws http://t.co/7R7faptsuq","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[{"display_url":"ww2.sinaimg.cn/large/86eb1a98\u2026","indices":[23,45],"expanded_url":"http://ww2.sinaimg.cn/large/86eb1a98jw1evmu4uiocmg207g087npd.gif","url":"http://t.co/Oqy6J5ZNws"}],"hashtags":[],"media":[{"display_url":"pic.twitter.com/7R7faptsuq","indices":[46,68],"sizes":{"small":{"w":268,"h":294,"resize":"fit"},"large":{"w":268,"h":294,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":268,"h":294,"resize":"fit"}},"id_str":"638622007425236992","expanded_url":"http://twitter.com/merrypeal412/status/638622034323357696/photo/1","media_url_https":"https://pbs.twimg.com/tweet_video_thumb/CNzXVQpUAAAYcYX.png","id":638622007425236992,"type":"photo","media_url":"http://pbs.twimg.com/tweet_video_thumb/CNzXVQpUAAAYcYX.png","url":"http://t.co/7R7faptsuq"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":28800,"friends_count":268,"profile_image_url_https":"https://pbs.twimg.com/profile_images/497366723046035459/knEzpd9x_normal.jpeg","listed_count":473,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":122,"description":"LIKE : 오세훈, 엑소","created_at":"Fri Jan 18 15:11:33 +0000 2013","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"merrypeal412","id_str":"1101216254","profile_link_color":"0084B4","id":1101216254,"geo_enabled":true,"profile_background_color":"C0DEED","lang":"ko","profile_sidebar_border_color":"C0DEED","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/497366723046035459/knEzpd9x_normal.jpeg","time_zone":"Irkutsk","url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/1101216254/1398445388","statuses_count":36852,"follow_request_sent":null,"followers_count":41181,"profile_use_background_image":true,"default_profile":true,"following":null,"name":"메리필","location":"","profile_sidebar_fill_color":"DDEEF6","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627935616823296","in_reply_to_user_id":null,"favorite_count":0,"id":638627935616823296,"text":"RT @merrypeal412: 팬들이 이름 부르니까 웃음 터진 세훈이😇\nhttp://t.co/Oqy6J5ZNws http://t.co/7R7faptsuq","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739641","entities":{"urls":[{"display_url":"ww2.sinaimg.cn/large/86eb1a98\u2026","indices":[41,63],"expanded_url":"http://ww2.sinaimg.cn/large/86eb1a98jw1evmu4uiocmg207g087npd.gif","url":"http://t.co/Oqy6J5ZNws"}],"hashtags":[],"media":[{"display_url":"pic.twitter.com/7R7faptsuq","indices":[64,86],"sizes":{"small":{"w":268,"h":294,"resize":"fit"},"large":{"w":268,"h":294,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":268,"h":294,"resize":"fit"}},"id_str":"638622007425236992","expanded_url":"http://twitter.com/merrypeal412/status/638622034323357696/photo/1","source_status_id_str":"638622034323357696","media_url_https":"https://pbs.twimg.com/tweet_video_thumb/CNzXVQpUAAAYcYX.png","id":638622007425236992,"type":"photo","media_url":"http://pbs.twimg.com/tweet_video_thumb/CNzXVQpUAAAYcYX.png","source_status_id":638622034323357696,"url":"http://t.co/7R7faptsuq"}],"user_mentions":[{"indices":[3,16],"screen_name":"merrypeal412","id_str":"1101216254","name":"메리필","id":1101216254}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":28800,"friends_count":187,"profile_image_url_https":"https://pbs.twimg.com/profile_images/637513910807977984/7EA7pUVK_normal.jpg","listed_count":0,"profile_background_image_url":"http://pbs.twimg.com/profile_background_images/578078233607847936/1GP4nzR1.jpeg","default_profile_image":false,"favourites_count":427,"description":"백현이가 행복하면 그걸로 된거죠, 뭐.","created_at":"Sat Feb 07 15:44:22 +0000 2015","is_translator":false,"profile_background_image_url_https":"https://pbs.twimg.com/profile_background_images/578078233607847936/1GP4nzR1.jpeg","protected":false,"screen_name":"bh_srh","id_str":"3012541699","profile_link_color":"A465FD","id":3012541699,"geo_enabled":false,"profile_background_color":"F6F6F6","lang":"ko","profile_sidebar_border_color":"000000","profile_text_color":"000000","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/637513910807977984/7EA7pUVK_normal.jpg","time_zone":"Irkutsk","url":null,"contributors_enabled":false,"profile_background_tile":true,"profile_banner_url":"https://pbs.twimg.com/profile_banners/3012541699/1440946893","statuses_count":2922,"follow_request_sent":null,"followers_count":119,"profile_use_background_image":false,"default_profile":false,"following":null,"name":"세니의 비비가 되고픈 백누니✌","location":"잡식 / FUB 자유","profile_sidebar_fill_color":"000000","notifications":null}}
 DEBUG [2015-09-01 17:22:17,651] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/OeFOMp6QMT","indices":[65,87],"sizes":{"small":{"w":340,"h":480,"resize":"fit"},"large":{"w":724,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":848,"resize":"fit"}},"id_str":"629517756229029888","expanded_url":"http://twitter.com/MellyKMK/status/629517766433767424/photo/1","source_status_id_str":"629517766433767424","media_url_https":"https://pbs.twimg.com/media/CLx_EF_VEAAwEvk.jpg","id":629517756229029888,"type":"photo","media_url":"http://pbs.twimg.com/media/CLx_EF_VEAAwEvk.jpg","source_status_id":629517766433767424,"url":"http://t.co/OeFOMp6QMT"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/OeFOMp6QMT","indices":[51,73],"sizes":{"small":{"w":340,"h":480,"resize":"fit"},"large":{"w":724,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":848,"resize":"fit"}},"id_str":"629517756229029888","expanded_url":"http://twitter.com/MellyKMK/status/629517766433767424/photo/1","media_url_https":"https://pbs.twimg.com/media/CLx_EF_VEAAwEvk.jpg","id":629517756229029888,"type":"photo","media_url":"http://pbs.twimg.com/media/CLx_EF_VEAAwEvk.jpg","url":"http://t.co/OeFOMp6QMT"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Fri Aug 07 05:01:46 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone<\/a>","retweet_count":1388,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"629517766433767424","in_reply_to_user_id":null,"favorite_count":352,"id":629517766433767424,"text":"호주 악마 쉐이크로 유명했던 아래 짤이 이태원 뿐만 아니라 건대 스타시티에도 생긴다고 한다 http://t.co/OeFOMp6QMT","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/OeFOMp6QMT","indices":[51,73],"sizes":{"small":{"w":340,"h":480,"resize":"fit"},"large":{"w":724,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":848,"resize":"fit"}},"id_str":"629517756229029888","expanded_url":"http://twitter.com/MellyKMK/status/629517766433767424/photo/1","media_url_https":"https://pbs.twimg.com/media/CLx_EF_VEAAwEvk.jpg","id":629517756229029888,"type":"photo","media_url":"http://pbs.twimg.com/media/CLx_EF_VEAAwEvk.jpg","url":"http://t.co/OeFOMp6QMT"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":-36000,"friends_count":66,"profile_image_url_https":"https://pbs.twimg.com/profile_images/540212681311911937/5S8tqVHb_normal.png","listed_count":59,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":129,"description":"Such is life. 즐기세ㅇㅕ","created_at":"Wed Aug 25 14:53:50 +0000 2010","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"MellyKMK","id_str":"182845246","profile_link_color":"0084B4","id":182845246,"geo_enabled":false,"profile_background_color":"C0DEED","lang":"en","profile_sidebar_border_color":"C0DEED","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/540212681311911937/5S8tqVHb_normal.png","time_zone":"Hawaii","url":"http://ask.fm/MellyKMK","contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/182845246/1410699098","statuses_count":33539,"follow_request_sent":null,"followers_count":6749,"profile_use_background_image":true,"default_profile":true,"following":null,"name":"쫌좀벌레","location":" ","profile_sidebar_fill_color":"DDEEF6","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627935730008064","in_reply_to_user_id":null,"favorite_count":0,"id":638627935730008064,"text":"RT @MellyKMK: 호주 악마 쉐이크로 유명했던 아래 짤이 이태원 뿐만 아니라 건대 스타시티에도 생긴다고 한다 http://t.co/OeFOMp6QMT","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739668","entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/OeFOMp6QMT","indices":[65,87],"sizes":{"small":{"w":340,"h":480,"resize":"fit"},"large":{"w":724,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":848,"resize":"fit"}},"id_str":"629517756229029888","expanded_url":"http://twitter.com/MellyKMK/status/629517766433767424/photo/1","source_status_id_str":"629517766433767424","media_url_https":"https://pbs.twimg.com/media/CLx_EF_VEAAwEvk.jpg","id":629517756229029888,"type":"photo","media_url":"http://pbs.twimg.com/media/CLx_EF_VEAAwEvk.jpg","source_status_id":629517766433767424,"url":"http://t.co/OeFOMp6QMT"}],"user_mentions":[{"indices":[3,12],"screen_name":"MellyKMK","id_str":"182845246","name":"쫌좀벌레","id":182845246}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":null,"friends_count":88,"profile_image_url_https":"https://pbs.twimg.com/profile_images/635750767702339584/W-RbXB91_normal.jpg","listed_count":0,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":261,"description":null,"created_at":"Sun Aug 23 20:14:44 +0000 2015","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"PPi_cm","id_str":"3327190789","profile_link_color":"F5ABB5","id":3327190789,"geo_enabled":false,"profile_background_color":"000000","lang":"ko","profile_sidebar_border_color":"000000","profile_text_color":"000000","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/635750767702339584/W-RbXB91_normal.jpg","time_zone":null,"url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/3327190789/1440360962","statuses_count":1446,"follow_request_sent":null,"followers_count":59,"profile_use_background_image":false,"default_profile":false,"following":null,"name":"네입 먹힌 파이치킨","location":"","profile_sidebar_fill_color":"000000","notifications":null}}
 DEBUG [2015-09-01 17:22:17,762] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/JAbjaJdOyH","indices":[82,104],"sizes":{"small":{"w":340,"h":396,"resize":"fit"},"large":{"w":600,"h":700,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":700,"resize":"fit"}},"id_str":"638616561364791296","expanded_url":"http://twitter.com/stereogenic_C/status/638616566792216576/photo/1","source_status_id_str":"638616566792216576","media_url_https":"https://pbs.twimg.com/media/CNzSYQfUcAAsm7J.jpg","id":638616561364791296,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzSYQfUcAAsm7J.jpg","source_status_id":638616566792216576,"url":"http://t.co/JAbjaJdOyH"},{"display_url":"pic.twitter.com/JAbjaJdOyH","indices":[82,104],"sizes":{"small":{"w":340,"h":396,"resize":"fit"},"large":{"w":600,"h":700,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":700,"resize":"fit"}},"id_str":"638616563516477440","expanded_url":"http://twitter.com/stereogenic_C/status/638616566792216576/photo/1","source_status_id_str":"638616566792216576","media_url_https":"https://pbs.twimg.com/media/CNzSYYgUkAATyzn.jpg","id":638616563516477440,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzSYYgUkAATyzn.jpg","source_status_id":638616566792216576,"url":"http://t.co/JAbjaJdOyH"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/JAbjaJdOyH","indices":[63,85],"sizes":{"small":{"w":340,"h":396,"resize":"fit"},"large":{"w":600,"h":700,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":700,"resize":"fit"}},"id_str":"638616561364791296","expanded_url":"http://twitter.com/stereogenic_C/status/638616566792216576/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzSYQfUcAAsm7J.jpg","id":638616561364791296,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzSYQfUcAAsm7J.jpg","url":"http://t.co/JAbjaJdOyH"},{"display_url":"pic.twitter.com/JAbjaJdOyH","indices":[63,85],"sizes":{"small":{"w":340,"h":396,"resize":"fit"},"large":{"w":600,"h":700,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":700,"resize":"fit"}},"id_str":"638616563516477440","expanded_url":"http://twitter.com/stereogenic_C/status/638616566792216576/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzSYYgUkAATyzn.jpg","id":638616563516477440,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzSYYgUkAATyzn.jpg","url":"http://t.co/JAbjaJdOyH"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 07:37:09 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweet_count":1104,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638616566792216576","in_reply_to_user_id":null,"favorite_count":64,"id":638616566792216576,"text":"삼성 애플 광고비교 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ개적절ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ http://t.co/JAbjaJdOyH","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/JAbjaJdOyH","indices":[63,85],"sizes":{"small":{"w":340,"h":396,"resize":"fit"},"large":{"w":600,"h":700,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":700,"resize":"fit"}},"id_str":"638616561364791296","expanded_url":"http://twitter.com/stereogenic_C/status/638616566792216576/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzSYQfUcAAsm7J.jpg","id":638616561364791296,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzSYQfUcAAsm7J.jpg","url":"http://t.co/JAbjaJdOyH"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":28800,"friends_count":268,"profile_image_url_https":"https://pbs.twimg.com/profile_images/562967200697679872/KbhmMBf4_normal.jpeg","listed_count":0,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme13/bg.gif","default_profile_image":false,"favourites_count":896,"description":"익스페리멘탈컨템포러리일렉트로어쿠스틱뮤직 좋아합니다:-)","created_at":"Sat Jan 05 14:31:00 +0000 2013","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme13/bg.gif","protected":false,"screen_name":"stereogenic_C","id_str":"1063115244","profile_link_color":"93A644","id":1063115244,"geo_enabled":false,"profile_background_color":"B2DFDA","lang":"ko","profile_sidebar_border_color":"EEEEEE","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/562967200697679872/KbhmMBf4_normal.jpeg","time_zone":"Irkutsk","url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/1063115244/1431447539","statuses_count":16086,"follow_request_sent":null,"followers_count":167,"profile_use_background_image":true,"default_profile":false,"following":null,"name":"캘러(자유인)","location":"","profile_sidebar_fill_color":"FFFFFF","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627935780376576","in_reply_to_user_id":null,"favorite_count":0,"id":638627935780376576,"text":"RT @stereogenic_C: 삼성 애플 광고비교 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ개적절ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ http://t.co/JAbjaJdOyH","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739680","entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/JAbjaJdOyH","indices":[82,104],"sizes":{"small":{"w":340,"h":396,"resize":"fit"},"large":{"w":600,"h":700,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":700,"resize":"fit"}},"id_str":"638616561364791296","expanded_url":"http://twitter.com/stereogenic_C/status/638616566792216576/photo/1","source_status_id_str":"638616566792216576","media_url_https":"https://pbs.twimg.com/media/CNzSYQfUcAAsm7J.jpg","id":638616561364791296,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzSYQfUcAAsm7J.jpg","source_status_id":638616566792216576,"url":"http://t.co/JAbjaJdOyH"}],"user_mentions":[{"indices":[3,17],"screen_name":"stereogenic_C","id_str":"1063115244","name":"캘러(자유인)","id":1063115244}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":-25200,"friends_count":100,"profile_image_url_https":"https://pbs.twimg.com/profile_images/628504339909206017/FnWllDEx_normal.png","listed_count":1,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":136,"description":"FUB자유 아는사람만맞팔해요\n실친블락","created_at":"Sun Aug 02 07:07:25 +0000 2015","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"SUGAR_CLING","id_str":"3304081525","profile_link_color":"F5ABB5","id":3304081525,"geo_enabled":false,"profile_background_color":"000000","lang":"ko","profile_sidebar_border_color":"000000","profile_text_color":"000000","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/628504339909206017/FnWllDEx_normal.png","time_zone":"Pacific Time (US & Canada)","url":"http://hetni.tistory.com/","contributors_enabled":false,"profile_background_tile":false,"statuses_count":132,"follow_request_sent":null,"followers_count":140,"profile_use_background_image":false,"default_profile":false,"following":null,"name":"햇니","location":"","profile_sidebar_fill_color":"000000","notifications":null}}
 DEBUG [2015-09-01 17:22:17,871] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/y8GQwvCtjL","indices":[35,57],"sizes":{"small":{"w":340,"h":360,"resize":"fit"},"large":{"w":949,"h":1008,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":636,"resize":"fit"}},"id_str":"638523471597735936","expanded_url":"http://twitter.com/mmautt/status/638523472512073728/photo/1","source_status_id_str":"638523472512073728","media_url_https":"https://pbs.twimg.com/media/CNx9tuFVEAAMTCW.jpg","id":638523471597735936,"type":"photo","media_url":"http://pbs.twimg.com/media/CNx9tuFVEAAMTCW.jpg","source_status_id":638523472512073728,"url":"http://t.co/y8GQwvCtjL"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/y8GQwvCtjL","indices":[23,45],"sizes":{"small":{"w":340,"h":360,"resize":"fit"},"large":{"w":949,"h":1008,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":636,"resize":"fit"}},"id_str":"638523471597735936","expanded_url":"http://twitter.com/mmautt/status/638523472512073728/photo/1","media_url_https":"https://pbs.twimg.com/media/CNx9tuFVEAAMTCW.jpg","id":638523471597735936,"type":"photo","media_url":"http://pbs.twimg.com/media/CNx9tuFVEAAMTCW.jpg","url":"http://t.co/y8GQwvCtjL"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 01:27:13 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client<\/a>","retweet_count":182,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638523472512073728","in_reply_to_user_id":null,"favorite_count":140,"id":638523472512073728,"text":"왜 머리가 세개나 달려있지.. 릭제키ㅎㅎ http://t.co/y8GQwvCtjL","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/y8GQwvCtjL","indices":[23,45],"sizes":{"small":{"w":340,"h":360,"resize":"fit"},"large":{"w":949,"h":1008,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":636,"resize":"fit"}},"id_str":"638523471597735936","expanded_url":"http://twitter.com/mmautt/status/638523472512073728/photo/1","media_url_https":"https://pbs.twimg.com/media/CNx9tuFVEAAMTCW.jpg","id":638523471597735936,"type":"photo","media_url":"http://pbs.twimg.com/media/CNx9tuFVEAAMTCW.jpg","url":"http://t.co/y8GQwvCtjL"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":32400,"friends_count":386,"profile_image_url_https":"https://pbs.twimg.com/profile_images/636484552840474624/NYqGWNhb_normal.jpg","listed_count":60,"profile_background_image_url":"http://pbs.twimg.com/profile_background_images/498435805220589568/1XbPSfKD.jpeg","default_profile_image":false,"favourites_count":5090,"description":"힘이 넘치는 잡덕 /  FUB free /\n알람이 없어서 답 멘션이 느립니다","created_at":"Sat May 31 15:31:00 +0000 2014","is_translator":false,"profile_background_image_url_https":"https://pbs.twimg.com/profile_background_images/498435805220589568/1XbPSfKD.jpeg","protected":false,"screen_name":"mmautt","id_str":"2537715373","profile_link_color":"ABB8C2","id":2537715373,"geo_enabled":false,"profile_background_color":"020812","lang":"ko","profile_sidebar_border_color":"000000","profile_text_color":"020812","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/636484552840474624/NYqGWNhb_normal.jpg","time_zone":"Seoul","url":null,"contributors_enabled":false,"profile_background_tile":false,"statuses_count":3895,"follow_request_sent":null,"followers_count":3837,"profile_use_background_image":false,"default_profile":false,"following":null,"name":"무트","location":"","profile_sidebar_fill_color":"2280A9","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627935641997313","in_reply_to_user_id":null,"favorite_count":0,"id":638627935641997313,"text":"RT @mmautt: 왜 머리가 세개나 달려있지.. 릭제키ㅎㅎ http://t.co/y8GQwvCtjL","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739647","entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/y8GQwvCtjL","indices":[35,57],"sizes":{"small":{"w":340,"h":360,"resize":"fit"},"large":{"w":949,"h":1008,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":636,"resize":"fit"}},"id_str":"638523471597735936","expanded_url":"http://twitter.com/mmautt/status/638523472512073728/photo/1","source_status_id_str":"638523472512073728","media_url_https":"https://pbs.twimg.com/media/CNx9tuFVEAAMTCW.jpg","id":638523471597735936,"type":"photo","media_url":"http://pbs.twimg.com/media/CNx9tuFVEAAMTCW.jpg","source_status_id":638523472512073728,"url":"http://t.co/y8GQwvCtjL"}],"user_mentions":[{"indices":[3,10],"screen_name":"mmautt","id_str":"2537715373","name":"무트","id":2537715373}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":-25200,"friends_count":53,"profile_image_url_https":"https://pbs.twimg.com/profile_images/620488593279029249/h9Af1UQP_normal.jpg","listed_count":1,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":122,"description":null,"created_at":"Mon Jul 13 06:57:01 +0000 2015","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"Noogyung","id_str":"3278266172","profile_link_color":"0084B4","id":3278266172,"geo_enabled":false,"profile_background_color":"C0DEED","lang":"ko","profile_sidebar_border_color":"C0DEED","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/620488593279029249/h9Af1UQP_normal.jpg","time_zone":"Pacific Time (US & Canada)","url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/3278266172/1438936543","statuses_count":1612,"follow_request_sent":null,"followers_count":26,"profile_use_background_image":true,"default_profile":true,"following":null,"name":"커미션)누경","location":"","profile_sidebar_fill_color":"DDEEF6","notifications":null}}
 DEBUG [2015-09-01 17:22:17,980] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/lVTLQLHFEO","indices":[107,129],"sizes":{"small":{"w":340,"h":544,"resize":"fit"},"large":{"w":600,"h":960,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":960,"resize":"fit"}},"id_str":"638620260862570496","expanded_url":"http://twitter.com/Game_INFObot/status/638620543449714689/photo/1","source_status_id_str":"638620543449714689","media_url_https":"https://pbs.twimg.com/media/CNzVvmMUsAAN9SP.jpg","id":638620260862570496,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzVvmMUsAAN9SP.jpg","source_status_id":638620543449714689,"url":"http://t.co/lVTLQLHFEO"},{"display_url":"pic.twitter.com/lVTLQLHFEO","indices":[107,129],"sizes":{"small":{"w":340,"h":544,"resize":"fit"},"large":{"w":600,"h":960,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":960,"resize":"fit"}},"id_str":"638620268655579136","expanded_url":"http://twitter.com/Game_INFObot/status/638620543449714689/photo/1","source_status_id_str":"638620543449714689","media_url_https":"https://pbs.twimg.com/media/CNzVwDOUkAAmqq_.jpg","id":638620268655579136,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzVwDOUkAAmqq_.jpg","source_status_id":638620543449714689,"url":"http://t.co/lVTLQLHFEO"},{"display_url":"pic.twitter.com/lVTLQLHFEO","indices":[107,129],"sizes":{"small":{"w":340,"h":544,"resize":"fit"},"large":{"w":600,"h":960,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":960,"resize":"fit"}},"id_str":"638620278084341760","expanded_url":"http://twitter.com/Game_INFObot/status/638620543449714689/photo/1","source_status_id_str":"638620543449714689","media_url_https":"https://pbs.twimg.com/media/CNzVwmWUEAA3wap.jpg","id":638620278084341760,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzVwmWUEAA3wap.jpg","source_status_id":638620543449714689,"url":"http://t.co/lVTLQLHFEO"},{"display_url":"pic.twitter.com/lVTLQLHFEO","indices":[107,129],"sizes":{"small":{"w":340,"h":481,"resize":"fit"},"large":{"w":678,"h":960,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":849,"resize":"fit"}},"id_str":"638620364487000064","expanded_url":"http://twitter.com/Game_INFObot/status/638620543449714689/photo/1","source_status_id_str":"638620543449714689","media_url_https":"https://pbs.twimg.com/media/CNzV1oOUAAAAt1X.jpg","id":638620364487000064,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzV1oOUAAAAt1X.jpg","source_status_id":638620543449714689,"url":"http://t.co/lVTLQLHFEO"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/lVTLQLHFEO","indices":[89,111],"sizes":{"small":{"w":340,"h":544,"resize":"fit"},"large":{"w":600,"h":960,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":960,"resize":"fit"}},"id_str":"638620260862570496","expanded_url":"http://twitter.com/Game_INFObot/status/638620543449714689/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzVvmMUsAAN9SP.jpg","id":638620260862570496,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzVvmMUsAAN9SP.jpg","url":"http://t.co/lVTLQLHFEO"},{"display_url":"pic.twitter.com/lVTLQLHFEO","indices":[89,111],"sizes":{"small":{"w":340,"h":544,"resize":"fit"},"large":{"w":600,"h":960,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":960,"resize":"fit"}},"id_str":"638620268655579136","expanded_url":"http://twitter.com/Game_INFObot/status/638620543449714689/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzVwDOUkAAmqq_.jpg","id":638620268655579136,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzVwDOUkAAmqq_.jpg","url":"http://t.co/lVTLQLHFEO"},{"display_url":"pic.twitter.com/lVTLQLHFEO","indices":[89,111],"sizes":{"small":{"w":340,"h":544,"resize":"fit"},"large":{"w":600,"h":960,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":960,"resize":"fit"}},"id_str":"638620278084341760","expanded_url":"http://twitter.com/Game_INFObot/status/638620543449714689/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzVwmWUEAA3wap.jpg","id":638620278084341760,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzVwmWUEAA3wap.jpg","url":"http://t.co/lVTLQLHFEO"},{"display_url":"pic.twitter.com/lVTLQLHFEO","indices":[89,111],"sizes":{"small":{"w":340,"h":481,"resize":"fit"},"large":{"w":678,"h":960,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":849,"resize":"fit"}},"id_str":"638620364487000064","expanded_url":"http://twitter.com/Game_INFObot/status/638620543449714689/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzV1oOUAAAAt1X.jpg","id":638620364487000064,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzV1oOUAAAAt1X.jpg","url":"http://t.co/lVTLQLHFEO"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 07:52:57 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck<\/a>","retweet_count":66,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638620543449714689","in_reply_to_user_id":null,"favorite_count":6,"id":638620543449714689,"text":"포항공대 셧다운제 반대 캠페인 - 48시간 게임 릴레이를 하고있습니다!\n\n이 캠페인이 좋은 영향을 끼쳤으면 합니다\n\nhttps://t.co/4eYqaS6zVE http://t.co/lVTLQLHFEO","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[{"display_url":"youtu.be/EAnM13pZJOI","indices":[65,88],"expanded_url":"https://youtu.be/EAnM13pZJOI","url":"https://t.co/4eYqaS6zVE"}],"hashtags":[],"media":[{"display_url":"pic.twitter.com/lVTLQLHFEO","indices":[89,111],"sizes":{"small":{"w":340,"h":544,"resize":"fit"},"large":{"w":600,"h":960,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":960,"resize":"fit"}},"id_str":"638620260862570496","expanded_url":"http://twitter.com/Game_INFObot/status/638620543449714689/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzVvmMUsAAN9SP.jpg","id":638620260862570496,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzVvmMUsAAN9SP.jpg","url":"http://t.co/lVTLQLHFEO"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":32400,"friends_count":0,"profile_image_url_https":"https://pbs.twimg.com/profile_images/624909298015965184/7YjI260P_normal.jpg","listed_count":19,"profile_background_image_url":"http://pbs.twimg.com/profile_background_images/493737791499407360/8km2X0DZ.jpeg","default_profile_image":false,"favourites_count":2,"description":"게임 소식, 뉴스를 전달하는 게임 인포봇입니다. 봇주는 2명이고 제보는 언제나 받습니다.","created_at":"Tue Jan 14 15:01:57 +0000 2014","is_translator":false,"profile_background_image_url_https":"https://pbs.twimg.com/profile_background_images/493737791499407360/8km2X0DZ.jpeg","protected":false,"screen_name":"Game_INFObot","id_str":"2291273965","profile_link_color":"0084B4","id":2291273965,"geo_enabled":false,"profile_background_color":"C0DEED","lang":"ko","profile_sidebar_border_color":"FFFFFF","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/624909298015965184/7YjI260P_normal.jpg","time_zone":"Seoul","url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/2291273965/1438075831","statuses_count":1376,"follow_request_sent":null,"followers_count":1427,"profile_use_background_image":true,"default_profile":false,"following":null,"name":"게임 인포봇","location":"","profile_sidebar_fill_color":"DDEEF6","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627935998488576","in_reply_to_user_id":null,"favorite_count":0,"id":638627935998488576,"text":"RT @Game_INFObot: 포항공대 셧다운제 반대 캠페인 - 48시간 게임 릴레이를 하고있습니다!\n\n이 캠페인이 좋은 영향을 끼쳤으면 합니다\n\nhttps://t.co/4eYqaS6zVE http://t.co/lVTLQLHFEO","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739732","entities":{"urls":[{"display_url":"youtu.be/EAnM13pZJOI","indices":[83,106],"expanded_url":"https://youtu.be/EAnM13pZJOI","url":"https://t.co/4eYqaS6zVE"}],"hashtags":[],"media":[{"display_url":"pic.twitter.com/lVTLQLHFEO","indices":[107,129],"sizes":{"small":{"w":340,"h":544,"resize":"fit"},"large":{"w":600,"h":960,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":960,"resize":"fit"}},"id_str":"638620260862570496","expanded_url":"http://twitter.com/Game_INFObot/status/638620543449714689/photo/1","source_status_id_str":"638620543449714689","media_url_https":"https://pbs.twimg.com/media/CNzVvmMUsAAN9SP.jpg","id":638620260862570496,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzVvmMUsAAN9SP.jpg","source_status_id":638620543449714689,"url":"http://t.co/lVTLQLHFEO"}],"user_mentions":[{"indices":[3,16],"screen_name":"Game_INFObot","id_str":"2291273965","name":"게임 인포봇","id":2291273965}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":32400,"friends_count":38,"profile_image_url_https":"https://pbs.twimg.com/profile_images/623430933882912768/pdC6BopX_normal.jpg","listed_count":0,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":1,"description":"대학교3학년 /러브라이버/ ラブライバ in Rep.Korea/ Daum Europa Universalis Cafe/애니존/","created_at":"Wed Jan 22 09:42:11 +0000 2014","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"Mette_Jeong","id_str":"2304562495","profile_link_color":"0084B4","id":2304562495,"geo_enabled":false,"profile_background_color":"C0DEED","lang":"ko","profile_sidebar_border_color":"C0DEED","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/623430933882912768/pdC6BopX_normal.jpg","time_zone":"Seoul","url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/2304562495/1435458793","statuses_count":561,"follow_request_sent":null,"followers_count":14,"profile_use_background_image":true,"default_profile":true,"following":null,"name":"YS_Jeong","location":"대한민국","profile_sidebar_fill_color":"DDEEF6","notifications":null}}
 DEBUG [2015-09-01 17:22:18,090] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/9lNsHjQmMc","indices":[39,61],"sizes":{"small":{"w":340,"h":226,"resize":"fit"},"large":{"w":1024,"h":682,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":399,"resize":"fit"}},"id_str":"638587839433674752","expanded_url":"http://twitter.com/Only0404com/status/638587850200473600/photo/1","source_status_id_str":"638587850200473600","media_url_https":"https://pbs.twimg.com/media/CNy4Qa9UEAAn3m_.jpg","id":638587839433674752,"type":"photo","media_url":"http://pbs.twimg.com/media/CNy4Qa9UEAAn3m_.jpg","source_status_id":638587850200473600,"url":"http://t.co/9lNsHjQmMc"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/9lNsHjQmMc","indices":[22,44],"sizes":{"small":{"w":340,"h":226,"resize":"fit"},"large":{"w":1024,"h":682,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":399,"resize":"fit"}},"id_str":"638587839433674752","expanded_url":"http://twitter.com/Only0404com/status/638587850200473600/photo/1","media_url_https":"https://pbs.twimg.com/media/CNy4Qa9UEAAn3m_.jpg","id":638587839433674752,"type":"photo","media_url":"http://pbs.twimg.com/media/CNy4Qa9UEAAn3m_.jpg","url":"http://t.co/9lNsHjQmMc"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 05:43:02 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweet_count":353,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638587850200473600","in_reply_to_user_id":null,"favorite_count":85,"id":638587850200473600,"text":"150901 쇼콜라봉봉 #Eunhyuk http://t.co/9lNsHjQmMc","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[],"hashtags":[{"indices":[13,21],"text":"Eunhyuk"}],"media":[{"display_url":"pic.twitter.com/9lNsHjQmMc","indices":[22,44],"sizes":{"small":{"w":340,"h":226,"resize":"fit"},"large":{"w":1024,"h":682,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":399,"resize":"fit"}},"id_str":"638587839433674752","expanded_url":"http://twitter.com/Only0404com/status/638587850200473600/photo/1","media_url_https":"https://pbs.twimg.com/media/CNy4Qa9UEAAn3m_.jpg","id":638587839433674752,"type":"photo","media_url":"http://pbs.twimg.com/media/CNy4Qa9UEAAn3m_.jpg","url":"http://t.co/9lNsHjQmMc"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":null,"friends_count":30,"profile_image_url_https":"https://pbs.twimg.com/profile_images/614654084721700864/DaW45TlW_normal.jpg","listed_count":90,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":89,"description":"은혁 팬페이지 이 싸랑,혁 싸랑.잘 부탁드립니다! EUNHYUK istagram:Only0404com Weibo:Only0404com","created_at":"Mon Jul 28 08:35:17 +0000 2014","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"Only0404com","id_str":"2687044297","profile_link_color":"0084B4","id":2687044297,"geo_enabled":false,"profile_background_color":"C0DEED","lang":"ja","profile_sidebar_border_color":"C0DEED","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/614654084721700864/DaW45TlW_normal.jpg","time_zone":null,"url":"http://only0404com.tumblr.com","contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/2687044297/1436854187","statuses_count":3401,"follow_request_sent":null,"followers_count":3750,"profile_use_background_image":true,"default_profile":true,"following":null,"name":"이 싸랑,혁 싸랑","location":"혁재의 마음","profile_sidebar_fill_color":"DDEEF6","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627936044646400","in_reply_to_user_id":null,"favorite_count":0,"id":638627936044646400,"text":"RT @Only0404com: 150901 쇼콜라봉봉 #Eunhyuk http://t.co/9lNsHjQmMc","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739743","entities":{"urls":[],"hashtags":[{"indices":[30,38],"text":"Eunhyuk"}],"media":[{"display_url":"pic.twitter.com/9lNsHjQmMc","indices":[39,61],"sizes":{"small":{"w":340,"h":226,"resize":"fit"},"large":{"w":1024,"h":682,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":399,"resize":"fit"}},"id_str":"638587839433674752","expanded_url":"http://twitter.com/Only0404com/status/638587850200473600/photo/1","source_status_id_str":"638587850200473600","media_url_https":"https://pbs.twimg.com/media/CNy4Qa9UEAAn3m_.jpg","id":638587839433674752,"type":"photo","media_url":"http://pbs.twimg.com/media/CNy4Qa9UEAAn3m_.jpg","source_status_id":638587850200473600,"url":"http://t.co/9lNsHjQmMc"}],"user_mentions":[{"indices":[3,15],"screen_name":"Only0404com","id_str":"2687044297","name":"이 싸랑,혁 싸랑","id":2687044297}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":25200,"friends_count":189,"profile_image_url_https":"https://pbs.twimg.com/profile_images/637314863161733120/YgCo1y3S_normal.jpg","listed_count":2,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme3/bg.gif","default_profile_image":false,"favourites_count":198,"description":"วิศวกรรมการกิน | วิศวกรรมการติ่ง | gear45","created_at":"Fri Jan 29 11:58:45 +0000 2010","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme3/bg.gif","protected":false,"screen_name":"ktcifuu","id_str":"109541204","profile_link_color":"000000","id":109541204,"geo_enabled":true,"profile_background_color":"000000","lang":"en","profile_sidebar_border_color":"000000","profile_text_color":"634047","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/637314863161733120/YgCo1y3S_normal.jpg","time_zone":"Jakarta","url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/109541204/1426704705","statuses_count":84744,"follow_request_sent":null,"followers_count":332,"profile_use_background_image":false,"default_profile":false,"following":null,"name":"เอ้อวววว.","location":"บนฟ้า ใต้ดิน","profile_sidebar_fill_color":"E3E2DE","notifications":null}}
 DEBUG [2015-09-01 17:22:18,199] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/MNE750nlFY","indices":[60,82],"sizes":{"small":{"w":340,"h":567,"resize":"fit"},"large":{"w":613,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":1002,"resize":"fit"}},"id_str":"581978189217472512","expanded_url":"http://twitter.com/airing_1004/status/581978197924782080/photo/1","source_status_id_str":"581978197924782080","media_url_https":"https://pbs.twimg.com/media/CBOaFGNVIAAEcLn.jpg","id":581978189217472512,"type":"photo","media_url":"http://pbs.twimg.com/media/CBOaFGNVIAAEcLn.jpg","source_status_id":581978197924782080,"url":"http://t.co/MNE750nlFY"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/MNE750nlFY","indices":[43,65],"sizes":{"small":{"w":340,"h":567,"resize":"fit"},"large":{"w":613,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":1002,"resize":"fit"}},"id_str":"581978189217472512","expanded_url":"http://twitter.com/airing_1004/status/581978197924782080/photo/1","media_url_https":"https://pbs.twimg.com/media/CBOaFGNVIAAEcLn.jpg","id":581978189217472512,"type":"photo","media_url":"http://pbs.twimg.com/media/CBOaFGNVIAAEcLn.jpg","url":"http://t.co/MNE750nlFY"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Sun Mar 29 00:36:29 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweet_count":8080,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"581978197924782080","in_reply_to_user_id":null,"favorite_count":906,"id":581978197924782080,"text":"지금 내 옆 내 앞 남자둘이 똑같은 자세로 자고 있어 문 지키는 수호신인 줄 http://t.co/MNE750nlFY","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/MNE750nlFY","indices":[43,65],"sizes":{"small":{"w":340,"h":567,"resize":"fit"},"large":{"w":613,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":1002,"resize":"fit"}},"id_str":"581978189217472512","expanded_url":"http://twitter.com/airing_1004/status/581978197924782080/photo/1","media_url_https":"https://pbs.twimg.com/media/CBOaFGNVIAAEcLn.jpg","id":581978189217472512,"type":"photo","media_url":"http://pbs.twimg.com/media/CBOaFGNVIAAEcLn.jpg","url":"http://t.co/MNE750nlFY"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":null,"friends_count":335,"profile_image_url_https":"https://pbs.twimg.com/profile_images/638412018475642880/wbyN9WHx_normal.jpg","listed_count":2,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":871,"description":"銀魂 / ラブライブ! / ペダステ/ 薄ミュ/                      衣梨奈と呼んでください                                     廣瀬大介 ♥ 鈴木拡樹♥の心の中","created_at":"Tue Oct 01 04:49:44 +0000 2013","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"airing_1004","id_str":"1922284358","profile_link_color":"0084B4","id":1922284358,"geo_enabled":true,"profile_background_color":"C0DEED","lang":"ko","profile_sidebar_border_color":"C0DEED","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/638412018475642880/wbyN9WHx_normal.jpg","time_zone":null,"url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/1922284358/1426495045","statuses_count":26559,"follow_request_sent":null,"followers_count":268,"profile_use_background_image":true,"default_profile":true,"following":null,"name":"우주대스타 에리나님","location":"","profile_sidebar_fill_color":"DDEEF6","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627936409546752","in_reply_to_user_id":null,"favorite_count":0,"id":638627936409546752,"text":"RT @airing_1004: 지금 내 옆 내 앞 남자둘이 똑같은 자세로 자고 있어 문 지키는 수호신인 줄 http://t.co/MNE750nlFY","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739830","entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/MNE750nlFY","indices":[60,82],"sizes":{"small":{"w":340,"h":567,"resize":"fit"},"large":{"w":613,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":1002,"resize":"fit"}},"id_str":"581978189217472512","expanded_url":"http://twitter.com/airing_1004/status/581978197924782080/photo/1","source_status_id_str":"581978197924782080","media_url_https":"https://pbs.twimg.com/media/CBOaFGNVIAAEcLn.jpg","id":581978189217472512,"type":"photo","media_url":"http://pbs.twimg.com/media/CBOaFGNVIAAEcLn.jpg","source_status_id":581978197924782080,"url":"http://t.co/MNE750nlFY"}],"user_mentions":[{"indices":[3,15],"screen_name":"airing_1004","id_str":"1922284358","name":"우주대스타 에리나님","id":1922284358}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":null,"friends_count":188,"profile_image_url_https":"https://pbs.twimg.com/profile_images/622437567087022080/Duib-5Mh_normal.jpg","listed_count":0,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":323,"description":"번역러/ Free! 본진,하이큐,남성우 위주로 파고 있습니다. 스쿠페스, 아이츄 하고 있어요. 멘션주시고 팔로해주시면 언제든지 맞팔가용 / 笠松幸男、橘真琴、鈴木達央","created_at":"Thu Feb 16 14:10:16 +0000 2012","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"zhsks1024","id_str":"494080028","profile_link_color":"4A913C","id":494080028,"geo_enabled":false,"profile_background_color":"C0DEED","lang":"ko","profile_sidebar_border_color":"000000","profile_text_color":"000000","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/622437567087022080/Duib-5Mh_normal.jpg","time_zone":null,"url":"http://blog.naver.com/zhsks1024","contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/494080028/1423285983","statuses_count":26115,"follow_request_sent":null,"followers_count":138,"profile_use_background_image":true,"default_profile":false,"following":null,"name":"고등어","location":"마코토 품속","profile_sidebar_fill_color":"000000","notifications":null}}
 DEBUG [2015-09-01 17:22:18,309] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/bG0gCSS3w8","indices":[76,98],"sizes":{"small":{"w":340,"h":226,"resize":"fit"},"large":{"w":1024,"h":682,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":399,"resize":"fit"}},"id_str":"638623373120016384","expanded_url":"http://twitter.com/ys_shot/status/638623374424477696/photo/1","source_status_id_str":"638623374424477696","media_url_https":"https://pbs.twimg.com/media/CNzYkwQUkAAbHmy.jpg","id":638623373120016384,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzYkwQUkAAbHmy.jpg","source_status_id":638623374424477696,"url":"http://t.co/bG0gCSS3w8"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/bG0gCSS3w8","indices":[63,85],"sizes":{"small":{"w":340,"h":226,"resize":"fit"},"large":{"w":1024,"h":682,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":399,"resize":"fit"}},"id_str":"638623373120016384","expanded_url":"http://twitter.com/ys_shot/status/638623374424477696/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzYkwQUkAAbHmy.jpg","id":638623373120016384,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzYkwQUkAAbHmy.jpg","url":"http://t.co/bG0gCSS3w8"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:04:12 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client<\/a>","retweet_count":37,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638623374424477696","in_reply_to_user_id":null,"favorite_count":50,"id":638623374424477696,"text":"150829 뷰티풀쇼 #요섭 뷰티를 봐라보는 요서비는 언제봐도 찌잉_☆ http://t.co/hE9A1YhC8t http://t.co/bG0gCSS3w8","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[{"display_url":"i.imgur.com/owl5Xt8.jpg","indices":[40,62],"expanded_url":"http://i.imgur.com/owl5Xt8.jpg","url":"http://t.co/hE9A1YhC8t"}],"hashtags":[{"indices":[12,15],"text":"요섭"}],"media":[{"display_url":"pic.twitter.com/bG0gCSS3w8","indices":[63,85],"sizes":{"small":{"w":340,"h":226,"resize":"fit"},"large":{"w":1024,"h":682,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":399,"resize":"fit"}},"id_str":"638623373120016384","expanded_url":"http://twitter.com/ys_shot/status/638623374424477696/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzYkwQUkAAbHmy.jpg","id":638623373120016384,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzYkwQUkAAbHmy.jpg","url":"http://t.co/bG0gCSS3w8"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":32400,"friends_count":15,"profile_image_url_https":"https://pbs.twimg.com/profile_images/629630760249528320/MrmUOX7s_normal.png","listed_count":143,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":0,"description":"잠시만 rest..☆","created_at":"Mon Dec 12 19:54:14 +0000 2011","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"ys_shot","id_str":"435200568","profile_link_color":"0084B4","id":435200568,"geo_enabled":false,"profile_background_color":"C0DEED","lang":"ko","profile_sidebar_border_color":"C0DEED","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/629630760249528320/MrmUOX7s_normal.png","time_zone":"Seoul","url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/435200568/1441035312","statuses_count":1589,"follow_request_sent":null,"followers_count":5342,"profile_use_background_image":true,"default_profile":true,"following":null,"name":"원샷/미엔","location":"★","profile_sidebar_fill_color":"DDEEF6","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627936505954304","in_reply_to_user_id":null,"favorite_count":0,"id":638627936505954304,"text":"RT @ys_shot: 150829 뷰티풀쇼 #요섭 뷰티를 봐라보는 요서비는 언제봐도 찌잉_☆ http://t.co/hE9A1YhC8t http://t.co/bG0gCSS3w8","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739853","entities":{"urls":[{"display_url":"i.imgur.com/owl5Xt8.jpg","indices":[53,75],"expanded_url":"http://i.imgur.com/owl5Xt8.jpg","url":"http://t.co/hE9A1YhC8t"}],"hashtags":[{"indices":[25,28],"text":"요섭"}],"media":[{"display_url":"pic.twitter.com/bG0gCSS3w8","indices":[76,98],"sizes":{"small":{"w":340,"h":226,"resize":"fit"},"large":{"w":1024,"h":682,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":399,"resize":"fit"}},"id_str":"638623373120016384","expanded_url":"http://twitter.com/ys_shot/status/638623374424477696/photo/1","source_status_id_str":"638623374424477696","media_url_https":"https://pbs.twimg.com/media/CNzYkwQUkAAbHmy.jpg","id":638623373120016384,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzYkwQUkAAbHmy.jpg","source_status_id":638623374424477696,"url":"http://t.co/bG0gCSS3w8"}],"user_mentions":[{"indices":[3,11],"screen_name":"ys_shot","id_str":"435200568","name":"원샷/미엔","id":435200568}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":3600,"friends_count":179,"profile_image_url_https":"https://pbs.twimg.com/profile_images/624578857891336192/O_9DEsTY_normal.jpg","listed_count":0,"profile_background_image_url":"http://pbs.twimg.com/profile_background_images/462585400955904000/On7mJuX2.jpeg","default_profile_image":false,"favourites_count":1138,"description":"I'm fang :92 Line  IG : https://instagram.com/myfang_b2uty/","created_at":"Fri Mar 02 21:27:14 +0000 2012","is_translator":false,"profile_background_image_url_https":"https://pbs.twimg.com/profile_background_images/462585400955904000/On7mJuX2.jpeg","protected":false,"screen_name":"Myfang_","id_str":"512466220","profile_link_color":"F56EE3","id":512466220,"geo_enabled":true,"profile_background_color":"F56EE3","lang":"en","profile_sidebar_border_color":"FFFFFF","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/624578857891336192/O_9DEsTY_normal.jpg","time_zone":"Casablanca","url":null,"contributors_enabled":false,"profile_background_tile":true,"profile_banner_url":"https://pbs.twimg.com/profile_banners/512466220/1425741698","statuses_count":50904,"follow_request_sent":null,"followers_count":210,"profile_use_background_image":true,"default_profile":false,"following":null,"name":"มายด์ฟาง~~♡","location":"UBU","profile_sidebar_fill_color":"DDEEF6","notifications":null}}
 DEBUG [2015-09-01 17:22:18,418] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/dFofT1j34z","indices":[31,53],"sizes":{"small":{"w":340,"h":453,"resize":"fit"},"large":{"w":768,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":800,"resize":"fit"}},"id_str":"638627933817434112","expanded_url":"http://twitter.com/_tsuki_tsuki/status/638627936468209664/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzcuOLUcAAZ0eM.jpg","id":638627933817434112,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzcuOLUcAAZ0eM.jpg","url":"http://t.co/dFofT1j34z"}]},"in_reply_to_status_id_str":"638626252497154049","in_reply_to_status_id":638626252497154049,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":"1898799972","source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":"_tsuki_tsuki","id_str":"638627936468209664","in_reply_to_user_id":1898799972,"favorite_count":0,"id":638627936468209664,"text":"@_tsuki_tsuki 카테님 료마\n@katsama_ http://t.co/dFofT1j34z","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739844","entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/dFofT1j34z","indices":[31,53],"sizes":{"small":{"w":340,"h":453,"resize":"fit"},"large":{"w":768,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":800,"resize":"fit"}},"id_str":"638627933817434112","expanded_url":"http://twitter.com/_tsuki_tsuki/status/638627936468209664/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzcuOLUcAAZ0eM.jpg","id":638627933817434112,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzcuOLUcAAZ0eM.jpg","url":"http://t.co/dFofT1j34z"}],"user_mentions":[{"indices":[0,13],"screen_name":"_tsuki_tsuki","id_str":"1898799972","name":"츠키(ツキ)/츸","id":1898799972},{"indices":[21,30],"screen_name":"katsama_","id_str":"2360442379","name":"수행과 시험에 깔려죽을 카테","id":2360442379}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":32400,"friends_count":118,"profile_image_url_https":"https://pbs.twimg.com/profile_images/613476895334666241/wTBn8KPX_normal.jpg","listed_count":1,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme4/bg.gif","default_profile_image":false,"favourites_count":1806,"description":"95년생 여자 그림쟁이 코스어(드림 조금/BL/GL OK)\n인장은 상메님 커미션♡ 헤더는 러님 커미션♡    \n본진 (新)テニスの王子様/立海/幸村精市/幸ブン\n부본진 忍たま乱太郎/作法委員会/仙綾 위주\n보통 일상 잡소리가 많습니다 日本語できます☆","created_at":"Tue Sep 24 00:55:37 +0000 2013","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme4/bg.gif","protected":false,"screen_name":"_tsuki_tsuki","id_str":"1898799972","profile_link_color":"89C9FA","id":1898799972,"geo_enabled":true,"profile_background_color":"000000","lang":"ko","profile_sidebar_border_color":"000000","profile_text_color":"000000","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/613476895334666241/wTBn8KPX_normal.jpg","time_zone":"Seoul","url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/1898799972/1436364256","statuses_count":54372,"follow_request_sent":null,"followers_count":108,"profile_use_background_image":false,"default_profile":false,"following":null,"name":"츠키(ツキ)/츸","location":"부장님 옆자리...♡(@your_yukimura)","profile_sidebar_fill_color":"000000","notifications":null}}
 DEBUG [2015-09-01 17:22:18,527] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/dRSlUsQSeu","indices":[57,79],"sizes":{"small":{"w":340,"h":575,"resize":"fit"},"large":{"w":605,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":1015,"resize":"fit"}},"id_str":"638146854685831169","expanded_url":"http://twitter.com/_S_K_B/status/638146861430214656/photo/1","source_status_id_str":"638146861430214656","media_url_https":"https://pbs.twimg.com/media/CNsnLuwU8AEAZ9i.jpg","id":638146854685831169,"type":"photo","media_url":"http://pbs.twimg.com/media/CNsnLuwU8AEAZ9i.jpg","source_status_id":638146861430214656,"url":"http://t.co/dRSlUsQSeu"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/dRSlUsQSeu","indices":[45,67],"sizes":{"small":{"w":340,"h":575,"resize":"fit"},"large":{"w":605,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":1015,"resize":"fit"}},"id_str":"638146854685831169","expanded_url":"http://twitter.com/_S_K_B/status/638146861430214656/photo/1","media_url_https":"https://pbs.twimg.com/media/CNsnLuwU8AEAZ9i.jpg","id":638146854685831169,"type":"photo","media_url":"http://pbs.twimg.com/media/CNsnLuwU8AEAZ9i.jpg","url":"http://t.co/dRSlUsQSeu"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Mon Aug 31 00:30:42 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweet_count":1662,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638146861430214656","in_reply_to_user_id":null,"favorite_count":70,"id":638146861430214656,"text":"페북에 1년전 자기가 썼던 글을 다시 떠올려주는 기능이 이렇게 좆같은지 몰랐다. http://t.co/dRSlUsQSeu","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/dRSlUsQSeu","indices":[45,67],"sizes":{"small":{"w":340,"h":575,"resize":"fit"},"large":{"w":605,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":1015,"resize":"fit"}},"id_str":"638146854685831169","expanded_url":"http://twitter.com/_S_K_B/status/638146861430214656/photo/1","media_url_https":"https://pbs.twimg.com/media/CNsnLuwU8AEAZ9i.jpg","id":638146854685831169,"type":"photo","media_url":"http://pbs.twimg.com/media/CNsnLuwU8AEAZ9i.jpg","url":"http://t.co/dRSlUsQSeu"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":28800,"friends_count":319,"profile_image_url_https":"https://pbs.twimg.com/profile_images/596014277988732928/DWPEGEzs_normal.jpg","listed_count":12,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":2276,"description":"나는 유쾌하게 살것이다","created_at":"Sun Dec 02 11:22:34 +0000 2012","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"_S_K_B","id_str":"984427016","profile_link_color":"0084B4","id":984427016,"geo_enabled":true,"profile_background_color":"C0DEED","lang":"ko","profile_sidebar_border_color":"C0DEED","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/596014277988732928/DWPEGEzs_normal.jpg","time_zone":"Irkutsk","url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/984427016/1416799428","statuses_count":140090,"follow_request_sent":null,"followers_count":468,"profile_use_background_image":true,"default_profile":true,"following":null,"name":"스킬북님","location":"","profile_sidebar_fill_color":"DDEEF6","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627936585711616","in_reply_to_user_id":null,"favorite_count":0,"id":638627936585711616,"text":"RT @_S_K_B: 페북에 1년전 자기가 썼던 글을 다시 떠올려주는 기능이 이렇게 좆같은지 몰랐다. http://t.co/dRSlUsQSeu","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739872","entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/dRSlUsQSeu","indices":[57,79],"sizes":{"small":{"w":340,"h":575,"resize":"fit"},"large":{"w":605,"h":1024,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":1015,"resize":"fit"}},"id_str":"638146854685831169","expanded_url":"http://twitter.com/_S_K_B/status/638146861430214656/photo/1","source_status_id_str":"638146861430214656","media_url_https":"https://pbs.twimg.com/media/CNsnLuwU8AEAZ9i.jpg","id":638146854685831169,"type":"photo","media_url":"http://pbs.twimg.com/media/CNsnLuwU8AEAZ9i.jpg","source_status_id":638146861430214656,"url":"http://t.co/dRSlUsQSeu"}],"user_mentions":[{"indices":[3,10],"screen_name":"_S_K_B","id_str":"984427016","name":"스킬북님","id":984427016}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":32400,"friends_count":209,"profile_image_url_https":"https://pbs.twimg.com/profile_images/629428731170304004/q7Hr6wm2_normal.png","listed_count":1,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme13/bg.gif","default_profile_image":false,"favourites_count":1665,"description":"❀FUB FERR❀그림/사이퍼즈59급-끆꽁엘리/바람의검심/잡덕/잡트많아요/헤더는 이뿐 은니님♡","created_at":"Wed Jun 12 10:15:17 +0000 2013","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme13/bg.gif","protected":false,"screen_name":"kkeuk_","id_str":"1510121317","profile_link_color":"B2DFDA","id":1510121317,"geo_enabled":true,"profile_background_color":"B2DFDA","lang":"ko","profile_sidebar_border_color":"FFFFFF","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/629428731170304004/q7Hr6wm2_normal.png","time_zone":"Seoul","url":"http://blog.naver.com/smz8000","contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/1510121317/1440125662","statuses_count":12121,"follow_request_sent":null,"followers_count":86,"profile_use_background_image":true,"default_profile":false,"following":null,"name":"끆꽁민트","location":"엘리의 폭죽상자 속","profile_sidebar_fill_color":"FFFFFF","notifications":null}}
 DEBUG [2015-09-01 17:22:18,637] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/uvJN9SjbUU","indices":[79,101],"sizes":{"small":{"w":340,"h":209,"resize":"fit"},"large":{"w":514,"h":316,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":514,"h":316,"resize":"fit"}},"id_str":"627831972929236992","expanded_url":"http://twitter.com/s_suttida/status/627831981972131844/photo/1","source_status_id_str":"627831981972131844","media_url_https":"https://pbs.twimg.com/media/CLaB2l0UcAAn6Vf.jpg","id":627831972929236992,"type":"photo","media_url":"http://pbs.twimg.com/media/CLaB2l0UcAAn6Vf.jpg","source_status_id":627831981972131844,"url":"http://t.co/uvJN9SjbUU"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/uvJN9SjbUU","indices":[64,86],"sizes":{"small":{"w":340,"h":209,"resize":"fit"},"large":{"w":514,"h":316,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":514,"h":316,"resize":"fit"}},"id_str":"627831972929236992","expanded_url":"http://twitter.com/s_suttida/status/627831981972131844/photo/1","media_url_https":"https://pbs.twimg.com/media/CLaB2l0UcAAn6Vf.jpg","id":627831972929236992,"type":"photo","media_url":"http://pbs.twimg.com/media/CLaB2l0UcAAn6Vf.jpg","url":"http://t.co/uvJN9SjbUU"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Sun Aug 02 13:23:03 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/#!/download/ipad\" rel=\"nofollow\">Twitter for iPad<\/a>","retweet_count":15714,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"627831981972131844","in_reply_to_user_id":null,"favorite_count":1578,"id":627831981972131844,"text":"A : เป็นไรป่าว\nB : ไม่เป็นไร เราโอเค ㅠ ㅠ\n#ประโยคนี้ตอแหลสุดแล้ว http://t.co/uvJN9SjbUU","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[],"hashtags":[{"indices":[41,63],"text":"ประโยคนี้ตอแหลสุดแล้ว"}],"media":[{"display_url":"pic.twitter.com/uvJN9SjbUU","indices":[64,86],"sizes":{"small":{"w":340,"h":209,"resize":"fit"},"large":{"w":514,"h":316,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":514,"h":316,"resize":"fit"}},"id_str":"627831972929236992","expanded_url":"http://twitter.com/s_suttida/status/627831981972131844/photo/1","media_url_https":"https://pbs.twimg.com/media/CLaB2l0UcAAn6Vf.jpg","id":627831972929236992,"type":"photo","media_url":"http://pbs.twimg.com/media/CLaB2l0UcAAn6Vf.jpg","url":"http://t.co/uvJN9SjbUU"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":null,"friends_count":214,"profile_image_url_https":"https://pbs.twimg.com/profile_images/638336380217634816/BNRP2TpQ_normal.jpg","listed_count":0,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":5273,"description":"▲ทาสเดอะสตาร์ทุกสถาบัน♫ | ♡ซีดี | ♡แกงส้ม | ❥BOYFRIEND | เรียนหนักรักพังตังค์ไม่มี | อนาคต loading...60% | N U R S e. . . | #Dek60 | ig:bbimsthd","created_at":"Sun Jun 05 07:39:15 +0000 2011","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"s_suttida","id_str":"311320912","profile_link_color":"0084B4","id":311320912,"geo_enabled":true,"profile_background_color":"C0DEED","lang":"en","profile_sidebar_border_color":"C0DEED","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/638336380217634816/BNRP2TpQ_normal.jpg","time_zone":null,"url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/311320912/1441040695","statuses_count":63713,"follow_request_sent":null,"followers_count":594,"profile_use_background_image":true,"default_profile":true,"following":null,"name":"▲bim","location":"\u2022 T h a i l a n d \u2022","profile_sidebar_fill_color":"DDEEF6","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627936858345472","in_reply_to_user_id":null,"favorite_count":0,"id":638627936858345472,"text":"RT @s_suttida: A : เป็นไรป่าว\nB : ไม่เป็นไร เราโอเค ㅠ ㅠ\n#ประโยคนี้ตอแหลสุดแล้ว http://t.co/uvJN9SjbUU","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739937","entities":{"urls":[],"hashtags":[{"indices":[56,78],"text":"ประโยคนี้ตอแหลสุดแล้ว"}],"media":[{"display_url":"pic.twitter.com/uvJN9SjbUU","indices":[79,101],"sizes":{"small":{"w":340,"h":209,"resize":"fit"},"large":{"w":514,"h":316,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":514,"h":316,"resize":"fit"}},"id_str":"627831972929236992","expanded_url":"http://twitter.com/s_suttida/status/627831981972131844/photo/1","source_status_id_str":"627831981972131844","media_url_https":"https://pbs.twimg.com/media/CLaB2l0UcAAn6Vf.jpg","id":627831972929236992,"type":"photo","media_url":"http://pbs.twimg.com/media/CLaB2l0UcAAn6Vf.jpg","source_status_id":627831981972131844,"url":"http://t.co/uvJN9SjbUU"}],"user_mentions":[{"indices":[3,13],"screen_name":"s_suttida","id_str":"311320912","name":"▲bim","id":311320912}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":21600,"friends_count":272,"profile_image_url_https":"https://pbs.twimg.com/profile_images/631086367934517248/bpibqd7V_normal.jpg","listed_count":0,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":3429,"description":"| คำหยาบเพียบ | อยากไปสวิตเซอร์แลนด์ | อายุของกูแปรผกผันกับความรู้ที่ควรจะมี | คิ ด ถึ ง ม า ก น ะ |","created_at":"Sat Apr 19 12:19:45 +0000 2014","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"AuEyP_tita","id_str":"2453057893","profile_link_color":"0084B4","id":2453057893,"geo_enabled":false,"profile_background_color":"C0DEED","lang":"th","profile_sidebar_border_color":"C0DEED","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/631086367934517248/bpibqd7V_normal.jpg","time_zone":"Novosibirsk","url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/2453057893/1439297687","statuses_count":22421,"follow_request_sent":null,"followers_count":100,"profile_use_background_image":true,"default_profile":true,"following":null,"name":"คิดถึง","location":"ดาวอังคาร","profile_sidebar_fill_color":"DDEEF6","notifications":null}}
 DEBUG [2015-09-01 17:22:18,746] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/E0p09b68Li","indices":[70,92],"sizes":{"small":{"w":340,"h":233,"resize":"fit"},"large":{"w":1024,"h":703,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":411,"resize":"fit"}},"id_str":"638615816812933120","expanded_url":"http://twitter.com/pureum_/status/638615960518160384/photo/1","source_status_id_str":"638615960518160384","media_url_https":"https://pbs.twimg.com/media/CNzRs60UsAAMoB2.jpg","id":638615816812933120,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzRs60UsAAMoB2.jpg","source_status_id":638615960518160384,"url":"http://t.co/E0p09b68Li"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:20 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/E0p09b68Li","indices":[56,78],"sizes":{"small":{"w":340,"h":233,"resize":"fit"},"large":{"w":1024,"h":703,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":411,"resize":"fit"}},"id_str":"638615816812933120","expanded_url":"http://twitter.com/pureum_/status/638615960518160384/photo/1","source_status_id_str":"638615960518160384","media_url_https":"https://pbs.twimg.com/media/CNzRs60UsAAMoB2.jpg","id":638615816812933120,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzRs60UsAAMoB2.jpg","source_status_id":638615960518160384,"url":"http://t.co/E0p09b68Li"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:15:40 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck<\/a>","retweet_count":11,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638626259443032064","in_reply_to_user_id":null,"favorite_count":12,"id":638626259443032064,"text":"RT @pureum_: 150901 쇼콜라봉봉\n#은혁 #Eunhyuk \n놀이공원에 놀러온 애기같아♡ http://t.co/E0p09b68Li","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[],"hashtags":[{"indices":[26,29],"text":"은혁"},{"indices":[30,38],"text":"Eunhyuk"}],"media":[{"display_url":"pic.twitter.com/E0p09b68Li","indices":[56,78],"sizes":{"small":{"w":340,"h":233,"resize":"fit"},"large":{"w":1024,"h":703,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":411,"resize":"fit"}},"id_str":"638615816812933120","expanded_url":"http://twitter.com/pureum_/status/638615960518160384/photo/1","source_status_id_str":"638615960518160384","media_url_https":"https://pbs.twimg.com/media/CNzRs60UsAAMoB2.jpg","id":638615816812933120,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzRs60UsAAMoB2.jpg","source_status_id":638615960518160384,"url":"http://t.co/E0p09b68Li"}],"user_mentions":[{"indices":[3,11],"screen_name":"pureum_","id_str":"2976087199","name":"푸름⛅️","id":2976087199}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":25200,"friends_count":489,"profile_image_url_https":"https://pbs.twimg.com/profile_images/623062002303266818/qI4G9oAh_normal.jpg","listed_count":262,"profile_background_image_url":"http://pbs.twimg.com/profile_background_images/523039860676775936/2h5eezCo.jpeg","default_profile_image":false,"favourites_count":2556,"description":"멸치혁 & Haru동해~♡ | 李赫宰 ♡ 李东海 | D&E = Dream & Endless ❤","created_at":"Tue Aug 21 11:53:37 +0000 2012","is_translator":false,"profile_background_image_url_https":"https://pbs.twimg.com/profile_background_images/523039860676775936/2h5eezCo.jpeg","protected":false,"screen_name":"Hyukkiss","id_str":"771366354","profile_link_color":"6E1CD9","id":771366354,"geo_enabled":true,"profile_background_color":"D6D6D6","lang":"en","profile_sidebar_border_color":"FFFFFF","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/623062002303266818/qI4G9oAh_normal.jpg","time_zone":"Bangkok","url":null,"contributors_enabled":false,"profile_background_tile":true,"profile_banner_url":"https://pbs.twimg.com/profile_banners/771366354/1427166115","statuses_count":141190,"follow_request_sent":null,"followers_count":27959,"profile_use_background_image":true,"default_profile":false,"following":null,"name":"D&E ♡","location":"","profile_sidebar_fill_color":"EFEFEF","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627937177104384","in_reply_to_user_id":null,"favorite_count":0,"id":638627937177104384,"text":"RT @Hyukkiss: RT @pureum_: 150901 쇼콜라봉봉\n#은혁 #Eunhyuk \n놀이공원에 놀러온 애기같아♡ http://t.co/E0p09b68Li","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095740013","entities":{"urls":[],"hashtags":[{"indices":[40,43],"text":"은혁"},{"indices":[44,52],"text":"Eunhyuk"}],"media":[{"display_url":"pic.twitter.com/E0p09b68Li","indices":[70,92],"sizes":{"small":{"w":340,"h":233,"resize":"fit"},"large":{"w":1024,"h":703,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":411,"resize":"fit"}},"id_str":"638615816812933120","expanded_url":"http://twitter.com/pureum_/status/638615960518160384/photo/1","source_status_id_str":"638615960518160384","media_url_https":"https://pbs.twimg.com/media/CNzRs60UsAAMoB2.jpg","id":638615816812933120,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzRs60UsAAMoB2.jpg","source_status_id":638615960518160384,"url":"http://t.co/E0p09b68Li"}],"user_mentions":[{"indices":[3,12],"screen_name":"Hyukkiss","id_str":"771366354","name":"D&E ♡","id":771366354},{"indices":[17,25],"screen_name":"pureum_","id_str":"2976087199","name":"푸름⛅️","id":2976087199}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":null,"friends_count":85,"profile_image_url_https":"https://pbs.twimg.com/profile_images/594296772672913408/4lUeUC0M_normal.jpg","listed_count":1,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":1347,"description":"エルプですが\u2026｡。生粋のヒョクペンです☆","created_at":"Tue Oct 09 07:09:30 +0000 2012","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"0722_r2","id_str":"869382206","profile_link_color":"0084B4","id":869382206,"geo_enabled":true,"profile_background_color":"C0DEED","lang":"ja","profile_sidebar_border_color":"C0DEED","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/594296772672913408/4lUeUC0M_normal.jpg","time_zone":null,"url":null,"contributors_enabled":false,"profile_background_tile":false,"statuses_count":3582,"follow_request_sent":null,"followers_count":17,"profile_use_background_image":true,"default_profile":true,"following":null,"name":"るりか","location":"","profile_sidebar_fill_color":"DDEEF6","notifications":null}}
 DEBUG [2015-09-01 17:22:18,856] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/lsbHmTwdoo","indices":[13,35],"sizes":{"small":{"w":340,"h":191,"resize":"fit"},"large":{"w":1024,"h":576,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":337,"resize":"fit"}},"id_str":"638627934601768960","expanded_url":"http://twitter.com/hyunwooPoP/status/638627936405336064/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzcuRGUcAAJRMy.jpg","id":638627934601768960,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzcuRGUcAAJRMy.jpg","url":"http://t.co/lsbHmTwdoo"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627936405336064","in_reply_to_user_id":null,"favorite_count":0,"id":638627936405336064,"text":"소희언니 여자친구프리뷰 http://t.co/lsbHmTwdoo","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739829","entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/lsbHmTwdoo","indices":[13,35],"sizes":{"small":{"w":340,"h":191,"resize":"fit"},"large":{"w":1024,"h":576,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":337,"resize":"fit"}},"id_str":"638627934601768960","expanded_url":"http://twitter.com/hyunwooPoP/status/638627936405336064/photo/1","media_url_https":"https://pbs.twimg.com/media/CNzcuRGUcAAJRMy.jpg","id":638627934601768960,"type":"photo","media_url":"http://pbs.twimg.com/media/CNzcuRGUcAAJRMy.jpg","url":"http://t.co/lsbHmTwdoo"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":null,"friends_count":157,"profile_image_url_https":"https://pbs.twimg.com/profile_images/635469485202210816/W2Hg6lgP_normal.jpg","listed_count":1,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":90,"description":"BTOB Back again/TamTam is Back","created_at":"Thu Jan 17 13:56:12 +0000 2013","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"hyunwooPoP","id_str":"1098236257","profile_link_color":"0084B4","id":1098236257,"geo_enabled":true,"profile_background_color":"C0DEED","lang":"ko","profile_sidebar_border_color":"C0DEED","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/635469485202210816/W2Hg6lgP_normal.jpg","time_zone":null,"url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/1098236257/1434704941","statuses_count":2916,"follow_request_sent":null,"followers_count":96,"profile_use_background_image":true,"default_profile":true,"following":null,"name":"탐탐대표가되겠어.( \u2022 n \u2022)/","location":"in. Holi day","profile_sidebar_fill_color":"DDEEF6","notifications":null}}
 DEBUG [2015-09-01 17:22:18,966] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/hbYkQ9UEaB","indices":[52,74],"sizes":{"small":{"w":340,"h":191,"resize":"fit"},"large":{"w":1024,"h":576,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":337,"resize":"fit"}},"id_str":"602839199046246402","expanded_url":"http://twitter.com/Gumyoincirno/status/602839201235664897/photo/1","source_status_id_str":"602839201235664897","media_url_https":"https://pbs.twimg.com/media/CF23DrvVIAIYRtw.jpg","id":602839199046246402,"type":"photo","media_url":"http://pbs.twimg.com/media/CF23DrvVIAIYRtw.jpg","source_status_id":602839201235664897,"url":"http://t.co/hbYkQ9UEaB"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:20 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/hbYkQ9UEaB","indices":[34,56],"sizes":{"small":{"w":340,"h":191,"resize":"fit"},"large":{"w":1024,"h":576,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":337,"resize":"fit"}},"id_str":"602839199046246402","expanded_url":"http://twitter.com/Gumyoincirno/status/602839201235664897/photo/1","media_url_https":"https://pbs.twimg.com/media/CF23DrvVIAIYRtw.jpg","id":602839199046246402,"type":"photo","media_url":"http://pbs.twimg.com/media/CF23DrvVIAIYRtw.jpg","url":"http://t.co/hbYkQ9UEaB"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Mon May 25 14:10:40 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client<\/a>","retweet_count":1018,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"602839201235664897","in_reply_to_user_id":null,"favorite_count":34,"id":602839201235664897,"text":"이거 알면 넌 벌써 20대야 깔깔깔 #이_애니_아는사람_rt http://t.co/hbYkQ9UEaB","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[],"hashtags":[{"indices":[20,33],"text":"이_애니_아는사람_rt"}],"media":[{"display_url":"pic.twitter.com/hbYkQ9UEaB","indices":[34,56],"sizes":{"small":{"w":340,"h":191,"resize":"fit"},"large":{"w":1024,"h":576,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":337,"resize":"fit"}},"id_str":"602839199046246402","expanded_url":"http://twitter.com/Gumyoincirno/status/602839201235664897/photo/1","media_url_https":"https://pbs.twimg.com/media/CF23DrvVIAIYRtw.jpg","id":602839199046246402,"type":"photo","media_url":"http://pbs.twimg.com/media/CF23DrvVIAIYRtw.jpg","url":"http://t.co/hbYkQ9UEaB"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":32400,"friends_count":254,"profile_image_url_https":"https://pbs.twimg.com/profile_images/552433163494912000/lwjpdxsS_normal.png","listed_count":4,"profile_background_image_url":"http://pbs.twimg.com/profile_background_images/466976829568335872/gynIf72A.png","default_profile_image":false,"favourites_count":547,"description":"[南條愛乃♥] 신출귀몰한 트위터리안","created_at":"Mon Sep 20 09:17:08 +0000 2010","is_translator":false,"profile_background_image_url_https":"https://pbs.twimg.com/profile_background_images/466976829568335872/gynIf72A.png","protected":false,"screen_name":"Gumyoincirno","id_str":"192843075","profile_link_color":"387BB5","id":192843075,"geo_enabled":true,"profile_background_color":"FFFFFF","lang":"ko","profile_sidebar_border_color":"FFFFFF","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/552433163494912000/lwjpdxsS_normal.png","time_zone":"Osaka","url":null,"contributors_enabled":false,"profile_background_tile":true,"profile_banner_url":"https://pbs.twimg.com/profile_banners/192843075/1400170758","statuses_count":96545,"follow_request_sent":null,"followers_count":349,"profile_use_background_image":true,"default_profile":false,"following":null,"name":"구묘","location":"요시노 마음속","profile_sidebar_fill_color":"DDEEF6","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627937185468416","in_reply_to_user_id":null,"favorite_count":0,"id":638627937185468416,"text":"RT @Gumyoincirno: 이거 알면 넌 벌써 20대야 깔깔깔 #이_애니_아는사람_rt http://t.co/hbYkQ9UEaB","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095740015","entities":{"urls":[],"hashtags":[{"indices":[38,51],"text":"이_애니_아는사람_rt"}],"media":[{"display_url":"pic.twitter.com/hbYkQ9UEaB","indices":[52,74],"sizes":{"small":{"w":340,"h":191,"resize":"fit"},"large":{"w":1024,"h":576,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":337,"resize":"fit"}},"id_str":"602839199046246402","expanded_url":"http://twitter.com/Gumyoincirno/status/602839201235664897/photo/1","source_status_id_str":"602839201235664897","media_url_https":"https://pbs.twimg.com/media/CF23DrvVIAIYRtw.jpg","id":602839199046246402,"type":"photo","media_url":"http://pbs.twimg.com/media/CF23DrvVIAIYRtw.jpg","source_status_id":602839201235664897,"url":"http://t.co/hbYkQ9UEaB"}],"user_mentions":[{"indices":[3,16],"screen_name":"Gumyoincirno","id_str":"192843075","name":"구묘","id":192843075}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":32400,"friends_count":14,"profile_image_url_https":"https://pbs.twimg.com/profile_images/593314892779692033/fCCHQCs9_normal.jpg","listed_count":0,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":0,"description":"스마트폰으로 트위터를 하지 않는 관계로 즉각적인 연락은 어려우니 양해 바랍니다.","created_at":"Wed Apr 29 07:12:47 +0000 2015","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"WLZvsSHY","id_str":"3179081317","profile_link_color":"0084B4","id":3179081317,"geo_enabled":false,"profile_background_color":"C0DEED","lang":"ko","profile_sidebar_border_color":"C0DEED","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/593314892779692033/fCCHQCs9_normal.jpg","time_zone":"Seoul","url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/3179081317/1435049095","statuses_count":1204,"follow_request_sent":null,"followers_count":5,"profile_use_background_image":true,"default_profile":true,"following":null,"name":"SHY","location":"","profile_sidebar_fill_color":"DDEEF6","notifications":null}}
 DEBUG [2015-09-01 17:22:19,075] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/El9AvzNY5r","indices":[102,124],"sizes":{"small":{"w":340,"h":256,"resize":"fit"},"large":{"w":454,"h":342,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":454,"h":342,"resize":"fit"}},"id_str":"638627935293845504","expanded_url":"http://twitter.com/cotton522_tree/status/638627936505991168/photo/1","media_url_https":"https://pbs.twimg.com/tweet_video_thumb/CNzcuTrUsAAHJJ4.png","id":638627935293845504,"type":"animated_gif","media_url":"http://pbs.twimg.com/tweet_video_thumb/CNzcuTrUsAAHJJ4.png","url":"http://t.co/El9AvzNY5r","video_info":{"aspect_ratio":[227,171],"variants":[{"content_type":"video/mp4","bitrate":0,"url":"https://pbs.twimg.com/tweet_video/CNzcuTrUsAAHJJ4.mp4"}]}}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:19 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client<\/a>","retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627936505991168","in_reply_to_user_id":null,"favorite_count":0,"id":638627936505991168,"text":"5:22 소중한 내 사람 \n\n어딘가 네가 모르는 곳에\n보이지 않는 풀잎처럼 숨 쉬고 있는\n나 한 사람으로 하여 세상은\n다시 한 번 고요한 저녁이 온다\n\n가을이다, 부디 아프지 마라. http://t.co/El9AvzNY5r","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095739853","entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/El9AvzNY5r","indices":[102,124],"sizes":{"small":{"w":340,"h":256,"resize":"fit"},"large":{"w":454,"h":342,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":454,"h":342,"resize":"fit"}},"id_str":"638627935293845504","expanded_url":"http://twitter.com/cotton522_tree/status/638627936505991168/photo/1","media_url_https":"https://pbs.twimg.com/tweet_video_thumb/CNzcuTrUsAAHJJ4.png","id":638627935293845504,"type":"photo","media_url":"http://pbs.twimg.com/tweet_video_thumb/CNzcuTrUsAAHJJ4.png","url":"http://t.co/El9AvzNY5r"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":28800,"friends_count":286,"profile_image_url_https":"https://pbs.twimg.com/profile_images/637071895423127552/7yJFGlvT_normal.jpg","listed_count":2,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":3540,"description":"준면이를 사랑하는 모든 사람들이 행복하길 바라요. 어덕행덕 파워마웨","created_at":"Thu May 17 14:34:30 +0000 2012","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"cotton522_tree","id_str":"582828218","profile_link_color":"9266CC","id":582828218,"geo_enabled":false,"profile_background_color":"000000","lang":"ko","profile_sidebar_border_color":"000000","profile_text_color":"000000","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/637071895423127552/7yJFGlvT_normal.jpg","time_zone":"Irkutsk","url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/582828218/1435044596","statuses_count":3081,"follow_request_sent":null,"followers_count":172,"profile_use_background_image":false,"default_profile":false,"following":null,"name":"사랑둥이얌의 목(木)","location":"","profile_sidebar_fill_color":"000000","notifications":null}}
 DEBUG [2015-09-01 17:22:19,185] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/zw4JXgpuaf","type":"animated_gif","media_url":"http://pbs.twimg.com/tweet_video_thumb/CNzcn1fUkAEN267.png","source_status_id":638627825285644288,"url":"http://t.co/zw4JXgpuaf","indices":[25,47],"sizes":{"small":{"w":340,"h":130,"resize":"fit"},"large":{"w":458,"h":176,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":458,"h":176,"resize":"fit"}},"id_str":"638627824111226881","expanded_url":"http://twitter.com/hybition_/status/638627825285644288/photo/1","source_status_id_str":"638627825285644288","media_url_https":"https://pbs.twimg.com/tweet_video_thumb/CNzcn1fUkAEN267.png","id":638627824111226881,"video_info":{"aspect_ratio":[229,88],"variants":[{"content_type":"video/mp4","bitrate":0,"url":"https://pbs.twimg.com/tweet_video/CNzcn1fUkAEN267.mp4"}]}}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:20 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/zw4JXgpuaf","indices":[10,32],"sizes":{"small":{"w":340,"h":130,"resize":"fit"},"large":{"w":458,"h":176,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":458,"h":176,"resize":"fit"}},"id_str":"638627824111226881","expanded_url":"http://twitter.com/hybition_/status/638627825285644288/photo/1","media_url_https":"https://pbs.twimg.com/tweet_video_thumb/CNzcn1fUkAEN267.png","id":638627824111226881,"type":"animated_gif","media_url":"http://pbs.twimg.com/tweet_video_thumb/CNzcn1fUkAEN267.png","url":"http://t.co/zw4JXgpuaf","video_info":{"aspect_ratio":[229,88],"variants":[{"content_type":"video/mp4","bitrate":0,"url":"https://pbs.twimg.com/tweet_video/CNzcn1fUkAEN267.mp4"}]}}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:21:53 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client<\/a>","retweet_count":1,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627825285644288","in_reply_to_user_id":null,"favorite_count":0,"id":638627825285644288,"text":"치킨 끊을거라고? http://t.co/zw4JXgpuaf","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/zw4JXgpuaf","indices":[10,32],"sizes":{"small":{"w":340,"h":130,"resize":"fit"},"large":{"w":458,"h":176,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":458,"h":176,"resize":"fit"}},"id_str":"638627824111226881","expanded_url":"http://twitter.com/hybition_/status/638627825285644288/photo/1","media_url_https":"https://pbs.twimg.com/tweet_video_thumb/CNzcn1fUkAEN267.png","id":638627824111226881,"type":"photo","media_url":"http://pbs.twimg.com/tweet_video_thumb/CNzcn1fUkAEN267.png","url":"http://t.co/zw4JXgpuaf"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":-25200,"friends_count":59,"profile_image_url_https":"https://pbs.twimg.com/profile_images/638549814632800256/jDHDq4hw_normal.jpg","listed_count":0,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme14/bg.gif","default_profile_image":false,"favourites_count":56,"description":"i'm not sorry","created_at":"Sun Jul 26 13:43:07 +0000 2015","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme14/bg.gif","protected":false,"screen_name":"hybition_","id_str":"3295265936","profile_link_color":"000000","id":3295265936,"geo_enabled":false,"profile_background_color":"000000","lang":"ko","profile_sidebar_border_color":"000000","profile_text_color":"000000","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/638549814632800256/jDHDq4hw_normal.jpg","time_zone":"Pacific Time (US & Canada)","url":null,"contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/3295265936/1437918540","statuses_count":73,"follow_request_sent":null,"followers_count":80,"profile_use_background_image":false,"default_profile":false,"following":null,"name":"하 이","location":"","profile_sidebar_fill_color":"000000","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627937814601728","in_reply_to_user_id":null,"favorite_count":0,"id":638627937814601728,"text":"RT @hybition_: 치킨 끊을거라고? http://t.co/zw4JXgpuaf","place":null,"lang":"ko","favorited":false,"possibly_sensitive":true,"coordinates":null,"truncated":false,"timestamp_ms":"1441095740165","entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/zw4JXgpuaf","indices":[25,47],"sizes":{"small":{"w":340,"h":130,"resize":"fit"},"large":{"w":458,"h":176,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":458,"h":176,"resize":"fit"}},"id_str":"638627824111226881","expanded_url":"http://twitter.com/hybition_/status/638627825285644288/photo/1","source_status_id_str":"638627825285644288","media_url_https":"https://pbs.twimg.com/tweet_video_thumb/CNzcn1fUkAEN267.png","id":638627824111226881,"type":"photo","media_url":"http://pbs.twimg.com/tweet_video_thumb/CNzcn1fUkAEN267.png","source_status_id":638627825285644288,"url":"http://t.co/zw4JXgpuaf"}],"user_mentions":[{"indices":[3,13],"screen_name":"hybition_","id_str":"3295265936","name":"하 이","id":3295265936}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":28800,"friends_count":345,"profile_image_url_https":"https://pbs.twimg.com/profile_images/583509672495190017/OS88dBju_normal.jpg","listed_count":3,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":6788,"description":"당신이 찾는 건 여기 없다니깐?","created_at":"Thu Apr 02 06:00:25 +0000 2015","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"marcfennex","id_str":"3131279920","profile_link_color":"0084B4","id":3131279920,"geo_enabled":false,"profile_background_color":"C0DEED","lang":"ko","profile_sidebar_border_color":"C0DEED","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/583509672495190017/OS88dBju_normal.jpg","time_zone":"Irkutsk","url":"http://char.guessing.me/14358","contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/3131279920/1438072655","statuses_count":32568,"follow_request_sent":null,"followers_count":272,"profile_use_background_image":true,"default_profile":true,"following":null,"name":"사맑여우","location":"Seoul, Korea ","profile_sidebar_fill_color":"DDEEF6","notifications":null}}
 DEBUG [2015-09-01 17:22:19,294] (SLF4JLogger.java[debug]:75) - Received:{"extended_entities":{"media":[{"display_url":"pic.twitter.com/NLuq4KmNa3","indices":[51,73],"sizes":{"small":{"w":340,"h":255,"resize":"fit"},"large":{"w":880,"h":660,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":450,"resize":"fit"}},"id_str":"633084878083354624","expanded_url":"http://twitter.com/llapiuyuuuuu/status/633084915270053888/photo/1","source_status_id_str":"633084915270053888","media_url_https":"https://pbs.twimg.com/media/CMkrV6bUcAADM_n.jpg","id":633084878083354624,"type":"photo","media_url":"http://pbs.twimg.com/media/CMkrV6bUcAADM_n.jpg","source_status_id":633084915270053888,"url":"http://t.co/NLuq4KmNa3"},{"display_url":"pic.twitter.com/NLuq4KmNa3","indices":[51,73],"sizes":{"small":{"w":340,"h":255,"resize":"fit"},"large":{"w":880,"h":660,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":450,"resize":"fit"}},"id_str":"633084877903015936","expanded_url":"http://twitter.com/llapiuyuuuuu/status/633084915270053888/photo/1","source_status_id_str":"633084915270053888","media_url_https":"https://pbs.twimg.com/media/CMkrV5wUsAAd0ZX.jpg","id":633084877903015936,"type":"photo","media_url":"http://pbs.twimg.com/media/CMkrV5wUsAAd0ZX.jpg","source_status_id":633084915270053888,"url":"http://t.co/NLuq4KmNa3"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Tue Sep 01 08:22:20 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/android\" rel=\"nofollow\">Twitter for Android<\/a>","retweeted_status":{"extended_entities":{"media":[{"display_url":"pic.twitter.com/NLuq4KmNa3","indices":[33,55],"sizes":{"small":{"w":340,"h":255,"resize":"fit"},"large":{"w":880,"h":660,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":450,"resize":"fit"}},"id_str":"633084878083354624","expanded_url":"http://twitter.com/llapiuyuuuuu/status/633084915270053888/photo/1","media_url_https":"https://pbs.twimg.com/media/CMkrV6bUcAADM_n.jpg","id":633084878083354624,"type":"photo","media_url":"http://pbs.twimg.com/media/CMkrV6bUcAADM_n.jpg","url":"http://t.co/NLuq4KmNa3"},{"display_url":"pic.twitter.com/NLuq4KmNa3","indices":[33,55],"sizes":{"small":{"w":340,"h":255,"resize":"fit"},"large":{"w":880,"h":660,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":450,"resize":"fit"}},"id_str":"633084877903015936","expanded_url":"http://twitter.com/llapiuyuuuuu/status/633084915270053888/photo/1","media_url_https":"https://pbs.twimg.com/media/CMkrV5wUsAAd0ZX.jpg","id":633084877903015936,"type":"photo","media_url":"http://pbs.twimg.com/media/CMkrV5wUsAAd0ZX.jpg","url":"http://t.co/NLuq4KmNa3"}]},"in_reply_to_status_id_str":null,"in_reply_to_status_id":null,"created_at":"Mon Aug 17 01:16:20 +0000 2015","in_reply_to_user_id_str":null,"source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone<\/a>","retweet_count":5471,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"633084915270053888","in_reply_to_user_id":null,"favorite_count":1808,"id":633084915270053888,"text":"고아가 된 캥거루가 테디베어 인형을 안고 있는 모습\n8ㅁ8 http://t.co/NLuq4KmNa3","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/NLuq4KmNa3","indices":[33,55],"sizes":{"small":{"w":340,"h":255,"resize":"fit"},"large":{"w":880,"h":660,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":450,"resize":"fit"}},"id_str":"633084878083354624","expanded_url":"http://twitter.com/llapiuyuuuuu/status/633084915270053888/photo/1","media_url_https":"https://pbs.twimg.com/media/CMkrV6bUcAADM_n.jpg","id":633084878083354624,"type":"photo","media_url":"http://pbs.twimg.com/media/CMkrV6bUcAADM_n.jpg","url":"http://t.co/NLuq4KmNa3"}],"user_mentions":[],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":32400,"friends_count":195,"profile_image_url_https":"https://pbs.twimg.com/profile_images/595475486643396608/UMY2nr19_normal.jpg","listed_count":85,"profile_background_image_url":"http://pbs.twimg.com/profile_background_images/378800000171556039/ZKvjVGGX.jpeg","default_profile_image":false,"favourites_count":2466,"description":"FASSBONDAGE HORROR #퓨요미스테리","created_at":"Mon Aug 17 10:26:47 +0000 2009","is_translator":false,"profile_background_image_url_https":"https://pbs.twimg.com/profile_background_images/378800000171556039/ZKvjVGGX.jpeg","protected":false,"screen_name":"llapiuyuuuuu","id_str":"66325610","profile_link_color":"1D4270","id":66325610,"geo_enabled":false,"profile_background_color":"262626","lang":"en","profile_sidebar_border_color":"FFFFFF","profile_text_color":"333333","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/595475486643396608/UMY2nr19_normal.jpg","time_zone":"Seoul","url":null,"contributors_enabled":false,"profile_background_tile":true,"profile_banner_url":"https://pbs.twimg.com/profile_banners/66325610/1430807551","statuses_count":60319,"follow_request_sent":null,"followers_count":5840,"profile_use_background_image":false,"default_profile":false,"following":null,"name":"ㅍㅣ*ㅇㅜ*ㅇㅠ","location":"https://ringmi.wordpress.com/","profile_sidebar_fill_color":"E8E6CC","notifications":null}},"retweet_count":0,"retweeted":false,"geo":null,"filter_level":"low","in_reply_to_screen_name":null,"id_str":"638627937365786624","in_reply_to_user_id":null,"favorite_count":0,"id":638627937365786624,"text":"RT @llapiuyuuuuu: 고아가 된 캥거루가 테디베어 인형을 안고 있는 모습\n8ㅁ8 http://t.co/NLuq4KmNa3","place":null,"lang":"ko","favorited":false,"possibly_sensitive":false,"coordinates":null,"truncated":false,"timestamp_ms":"1441095740058","entities":{"urls":[],"hashtags":[],"media":[{"display_url":"pic.twitter.com/NLuq4KmNa3","indices":[51,73],"sizes":{"small":{"w":340,"h":255,"resize":"fit"},"large":{"w":880,"h":660,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":450,"resize":"fit"}},"id_str":"633084878083354624","expanded_url":"http://twitter.com/llapiuyuuuuu/status/633084915270053888/photo/1","source_status_id_str":"633084915270053888","media_url_https":"https://pbs.twimg.com/media/CMkrV6bUcAADM_n.jpg","id":633084878083354624,"type":"photo","media_url":"http://pbs.twimg.com/media/CMkrV6bUcAADM_n.jpg","source_status_id":633084915270053888,"url":"http://t.co/NLuq4KmNa3"}],"user_mentions":[{"indices":[3,16],"screen_name":"llapiuyuuuuu","id_str":"66325610","name":"ㅍㅣ*ㅇㅜ*ㅇㅠ","id":66325610}],"trends":[],"symbols":[]},"contributors":null,"user":{"utc_offset":null,"friends_count":295,"profile_image_url_https":"https://pbs.twimg.com/profile_images/637611133944205315/eIPCjAgR_normal.jpg","listed_count":1,"profile_background_image_url":"http://abs.twimg.com/images/themes/theme1/bg.png","default_profile_image":false,"favourites_count":246,"description":"민석.찬열.종인.세훈/최애4명♥                                            \n혼잣말/망상(찌통,슈른,RPS)","created_at":"Fri Feb 13 03:09:59 +0000 2015","is_translator":false,"profile_background_image_url_https":"https://abs.twimg.com/images/themes/theme1/bg.png","protected":false,"screen_name":"dailylala","id_str":"3017931510","profile_link_color":"89C9FA","id":3017931510,"geo_enabled":true,"profile_background_color":"000000","lang":"ko","profile_sidebar_border_color":"000000","profile_text_color":"000000","verified":false,"profile_image_url":"http://pbs.twimg.com/profile_images/637611133944205315/eIPCjAgR_normal.jpg","time_zone":null,"url":"https://m.ask.fm/dailylala","contributors_enabled":false,"profile_background_tile":false,"profile_banner_url":"https://pbs.twimg.com/profile_banners/3017931510/1433257802","statuses_count":30403,"follow_request_sent":null,"followers_count":322,"profile_use_background_image":false,"default_profile":false,"following":null,"name":"지니니","location":"거기","profile_sidebar_fill_color":"000000","notifications":null}}
 DEBUG [2015-09-01 17:22:32,392] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-09-01 17:22:32,407] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-09-01 17:22:32,407] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-09-01 17:22:32,407] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-09-01 17:22:32,423] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-09-01 17:22:32,440] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-09-01 17:22:32,487] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-09-01 17:22:32,487] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-09-01 17:22:32,487] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-09-01 17:22:32,533] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-09-01 17:22:32,549] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-09-01 17:22:32,549] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-09-01 17:22:32,565] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-09-01 17:22:32,580] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-09-01 17:22:32,612] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-09-01 17:22:32,612] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:32,612] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:32,612] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:32,612] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:32,627] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:32,627] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:32,627] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:32,627] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:32,627] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:32,627] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:32,627] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:32,627] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:32,627] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:22:32,643] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-09-01 17:22:32,674] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends\FollowerSearch$_start_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends\FollowerSearch.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\Twitter4JBase.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-09-01 17:22:32,737] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class]
 DEBUG [2015-09-01 17:22:32,737] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-09-01 17:22:32,737] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-09-01 17:22:32,737] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-09-01 17:22:32,737] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-09-01 17:22:33,002] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-09-01 17:22:33,002] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-09-01 17:22:33,002] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericXmlApplicationContext@60015ef5: startup date [Tue Sep 01 17:22:33 KST 2015]; root of context hierarchy
 DEBUG [2015-09-01 17:22:33,002] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericXmlApplicationContext@60015ef5: org.springframework.beans.factory.support.DefaultListableBeanFactory@1a9c38eb: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2]; root of factory hierarchy
 DEBUG [2015-09-01 17:22:33,049] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:22:33,049] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:22:33,080] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:33,080] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:22:33,174] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:22:33,174] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:22:33,174] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:33,174] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:22:33,174] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:22:33,174] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:22:33,174] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:33,174] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:22:33,174] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:22:33,174] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:22:33,174] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:33,174] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:22:33,174] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:22:33,174] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:22:33,190] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:33,190] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:22:33,190] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:22:33,190] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:22:33,190] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:33,190] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:22:33,190] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:22:33,190] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:22:33,190] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:33,190] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:22:33,190] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@4fc5e095]
 DEBUG [2015-09-01 17:22:33,190] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@5bfa8cc5]
 DEBUG [2015-09-01 17:22:33,205] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a9c38eb: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-09-01 17:22:33,205] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-09-01 17:22:33,205] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-09-01 17:22:33,221] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-09-01 17:22:33,221] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:33,268] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-09-01 17:22:33,284] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:22:33,284] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:22:33,299] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:33,315] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:22:33,315] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:22:33,330] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:33,362] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:22:33,362] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-09-01 17:22:33,471] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:33,471] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-09-01 17:22:33,487] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@27eb3298
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@27eb3298
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@27eb3298
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@71a9b4c7
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@681aad3b
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@63f34b70
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4c4d362a
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4c4d362a
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c4d362a
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@2c5d601e
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@2c5d601e
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c5d601e
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@620aa4ea
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@620aa4ea
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@620aa4ea
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@13006998
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@13006998
 DEBUG [2015-09-01 17:22:33,549] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@13006998
 DEBUG [2015-09-01 17:22:33,565] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@263f04ca
 DEBUG [2015-09-01 17:22:33,565] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@263f04ca
 DEBUG [2015-09-01 17:22:33,565] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@263f04ca
 DEBUG [2015-09-01 17:22:33,565] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@21a5fd96
 DEBUG [2015-09-01 17:22:33,565] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@21a5fd96
 DEBUG [2015-09-01 17:22:33,565] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@21a5fd96
 DEBUG [2015-09-01 17:22:33,565] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@525d79f0
 DEBUG [2015-09-01 17:22:33,565] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@525d79f0
 DEBUG [2015-09-01 17:22:33,565] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@525d79f0
 DEBUG [2015-09-01 17:22:33,565] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@72efb5c1
 DEBUG [2015-09-01 17:22:33,565] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@72efb5c1
 DEBUG [2015-09-01 17:22:33,565] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@324c64cd
 DEBUG [2015-09-01 17:22:33,565] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@324c64cd
 DEBUG [2015-09-01 17:22:33,565] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@120f38e6
 DEBUG [2015-09-01 17:22:33,565] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@120f38e6
 DEBUG [2015-09-01 17:22:33,580] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@3b1bb3ab
 DEBUG [2015-09-01 17:22:33,580] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b1bb3ab
 DEBUG [2015-09-01 17:22:33,580] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@15bcf458
 DEBUG [2015-09-01 17:22:33,580] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15bcf458
 DEBUG [2015-09-01 17:22:33,580] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@51650883
 DEBUG [2015-09-01 17:22:33,580] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51650883
 DEBUG [2015-09-01 17:22:33,596] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@615f972
 DEBUG [2015-09-01 17:22:33,596] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@615f972
 DEBUG [2015-09-01 17:22:33,596] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@615f972
 DEBUG [2015-09-01 17:22:33,596] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@73393584
 DEBUG [2015-09-01 17:22:33,596] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@200606de
 DEBUG [2015-09-01 17:22:33,596] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@200606de
 DEBUG [2015-09-01 17:22:33,596] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@200606de
 DEBUG [2015-09-01 17:22:33,596] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@24f43aa3
 DEBUG [2015-09-01 17:22:33,596] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@3aacf32a
 DEBUG [2015-09-01 17:22:33,596] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3aacf32a
 DEBUG [2015-09-01 17:22:33,596] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@443dbe42
 DEBUG [2015-09-01 17:22:33,596] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@443dbe42
 DEBUG [2015-09-01 17:22:33,612] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@133e019b
 DEBUG [2015-09-01 17:22:33,612] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@133e019b
 DEBUG [2015-09-01 17:22:33,612] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@65f87a2c
 DEBUG [2015-09-01 17:22:33,612] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@65f87a2c
 DEBUG [2015-09-01 17:22:33,612] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4e9658b5
 DEBUG [2015-09-01 17:22:33,612] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4e9658b5
 DEBUG [2015-09-01 17:22:33,612] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c41709a
 DEBUG [2015-09-01 17:22:33,612] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1edb61b1
 DEBUG [2015-09-01 17:22:33,612] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@5305c37d
 DEBUG [2015-09-01 17:22:33,612] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@5305c37d
 DEBUG [2015-09-01 17:22:33,612] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@5305c37d
 DEBUG [2015-09-01 17:22:33,627] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d9d1b69
 DEBUG [2015-09-01 17:22:33,627] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d9d1b69
 DEBUG [2015-09-01 17:22:33,627] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d9d1b69
 DEBUG [2015-09-01 17:22:33,627] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@781e7326
 DEBUG [2015-09-01 17:22:33,627] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@433ffad1
 DEBUG [2015-09-01 17:22:33,627] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@433ffad1
 DEBUG [2015-09-01 17:22:33,627] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@433ffad1
 DEBUG [2015-09-01 17:22:33,627] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4593ff34
 DEBUG [2015-09-01 17:22:33,627] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4593ff34
 DEBUG [2015-09-01 17:22:33,627] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4593ff34
 DEBUG [2015-09-01 17:22:33,627] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@29caf222
 DEBUG [2015-09-01 17:22:33,627] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@3e2fc448
 DEBUG [2015-09-01 17:22:33,627] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e2fc448
 DEBUG [2015-09-01 17:22:33,643] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4cc61eb1
 DEBUG [2015-09-01 17:22:33,643] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@7728643a
 DEBUG [2015-09-01 17:22:33,643] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7728643a
 DEBUG [2015-09-01 17:22:33,643] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28c0b664
 DEBUG [2015-09-01 17:22:33,643] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@3228d990
 DEBUG [2015-09-01 17:22:33,643] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@160c3ec1
 DEBUG [2015-09-01 17:22:33,643] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@160c3ec1
 DEBUG [2015-09-01 17:22:33,643] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7577b641
 DEBUG [2015-09-01 17:22:33,643] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3704122f
 DEBUG [2015-09-01 17:22:33,643] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3153ddfc
 DEBUG [2015-09-01 17:22:33,643] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@60afd40d
 DEBUG [2015-09-01 17:22:33,643] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@28a2a3e7
 DEBUG [2015-09-01 17:22:33,643] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3f2049b6
 DEBUG [2015-09-01 17:22:33,643] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@10b3df93
 DEBUG [2015-09-01 17:22:33,643] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ea27e34
  INFO [2015-09-01 17:22:33,674] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-09-01 17:22:33,691] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-09-01 17:22:33,691] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-09-01 17:22:33,691] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-09-01 17:22:33,691] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-09-01 17:22:33,753] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-09-01 17:22:33,753] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-09-01 17:22:33,753] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-09-01 17:22:33,753] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-09-01 17:22:33,753] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-09-01 17:22:33,753] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-09-01 17:22:33,753] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-09-01 17:22:33,753] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-09-01 17:22:33,753] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-09-01 17:22:33,753] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-09-01 17:22:33,753] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-09-01 17:22:33,753] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-09-01 17:22:33,753] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-09-01 17:22:33,753] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-09-01 17:22:33,769] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-09-01 17:22:33,816] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-09-01 17:22:33,816] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-09-01 17:22:33,816] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-09-01 17:22:33,847] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-09-01 17:22:33,863] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-09-01 17:22:33,863] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-09-01 17:22:33,863] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-09-01 17:22:33,894] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-09-01 17:22:33,910] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-09-01 17:22:33,910] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-09-01 17:22:33,910] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-09-01 17:22:33,925] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-09-01 17:22:33,925] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-09-01 17:22:33,925] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-09-01 17:22:33,925] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-09-01 17:22:33,925] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-09-01 17:22:33,925] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-09-01 17:22:33,925] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-09-01 17:22:33,925] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-09-01 17:22:33,925] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-09-01 17:22:33,925] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-09-01 17:22:33,925] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-09-01 17:22:33,925] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-09-01 17:22:33,925] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-09-01 17:22:33,925] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-09-01 17:22:33,925] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-09-01 17:22:33,925] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-09-01 17:22:33,941] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-09-01 17:22:33,941] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-09-01 17:22:33,941] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-09-01 17:22:33,941] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-09-01 17:22:33,941] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-09-01 17:22:33,941] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-09-01 17:22:33,941] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-09-01 17:22:33,941] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-09-01 17:22:34,331] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-09-01 17:22:34,331] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-09-01 17:22:34,347] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-09-01 17:22:34,363] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-09-01 17:22:34,363] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-09-01 17:22:34,363] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-09-01 17:22:34,363] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-09-01 17:22:34,363] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-09-01 17:22:34,378] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-09-01 17:22:34,378] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-09-01 17:22:34,378] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-09-01 17:22:34,394] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-09-01 17:22:34,394] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-09-01 17:22:34,394] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-09-01 17:22:34,394] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-09-01 17:22:34,394] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-09-01 17:22:34,410] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-09-01 17:22:34,410] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-09-01 17:22:34,425] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-09-01 17:22:34,425] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.11.0\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:instantclient_12_1;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=com.twitter.twitter4j.stream.PrintFilterStream, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=invalidate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-09-01 17:22:34,441] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-09-01 17:22:34,566] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-09-01 17:22:34,566] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-09-01 17:22:34,566] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-09-01 17:22:34,566] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-09-01 17:22:34,566] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-09-01 17:22:34,566] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-09-01 17:22:34,597] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:22:34,597] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:22:34,597] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:22:34,597] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:22:34,597] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:22:34,597] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-09-01 17:22:34,597] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:22:34,597] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:22:34,597] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:22:34,597] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:22:34,597] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:22:34,597] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:22:34,629] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-09-01 17:22:34,629] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: bfa5948e-3b80-4425-bbca-2d1dcc9fe5c3 (unnamed)
  INFO [2015-09-01 17:22:34,629] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-09-01 17:22:34,629] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
 DEBUG [2015-09-01 17:22:34,629] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-09-01 17:22:34,629] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-09-01 17:22:34,629] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:22:34,629] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-09-01 17:22:34,629] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:22:34,629] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-09-01 17:22:34,629] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-09-01 17:22:34,629] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-09-01 17:22:34,645] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-09-01 17:22:34,645] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:22:34,645] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:22:34,645] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:34,645] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-09-01 17:22:34,645] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:22:34,645] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:22:34,661] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:34,661] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:34,661] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-09-01 17:22:34,661] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:34,676] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:22:34,676] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-09-01 17:22:34,676] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:34,676] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-09-01 17:22:34,676] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:34,832] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-09-01 17:22:34,832] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-09-01 17:22:34,848] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:34,848] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:34,864] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:22:34,864] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:22:34,864] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:34,864] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:22:34,864] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:22:34,864] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:34,864] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:22:34,864] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:22:34,895] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-09-01 17:22:34,895] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-09-01 17:22:34,895] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:22:34,895] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:34,895] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:22:34,895] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:22:34,895] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:22:34,895] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:22:34,895] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:22:34,895] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:34,895] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:22:34,895] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:22:34,895] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-09-01 17:22:34,895] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-09-01 17:22:34,895] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-09-01 17:22:34,895] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-09-01 17:22:34,895] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-09-01 17:22:34,911] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:22:34,911] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:22:34,911] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:34,911] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-09-01 17:22:34,911] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:22:34,911] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:22:34,911] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:34,911] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:22:34,911] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:34,911] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:22:34,911] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:22:34,911] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:22:34,911] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:22:34,911] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-09-01 17:22:34,911] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-09-01 17:22:34,911] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-09-01 17:22:34,911] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-09-01 17:22:34,911] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-09-01 17:22:34,911] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:34,911] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-09-01 17:22:34,911] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-09-01 17:22:34,911] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-09-01 17:22:34,911] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-09-01 17:22:34,911] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-09-01 17:22:34,926] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-09-01 17:22:34,926] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:34,926] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-09-01 17:22:34,926] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-09-01 17:22:34,926] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-09-01 17:22:34,926] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:34,942] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-09-01 17:22:34,942] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-09-01 17:22:34,942] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-09-01 17:22:34,942] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-09-01 17:22:34,942] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-09-01 17:22:34,942] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:34,942] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-09-01 17:22:34,942] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-09-01 17:22:34,942] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-09-01 17:22:34,942] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-09-01 17:22:34,942] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-09-01 17:22:34,942] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-09-01 17:22:34,942] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:22:34,942] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:22:34,942] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:22:34,942] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:22:34,942] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:22:34,942] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-09-01 17:22:34,942] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-09-01 17:22:34,942] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:22:34,942] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:22:34,942] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:22:34,942] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:22:34,942] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:22:34,942] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:22:34,942] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:34,958] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:22:34,958] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-09-01 17:22:34,974] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@21079a12] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-09-01 17:22:34,974] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:22:34,974] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-09-01 17:22:34,974] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-09-01 17:22:34,974] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:34,974] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:22:34,974] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-09-01 17:22:34,974] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-09-01 17:22:34,974] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-09-01 17:22:34,974] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-09-01 17:22:34,974] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:22:34,974] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:22:34,974] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-09-01 17:22:34,974] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-09-01 17:22:34,974] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:34,974] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:22:34,974] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:22:34,974] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:22:34,974] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:22:34,974] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:22:34,974] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@dc79225]
 DEBUG [2015-09-01 17:22:34,974] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-09-01 17:22:34,990] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:22:34,990] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:22:34,990] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-09-01 17:22:34,990] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-09-01 17:22:34,990] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-09-01 17:22:35,021] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'configProperty'
  INFO [2015-09-01 17:22:35,146] (SLF4JLogger.java[info]:83) - Establishing connection.
 DEBUG [2015-09-01 17:22:35,146] (SLF4JLogger.java[debug]:67) - Twitter Stream consumer-1[Establishing connection]
 DEBUG [2015-09-01 17:22:35,287] (SLF4JLogger.java[debug]:67) - Request: 
 DEBUG [2015-09-01 17:22:35,287] (SLF4JLogger.java[debug]:75) - POST https://stream.twitter.com/1.1/statuses/filter.json
 DEBUG [2015-09-01 17:22:35,287] (SLF4JLogger.java[debug]:75) - OAuth base string: POST&https%3A%2F%2Fstream.twitter.com%2F1.1%2Fstatuses%2Ffilter.json&count%3D0%26language%3D%25ED%2595%2598%25EB%2591%25A1%26oauth_consumer_key%3DWKzK4qYGZYuoOEYcnS9L50Gej%26oauth_nonce%3D3376556708%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1441095755%26oauth_token%3D3147697626-sn2hFfU81AxKN33y6qBbDChO98YptDPfelnq1I3%26oauth_version%3D1.0%26stall_warnings%3Dtrue%26track%3Dtwitter
 DEBUG [2015-09-01 17:22:35,396] (SLF4JLogger.java[debug]:75) - OAuth signature: TYLChNgAR8efdFc6V0qLNGTnKgQ=
 DEBUG [2015-09-01 17:22:35,396] (SLF4JLogger.java[debug]:75) - Authorization: ***********************************************************************************************************************************************************************************************************************************************************************************
 DEBUG [2015-09-01 17:22:35,396] (SLF4JLogger.java[debug]:67) - X-Twitter-Client-Version: 4.0.0
 DEBUG [2015-09-01 17:22:35,396] (SLF4JLogger.java[debug]:67) - X-Twitter-Client-URL: http://twitter4j.org/en/twitter4j-4.0.0.xml
 DEBUG [2015-09-01 17:22:35,396] (SLF4JLogger.java[debug]:67) - X-Twitter-Client: Twitter4J
 DEBUG [2015-09-01 17:22:35,396] (SLF4JLogger.java[debug]:67) - User-Agent: twitter4j http://twitter4j.org/ /4.0.0
 DEBUG [2015-09-01 17:22:35,396] (SLF4JLogger.java[debug]:67) - Connection: close
 DEBUG [2015-09-01 17:22:35,396] (SLF4JLogger.java[debug]:67) - Accept-Encoding: gzip
 DEBUG [2015-09-01 17:22:35,396] (SLF4JLogger.java[debug]:75) - Post Params: count=0&track=twitter&language=%ED%95%98%EB%91%A1&stall_warnings=true
 DEBUG [2015-09-01 17:23:03,544] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-09-01 17:23:03,544] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-09-01 17:23:03,544] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-09-01 17:23:03,544] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-09-01 17:23:03,560] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-09-01 17:23:03,593] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-09-01 17:23:03,641] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-09-01 17:23:03,641] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-09-01 17:23:03,641] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-09-01 17:23:03,688] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-09-01 17:23:03,703] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-09-01 17:23:03,703] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-09-01 17:23:03,719] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-09-01 17:23:03,735] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-09-01 17:23:03,782] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-09-01 17:23:03,782] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:03,782] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:03,782] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:03,782] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:03,782] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:03,782] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:03,782] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:03,782] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:03,782] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:03,782] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:03,797] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:03,797] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:03,797] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:03,797] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-09-01 17:23:03,828] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends\FollowerSearch$_start_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends\FollowerSearch.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\Twitter4JBase.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-09-01 17:23:03,891] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class]
 DEBUG [2015-09-01 17:23:03,891] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-09-01 17:23:03,891] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-09-01 17:23:03,891] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-09-01 17:23:03,891] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-09-01 17:23:04,188] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-09-01 17:23:04,188] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-09-01 17:23:04,188] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericXmlApplicationContext@6bf0219d: startup date [Tue Sep 01 17:23:04 KST 2015]; root of context hierarchy
 DEBUG [2015-09-01 17:23:04,188] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericXmlApplicationContext@6bf0219d: org.springframework.beans.factory.support.DefaultListableBeanFactory@1a9c38eb: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2]; root of factory hierarchy
 DEBUG [2015-09-01 17:23:04,266] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:23:04,266] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:23:04,297] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:04,297] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:23:04,407] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:04,407] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:04,407] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:04,407] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:04,407] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:04,407] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:04,407] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:04,407] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:04,407] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:23:04,422] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:23:04,422] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:04,422] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:23:04,422] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:23:04,422] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:23:04,422] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:04,422] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:23:04,422] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:23:04,422] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:23:04,422] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:04,422] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:23:04,422] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:23:04,422] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:23:04,422] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:04,422] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:23:04,438] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@4fc5e095]
 DEBUG [2015-09-01 17:23:04,438] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@5bfa8cc5]
 DEBUG [2015-09-01 17:23:04,438] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a9c38eb: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-09-01 17:23:04,438] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-09-01 17:23:04,438] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-09-01 17:23:04,453] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-09-01 17:23:04,453] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:04,485] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-09-01 17:23:04,485] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:23:04,485] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:23:04,516] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:04,547] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:04,547] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:04,563] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:04,606] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:23:04,606] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-09-01 17:23:04,742] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:04,771] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-09-01 17:23:04,776] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:04,839] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@ecf9049
 DEBUG [2015-09-01 17:23:04,839] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@ecf9049
 DEBUG [2015-09-01 17:23:04,839] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ecf9049
 DEBUG [2015-09-01 17:23:04,839] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@40f33492
 DEBUG [2015-09-01 17:23:04,839] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70d2e40b
 DEBUG [2015-09-01 17:23:04,839] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@173b9122
 DEBUG [2015-09-01 17:23:04,839] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@37d80fe7
 DEBUG [2015-09-01 17:23:04,839] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@37d80fe7
 DEBUG [2015-09-01 17:23:04,839] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@37d80fe7
 DEBUG [2015-09-01 17:23:04,839] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@15bcf458
 DEBUG [2015-09-01 17:23:04,839] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@15bcf458
 DEBUG [2015-09-01 17:23:04,839] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@15bcf458
 DEBUG [2015-09-01 17:23:04,854] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@51650883
 DEBUG [2015-09-01 17:23:04,854] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@51650883
 DEBUG [2015-09-01 17:23:04,854] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
 DEBUG [2015-09-01 17:23:04,854] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
 DEBUG [2015-09-01 17:23:04,854] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
 DEBUG [2015-09-01 17:23:04,854] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
 DEBUG [2015-09-01 17:23:04,854] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@4362d7df
 DEBUG [2015-09-01 17:23:04,854] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@4362d7df
 DEBUG [2015-09-01 17:23:04,854] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4362d7df
 DEBUG [2015-09-01 17:23:04,854] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@7957dc72
 DEBUG [2015-09-01 17:23:04,854] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@7957dc72
 DEBUG [2015-09-01 17:23:04,854] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7957dc72
 DEBUG [2015-09-01 17:23:04,854] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@473b3b7a
 DEBUG [2015-09-01 17:23:04,854] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@473b3b7a
 DEBUG [2015-09-01 17:23:04,854] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@473b3b7a
 DEBUG [2015-09-01 17:23:04,870] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@65f87a2c
 DEBUG [2015-09-01 17:23:04,870] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@65f87a2c
 DEBUG [2015-09-01 17:23:04,870] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6c451c9c
 DEBUG [2015-09-01 17:23:04,870] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6c451c9c
 DEBUG [2015-09-01 17:23:04,870] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@2a7b6f69
 DEBUG [2015-09-01 17:23:04,870] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@2a7b6f69
 DEBUG [2015-09-01 17:23:04,870] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@5528a42c
 DEBUG [2015-09-01 17:23:04,870] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5528a42c
 DEBUG [2015-09-01 17:23:04,886] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@49a64d82
 DEBUG [2015-09-01 17:23:04,886] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@49a64d82
 DEBUG [2015-09-01 17:23:04,886] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@781e7326
 DEBUG [2015-09-01 17:23:04,886] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@781e7326
 DEBUG [2015-09-01 17:23:04,886] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@ecf9fb3
 DEBUG [2015-09-01 17:23:04,886] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@ecf9fb3
 DEBUG [2015-09-01 17:23:04,886] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@ecf9fb3
 DEBUG [2015-09-01 17:23:04,886] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@27f9e982
 DEBUG [2015-09-01 17:23:04,886] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@29caf222
 DEBUG [2015-09-01 17:23:04,901] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29caf222
 DEBUG [2015-09-01 17:23:04,901] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29caf222
 DEBUG [2015-09-01 17:23:04,901] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3caa4757
 DEBUG [2015-09-01 17:23:04,901] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@1b39fd82
 DEBUG [2015-09-01 17:23:04,901] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1b39fd82
 DEBUG [2015-09-01 17:23:04,901] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@2024293c
 DEBUG [2015-09-01 17:23:04,901] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2024293c
 DEBUG [2015-09-01 17:23:04,917] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2a2bb0eb
 DEBUG [2015-09-01 17:23:04,917] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2a2bb0eb
 DEBUG [2015-09-01 17:23:04,917] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@1cfd1875
 DEBUG [2015-09-01 17:23:04,917] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1cfd1875
 DEBUG [2015-09-01 17:23:04,917] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51c929ae
 DEBUG [2015-09-01 17:23:04,917] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51c929ae
 DEBUG [2015-09-01 17:23:04,917] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58783f6c
 DEBUG [2015-09-01 17:23:04,917] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@47d93e0d
 DEBUG [2015-09-01 17:23:04,917] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@3704122f
 DEBUG [2015-09-01 17:23:04,917] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@3704122f
 DEBUG [2015-09-01 17:23:04,917] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@3704122f
 DEBUG [2015-09-01 17:23:04,917] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@33a2499c
 DEBUG [2015-09-01 17:23:04,932] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@33a2499c
 DEBUG [2015-09-01 17:23:04,932] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@33a2499c
 DEBUG [2015-09-01 17:23:04,932] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@4d4d8fcf
 DEBUG [2015-09-01 17:23:04,932] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@2c22a348
 DEBUG [2015-09-01 17:23:04,932] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@2c22a348
 DEBUG [2015-09-01 17:23:04,932] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@2c22a348
 DEBUG [2015-09-01 17:23:04,932] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3aaf4f07
 DEBUG [2015-09-01 17:23:04,932] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3aaf4f07
 DEBUG [2015-09-01 17:23:04,932] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3aaf4f07
 DEBUG [2015-09-01 17:23:04,932] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@42deb43a
 DEBUG [2015-09-01 17:23:04,932] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@6754ef00
 DEBUG [2015-09-01 17:23:04,932] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6754ef00
 DEBUG [2015-09-01 17:23:04,932] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4acf72b6
 DEBUG [2015-09-01 17:23:04,948] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@7692cd34
 DEBUG [2015-09-01 17:23:04,948] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7692cd34
 DEBUG [2015-09-01 17:23:04,948] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70f43b45
 DEBUG [2015-09-01 17:23:04,948] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@53bc1328
 DEBUG [2015-09-01 17:23:04,964] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@3d526ad9
 DEBUG [2015-09-01 17:23:04,964] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3d526ad9
 DEBUG [2015-09-01 17:23:04,964] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3f3c966c
 DEBUG [2015-09-01 17:23:04,964] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@11ee02f8
 DEBUG [2015-09-01 17:23:04,964] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4102b1b1
 DEBUG [2015-09-01 17:23:04,964] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@61a5b4ae
 DEBUG [2015-09-01 17:23:04,964] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a71c100
 DEBUG [2015-09-01 17:23:04,979] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5b69fd74
 DEBUG [2015-09-01 17:23:04,979] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f325091
 DEBUG [2015-09-01 17:23:04,979] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@437e951d
  INFO [2015-09-01 17:23:05,011] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-09-01 17:23:05,011] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-09-01 17:23:05,028] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-09-01 17:23:05,028] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-09-01 17:23:05,028] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-09-01 17:23:05,091] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-09-01 17:23:05,091] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-09-01 17:23:05,106] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-09-01 17:23:05,106] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-09-01 17:23:05,106] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-09-01 17:23:05,106] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-09-01 17:23:05,106] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-09-01 17:23:05,106] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-09-01 17:23:05,106] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-09-01 17:23:05,106] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-09-01 17:23:05,106] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-09-01 17:23:05,122] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-09-01 17:23:05,122] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-09-01 17:23:05,122] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-09-01 17:23:05,122] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-09-01 17:23:05,184] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-09-01 17:23:05,184] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-09-01 17:23:05,200] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-09-01 17:23:05,231] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-09-01 17:23:05,247] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-09-01 17:23:05,263] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-09-01 17:23:05,263] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-09-01 17:23:05,341] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-09-01 17:23:05,356] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-09-01 17:23:05,356] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-09-01 17:23:05,356] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-09-01 17:23:05,372] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-09-01 17:23:05,372] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-09-01 17:23:05,388] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-09-01 17:23:05,388] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-09-01 17:23:05,388] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-09-01 17:23:05,388] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-09-01 17:23:05,388] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-09-01 17:23:05,388] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-09-01 17:23:05,388] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-09-01 17:23:05,388] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-09-01 17:23:05,388] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-09-01 17:23:05,388] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-09-01 17:23:05,388] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-09-01 17:23:05,388] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-09-01 17:23:05,388] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-09-01 17:23:05,388] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-09-01 17:23:05,388] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-09-01 17:23:05,388] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-09-01 17:23:05,388] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-09-01 17:23:05,388] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-09-01 17:23:05,403] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-09-01 17:23:05,403] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-09-01 17:23:05,403] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-09-01 17:23:05,419] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-09-01 17:23:05,919] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-09-01 17:23:05,919] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-09-01 17:23:05,966] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-09-01 17:23:05,997] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-09-01 17:23:05,997] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-09-01 17:23:05,997] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-09-01 17:23:05,997] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-09-01 17:23:05,997] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-09-01 17:23:05,997] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-09-01 17:23:05,997] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-09-01 17:23:05,997] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-09-01 17:23:05,997] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-09-01 17:23:05,997] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-09-01 17:23:05,997] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-09-01 17:23:05,997] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-09-01 17:23:05,997] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-09-01 17:23:05,997] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-09-01 17:23:05,997] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-09-01 17:23:05,997] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-09-01 17:23:06,013] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-09-01 17:23:06,013] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-09-01 17:23:06,013] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-09-01 17:23:06,013] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-09-01 17:23:06,013] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-09-01 17:23:06,013] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-09-01 17:23:06,013] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-09-01 17:23:06,013] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-09-01 17:23:06,029] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-09-01 17:23:06,029] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-09-01 17:23:06,029] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-09-01 17:23:06,029] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-09-01 17:23:06,029] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-09-01 17:23:06,029] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-09-01 17:23:06,061] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-09-01 17:23:06,061] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-09-01 17:23:06,061] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-09-01 17:23:06,061] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.11.0\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:instantclient_12_1;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=com.twitter.twitter4j.stream.PrintFilterStream, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=invalidate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-09-01 17:23:06,076] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-09-01 17:23:06,217] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-09-01 17:23:06,217] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-09-01 17:23:06,217] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-09-01 17:23:06,217] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-09-01 17:23:06,217] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-09-01 17:23:06,217] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-09-01 17:23:06,232] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:06,232] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:06,232] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:23:06,232] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:23:06,232] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:23:06,232] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-09-01 17:23:06,232] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:23:06,232] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:23:06,232] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:06,232] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:06,248] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:06,248] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:06,279] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-09-01 17:23:06,295] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: 7ecaf8e6-f355-4078-8893-570f55b828be (unnamed)
  INFO [2015-09-01 17:23:06,295] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-09-01 17:23:06,295] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
 DEBUG [2015-09-01 17:23:06,295] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-09-01 17:23:06,295] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-09-01 17:23:06,295] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:06,295] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-09-01 17:23:06,295] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:23:06,295] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-09-01 17:23:06,295] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-09-01 17:23:06,295] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-09-01 17:23:06,295] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-09-01 17:23:06,311] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:23:06,311] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:23:06,311] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:06,311] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-09-01 17:23:06,311] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:06,311] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:06,311] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:06,326] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:06,326] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-09-01 17:23:06,342] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:06,342] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:23:06,342] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-09-01 17:23:06,342] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:06,342] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-09-01 17:23:06,342] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:06,498] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-09-01 17:23:06,498] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-09-01 17:23:06,498] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:06,529] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:06,529] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:06,529] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:23:06,551] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:06,551] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:06,553] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:06,554] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:06,554] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:06,555] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:06,555] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:23:06,555] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:06,586] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-09-01 17:23:06,586] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-09-01 17:23:06,586] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:06,586] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:06,586] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:06,586] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:06,586] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:23:06,586] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:06,586] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:06,586] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:06,586] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-09-01 17:23:06,586] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-09-01 17:23:06,586] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-09-01 17:23:06,586] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-09-01 17:23:06,602] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-09-01 17:23:06,602] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:23:06,602] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:23:06,602] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:06,617] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-09-01 17:23:06,617] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:06,617] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:23:06,617] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:06,617] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:06,617] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:06,617] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:23:06,617] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:06,617] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:06,617] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:06,617] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-09-01 17:23:06,617] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-09-01 17:23:06,617] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-09-01 17:23:06,617] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-09-01 17:23:06,617] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-09-01 17:23:06,617] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:06,633] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-09-01 17:23:06,633] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-09-01 17:23:06,633] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-09-01 17:23:06,633] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-09-01 17:23:06,633] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-09-01 17:23:06,633] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-09-01 17:23:06,633] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:06,633] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-09-01 17:23:06,633] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-09-01 17:23:06,633] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-09-01 17:23:06,633] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:06,649] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-09-01 17:23:06,649] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-09-01 17:23:06,649] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-09-01 17:23:06,649] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-09-01 17:23:06,649] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-09-01 17:23:06,649] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:06,649] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-09-01 17:23:06,649] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-09-01 17:23:06,649] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-09-01 17:23:06,649] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-09-01 17:23:06,649] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-09-01 17:23:06,664] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-09-01 17:23:06,664] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:23:06,664] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:06,664] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:06,664] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:23:06,664] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:23:06,664] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-09-01 17:23:06,664] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-09-01 17:23:06,664] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:23:06,664] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:23:06,664] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:06,664] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:23:06,664] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:23:06,664] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:23:06,680] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:06,696] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:06,696] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-09-01 17:23:06,711] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@1ac4ccad] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-09-01 17:23:06,711] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:23:06,711] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-09-01 17:23:06,711] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-09-01 17:23:06,711] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:06,711] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:23:06,711] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-09-01 17:23:06,711] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-09-01 17:23:06,711] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-09-01 17:23:06,711] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-09-01 17:23:06,711] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:06,711] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:23:06,742] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-09-01 17:23:06,742] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-09-01 17:23:06,742] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:06,742] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:06,742] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:06,742] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:06,742] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:23:06,742] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:23:06,742] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@6726cc69]
 DEBUG [2015-09-01 17:23:06,742] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-09-01 17:23:06,742] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:06,742] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:06,742] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-09-01 17:23:06,742] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-09-01 17:23:06,742] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-09-01 17:23:06,789] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'configProperty'
  INFO [2015-09-01 17:23:06,993] (SLF4JLogger.java[info]:83) - Establishing connection.
 DEBUG [2015-09-01 17:23:06,993] (SLF4JLogger.java[debug]:67) - Twitter Stream consumer-1[Establishing connection]
 DEBUG [2015-09-01 17:23:07,165] (SLF4JLogger.java[debug]:67) - Request: 
 DEBUG [2015-09-01 17:23:07,165] (SLF4JLogger.java[debug]:75) - POST https://stream.twitter.com/1.1/statuses/filter.json
 DEBUG [2015-09-01 17:23:07,165] (SLF4JLogger.java[debug]:75) - OAuth base string: POST&https%3A%2F%2Fstream.twitter.com%2F1.1%2Fstatuses%2Ffilter.json&count%3D0%26language%3D%25EC%258A%25A4%25ED%258C%258C%25ED%2581%25AC%26oauth_consumer_key%3DWKzK4qYGZYuoOEYcnS9L50Gej%26oauth_nonce%3D134329812%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1441095787%26oauth_token%3D3147697626-sn2hFfU81AxKN33y6qBbDChO98YptDPfelnq1I3%26oauth_version%3D1.0%26stall_warnings%3Dtrue%26track%3Dtwitter
 DEBUG [2015-09-01 17:23:07,306] (SLF4JLogger.java[debug]:75) - OAuth signature: wp/Vd9dQpyd4PS1qSXfBdF5tmr8=
 DEBUG [2015-09-01 17:23:07,306] (SLF4JLogger.java[debug]:75) - Authorization: ************************************************************************************************************************************************************************************************************************************************************************************
 DEBUG [2015-09-01 17:23:07,306] (SLF4JLogger.java[debug]:67) - X-Twitter-Client-Version: 4.0.0
 DEBUG [2015-09-01 17:23:07,306] (SLF4JLogger.java[debug]:67) - X-Twitter-Client-URL: http://twitter4j.org/en/twitter4j-4.0.0.xml
 DEBUG [2015-09-01 17:23:07,306] (SLF4JLogger.java[debug]:67) - X-Twitter-Client: Twitter4J
 DEBUG [2015-09-01 17:23:07,306] (SLF4JLogger.java[debug]:67) - User-Agent: twitter4j http://twitter4j.org/ /4.0.0
 DEBUG [2015-09-01 17:23:07,306] (SLF4JLogger.java[debug]:67) - Connection: close
 DEBUG [2015-09-01 17:23:07,306] (SLF4JLogger.java[debug]:67) - Accept-Encoding: gzip
 DEBUG [2015-09-01 17:23:07,306] (SLF4JLogger.java[debug]:75) - Post Params: count=0&track=twitter&language=%EC%8A%A4%ED%8C%8C%ED%81%AC&stall_warnings=true
 DEBUG [2015-09-01 17:23:35,440] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-09-01 17:23:35,440] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-09-01 17:23:35,440] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-09-01 17:23:35,440] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-09-01 17:23:35,456] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-09-01 17:23:35,488] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-09-01 17:23:35,535] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-09-01 17:23:35,535] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-09-01 17:23:35,551] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-09-01 17:23:35,613] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-09-01 17:23:35,613] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-09-01 17:23:35,629] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-09-01 17:23:35,660] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-09-01 17:23:35,660] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-09-01 17:23:35,707] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-09-01 17:23:35,707] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:35,707] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:35,707] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:35,707] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:35,707] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:35,707] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:35,707] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:35,707] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:35,707] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:35,707] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:35,707] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:35,707] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:35,723] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:35,723] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-09-01 17:23:35,754] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends\FollowerSearch$_start_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends\FollowerSearch.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\Twitter4JBase.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-09-01 17:23:35,801] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class]
 DEBUG [2015-09-01 17:23:35,801] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-09-01 17:23:35,801] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-09-01 17:23:35,801] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-09-01 17:23:35,801] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-09-01 17:23:36,066] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-09-01 17:23:36,066] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-09-01 17:23:36,082] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericXmlApplicationContext@175b9425: startup date [Tue Sep 01 17:23:36 KST 2015]; root of context hierarchy
 DEBUG [2015-09-01 17:23:36,082] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericXmlApplicationContext@175b9425: org.springframework.beans.factory.support.DefaultListableBeanFactory@3c9bfddc: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2]; root of factory hierarchy
 DEBUG [2015-09-01 17:23:36,145] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:23:36,145] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:23:36,160] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:36,160] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:23:36,254] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:36,254] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:36,254] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:36,254] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:36,254] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:36,254] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:36,254] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:36,254] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:36,254] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:23:36,254] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:23:36,270] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:36,270] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:23:36,270] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:23:36,270] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:23:36,270] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:36,270] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:23:36,270] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:23:36,270] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:23:36,270] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:36,270] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:23:36,270] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:23:36,270] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:23:36,270] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:36,270] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:23:36,285] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@75ed9710]
 DEBUG [2015-09-01 17:23:36,285] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@55b5f5d2]
 DEBUG [2015-09-01 17:23:36,285] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3c9bfddc: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-09-01 17:23:36,285] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-09-01 17:23:36,301] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-09-01 17:23:36,316] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-09-01 17:23:36,316] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:36,348] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-09-01 17:23:36,348] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:23:36,348] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:23:36,379] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:36,410] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:36,410] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:36,426] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:36,457] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:23:36,457] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-09-01 17:23:36,629] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:36,645] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-09-01 17:23:36,660] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:36,723] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@27eb3298
 DEBUG [2015-09-01 17:23:36,723] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@27eb3298
 DEBUG [2015-09-01 17:23:36,723] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@27eb3298
 DEBUG [2015-09-01 17:23:36,738] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@71a9b4c7
 DEBUG [2015-09-01 17:23:36,738] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@681aad3b
 DEBUG [2015-09-01 17:23:36,738] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@63f34b70
 DEBUG [2015-09-01 17:23:36,738] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4c4d362a
 DEBUG [2015-09-01 17:23:36,738] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4c4d362a
 DEBUG [2015-09-01 17:23:36,738] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c4d362a
 DEBUG [2015-09-01 17:23:36,738] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@2c5d601e
 DEBUG [2015-09-01 17:23:36,738] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@2c5d601e
 DEBUG [2015-09-01 17:23:36,738] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c5d601e
 DEBUG [2015-09-01 17:23:36,738] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@620aa4ea
 DEBUG [2015-09-01 17:23:36,738] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@620aa4ea
 DEBUG [2015-09-01 17:23:36,754] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@620aa4ea
 DEBUG [2015-09-01 17:23:36,754] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@13006998
 DEBUG [2015-09-01 17:23:36,754] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@13006998
 DEBUG [2015-09-01 17:23:36,754] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@13006998
 DEBUG [2015-09-01 17:23:36,754] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@263f04ca
 DEBUG [2015-09-01 17:23:36,754] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@263f04ca
 DEBUG [2015-09-01 17:23:36,754] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@263f04ca
 DEBUG [2015-09-01 17:23:36,754] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@21a5fd96
 DEBUG [2015-09-01 17:23:36,754] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@21a5fd96
 DEBUG [2015-09-01 17:23:36,754] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@21a5fd96
 DEBUG [2015-09-01 17:23:36,754] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@525d79f0
 DEBUG [2015-09-01 17:23:36,754] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@525d79f0
 DEBUG [2015-09-01 17:23:36,754] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@525d79f0
 DEBUG [2015-09-01 17:23:36,770] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@72efb5c1
 DEBUG [2015-09-01 17:23:36,770] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@72efb5c1
 DEBUG [2015-09-01 17:23:36,770] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@324c64cd
 DEBUG [2015-09-01 17:23:36,770] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@324c64cd
 DEBUG [2015-09-01 17:23:36,770] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@120f38e6
 DEBUG [2015-09-01 17:23:36,770] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@120f38e6
 DEBUG [2015-09-01 17:23:36,770] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@3b1bb3ab
 DEBUG [2015-09-01 17:23:36,770] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b1bb3ab
 DEBUG [2015-09-01 17:23:36,785] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@15bcf458
 DEBUG [2015-09-01 17:23:36,785] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15bcf458
 DEBUG [2015-09-01 17:23:36,785] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@51650883
 DEBUG [2015-09-01 17:23:36,785] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51650883
 DEBUG [2015-09-01 17:23:36,785] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@615f972
 DEBUG [2015-09-01 17:23:36,785] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@615f972
 DEBUG [2015-09-01 17:23:36,785] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@615f972
 DEBUG [2015-09-01 17:23:36,785] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@73393584
 DEBUG [2015-09-01 17:23:36,785] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@200606de
 DEBUG [2015-09-01 17:23:36,785] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@200606de
 DEBUG [2015-09-01 17:23:36,785] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@200606de
 DEBUG [2015-09-01 17:23:36,785] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@24f43aa3
 DEBUG [2015-09-01 17:23:36,785] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@3aacf32a
 DEBUG [2015-09-01 17:23:36,785] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3aacf32a
 DEBUG [2015-09-01 17:23:36,801] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@443dbe42
 DEBUG [2015-09-01 17:23:36,801] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@443dbe42
 DEBUG [2015-09-01 17:23:36,801] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@133e019b
 DEBUG [2015-09-01 17:23:36,801] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@133e019b
 DEBUG [2015-09-01 17:23:36,801] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@65f87a2c
 DEBUG [2015-09-01 17:23:36,801] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@65f87a2c
 DEBUG [2015-09-01 17:23:36,801] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4e9658b5
 DEBUG [2015-09-01 17:23:36,801] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4e9658b5
 DEBUG [2015-09-01 17:23:36,801] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c41709a
 DEBUG [2015-09-01 17:23:36,816] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1edb61b1
 DEBUG [2015-09-01 17:23:36,816] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@5305c37d
 DEBUG [2015-09-01 17:23:36,816] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@5305c37d
 DEBUG [2015-09-01 17:23:36,816] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@5305c37d
 DEBUG [2015-09-01 17:23:36,816] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d9d1b69
 DEBUG [2015-09-01 17:23:36,816] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d9d1b69
 DEBUG [2015-09-01 17:23:36,816] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d9d1b69
 DEBUG [2015-09-01 17:23:36,816] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@781e7326
 DEBUG [2015-09-01 17:23:36,816] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@433ffad1
 DEBUG [2015-09-01 17:23:36,816] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@433ffad1
 DEBUG [2015-09-01 17:23:36,816] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@433ffad1
 DEBUG [2015-09-01 17:23:36,816] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4593ff34
 DEBUG [2015-09-01 17:23:36,832] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4593ff34
 DEBUG [2015-09-01 17:23:36,832] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4593ff34
 DEBUG [2015-09-01 17:23:36,832] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@29caf222
 DEBUG [2015-09-01 17:23:36,832] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@3e2fc448
 DEBUG [2015-09-01 17:23:36,832] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e2fc448
 DEBUG [2015-09-01 17:23:36,832] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4cc61eb1
 DEBUG [2015-09-01 17:23:36,832] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@7728643a
 DEBUG [2015-09-01 17:23:36,832] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7728643a
 DEBUG [2015-09-01 17:23:36,832] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28c0b664
 DEBUG [2015-09-01 17:23:36,850] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@3228d990
 DEBUG [2015-09-01 17:23:36,855] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@160c3ec1
 DEBUG [2015-09-01 17:23:36,855] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@160c3ec1
 DEBUG [2015-09-01 17:23:36,856] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7577b641
 DEBUG [2015-09-01 17:23:36,858] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3704122f
 DEBUG [2015-09-01 17:23:36,859] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3153ddfc
 DEBUG [2015-09-01 17:23:36,859] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@60afd40d
 DEBUG [2015-09-01 17:23:36,859] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@28a2a3e7
 DEBUG [2015-09-01 17:23:36,859] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3f2049b6
 DEBUG [2015-09-01 17:23:36,859] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@10b3df93
 DEBUG [2015-09-01 17:23:36,860] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ea27e34
  INFO [2015-09-01 17:23:36,903] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-09-01 17:23:36,916] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-09-01 17:23:36,919] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-09-01 17:23:36,929] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-09-01 17:23:36,935] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-09-01 17:23:37,029] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-09-01 17:23:37,029] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-09-01 17:23:37,029] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-09-01 17:23:37,029] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-09-01 17:23:37,029] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-09-01 17:23:37,029] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-09-01 17:23:37,044] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-09-01 17:23:37,044] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-09-01 17:23:37,044] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-09-01 17:23:37,044] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-09-01 17:23:37,044] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-09-01 17:23:37,044] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-09-01 17:23:37,044] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-09-01 17:23:37,044] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-09-01 17:23:37,044] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-09-01 17:23:37,091] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-09-01 17:23:37,091] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-09-01 17:23:37,091] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-09-01 17:23:37,122] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-09-01 17:23:37,122] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-09-01 17:23:37,138] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-09-01 17:23:37,138] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-09-01 17:23:37,169] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-09-01 17:23:37,185] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-09-01 17:23:37,185] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-09-01 17:23:37,185] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-09-01 17:23:37,185] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-09-01 17:23:37,201] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-09-01 17:23:37,201] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-09-01 17:23:37,201] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-09-01 17:23:37,201] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-09-01 17:23:37,201] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-09-01 17:23:37,201] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-09-01 17:23:37,201] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-09-01 17:23:37,201] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-09-01 17:23:37,201] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-09-01 17:23:37,201] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-09-01 17:23:37,201] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-09-01 17:23:37,201] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-09-01 17:23:37,201] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-09-01 17:23:37,201] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-09-01 17:23:37,201] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-09-01 17:23:37,201] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-09-01 17:23:37,201] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-09-01 17:23:37,201] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-09-01 17:23:37,201] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-09-01 17:23:37,216] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-09-01 17:23:37,216] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-09-01 17:23:37,216] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-09-01 17:23:37,216] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-09-01 17:23:37,622] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-09-01 17:23:37,622] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-09-01 17:23:37,654] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-09-01 17:23:37,669] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-09-01 17:23:37,669] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-09-01 17:23:37,669] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-09-01 17:23:37,669] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-09-01 17:23:37,685] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-09-01 17:23:37,685] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-09-01 17:23:37,685] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-09-01 17:23:37,685] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-09-01 17:23:37,685] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-09-01 17:23:37,685] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-09-01 17:23:37,716] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-09-01 17:23:37,716] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-09-01 17:23:37,716] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-09-01 17:23:37,716] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.11.0\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:instantclient_12_1;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=com.twitter.twitter4j.stream.PrintFilterStream, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=invalidate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-09-01 17:23:37,732] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-09-01 17:23:37,888] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-09-01 17:23:37,888] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-09-01 17:23:37,888] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-09-01 17:23:37,888] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-09-01 17:23:37,888] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-09-01 17:23:37,888] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-09-01 17:23:37,919] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:37,919] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:37,919] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:23:37,919] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:23:37,919] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:23:37,919] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-09-01 17:23:37,919] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:23:37,919] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:23:37,919] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:37,919] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:37,935] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:37,935] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:37,966] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-09-01 17:23:37,966] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: 51b07f54-67ec-410b-a41b-fd03155a77f2 (unnamed)
  INFO [2015-09-01 17:23:37,966] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-09-01 17:23:37,982] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
 DEBUG [2015-09-01 17:23:37,982] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-09-01 17:23:37,982] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-09-01 17:23:37,982] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:37,982] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-09-01 17:23:37,982] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:23:37,982] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-09-01 17:23:37,982] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-09-01 17:23:37,982] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-09-01 17:23:37,982] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-09-01 17:23:37,998] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:23:37,998] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:23:37,998] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:37,998] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-09-01 17:23:37,998] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:37,998] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:37,998] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:37,998] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:38,014] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-09-01 17:23:38,014] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:38,030] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:23:38,030] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-09-01 17:23:38,030] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:38,030] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-09-01 17:23:38,030] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:38,186] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-09-01 17:23:38,186] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-09-01 17:23:38,186] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:38,202] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:38,202] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:38,202] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:23:38,217] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:38,217] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:38,217] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:38,217] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:38,217] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:23:38,217] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:38,248] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-09-01 17:23:38,248] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-09-01 17:23:38,248] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:38,248] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:38,248] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:23:38,248] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:38,248] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:38,248] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:38,248] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:38,248] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:38,248] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:38,248] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:38,248] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-09-01 17:23:38,248] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-09-01 17:23:38,248] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-09-01 17:23:38,248] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-09-01 17:23:38,248] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-09-01 17:23:38,248] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:23:38,248] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:23:38,248] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:38,248] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-09-01 17:23:38,248] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:38,248] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:23:38,248] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:38,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:38,264] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:38,264] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:23:38,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:38,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:38,264] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:38,264] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-09-01 17:23:38,264] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-09-01 17:23:38,264] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-09-01 17:23:38,264] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-09-01 17:23:38,264] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-09-01 17:23:38,264] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:38,264] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-09-01 17:23:38,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-09-01 17:23:38,264] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-09-01 17:23:38,264] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-09-01 17:23:38,264] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-09-01 17:23:38,264] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-09-01 17:23:38,264] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:38,264] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-09-01 17:23:38,264] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-09-01 17:23:38,264] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-09-01 17:23:38,264] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:38,280] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-09-01 17:23:38,280] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-09-01 17:23:38,280] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-09-01 17:23:38,280] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-09-01 17:23:38,280] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-09-01 17:23:38,280] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:38,280] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-09-01 17:23:38,280] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-09-01 17:23:38,280] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-09-01 17:23:38,280] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-09-01 17:23:38,280] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-09-01 17:23:38,280] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-09-01 17:23:38,280] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:23:38,280] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:38,280] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:38,280] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:23:38,280] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:23:38,280] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-09-01 17:23:38,280] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-09-01 17:23:38,280] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:23:38,280] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:23:38,280] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:38,280] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:23:38,280] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:23:38,280] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:23:38,295] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:38,311] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:38,311] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-09-01 17:23:38,311] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@21079a12] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-09-01 17:23:38,311] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:23:38,311] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-09-01 17:23:38,311] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-09-01 17:23:38,311] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:38,327] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:23:38,327] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-09-01 17:23:38,327] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-09-01 17:23:38,327] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-09-01 17:23:38,327] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-09-01 17:23:38,327] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:38,327] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:23:38,327] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-09-01 17:23:38,327] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-09-01 17:23:38,327] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:38,327] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:38,327] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:38,327] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:38,327] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:23:38,327] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:23:38,327] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@dc79225]
 DEBUG [2015-09-01 17:23:38,327] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-09-01 17:23:38,327] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:38,327] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:38,342] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-09-01 17:23:38,342] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-09-01 17:23:38,342] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-09-01 17:23:38,376] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'configProperty'
  INFO [2015-09-01 17:23:38,501] (SLF4JLogger.java[info]:83) - Establishing connection.
 DEBUG [2015-09-01 17:23:38,501] (SLF4JLogger.java[debug]:67) - Twitter Stream consumer-1[Establishing connection]
 DEBUG [2015-09-01 17:23:38,642] (SLF4JLogger.java[debug]:67) - Request: 
 DEBUG [2015-09-01 17:23:38,642] (SLF4JLogger.java[debug]:75) - POST https://stream.twitter.com/1.1/statuses/filter.json
 DEBUG [2015-09-01 17:23:38,642] (SLF4JLogger.java[debug]:75) - OAuth base string: POST&https%3A%2F%2Fstream.twitter.com%2F1.1%2Fstatuses%2Ffilter.json&count%3D0%26language%3D%25EB%25B9%2585%25EB%258D%25B0%25EC%259D%25B4%25ED%2584%25B0%26oauth_consumer_key%3DWKzK4qYGZYuoOEYcnS9L50Gej%26oauth_nonce%3D-575768382%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1441095818%26oauth_token%3D3147697626-sn2hFfU81AxKN33y6qBbDChO98YptDPfelnq1I3%26oauth_version%3D1.0%26stall_warnings%3Dtrue%26track%3Dtwitter
 DEBUG [2015-09-01 17:23:38,751] (SLF4JLogger.java[debug]:75) - OAuth signature: a5Cv0TPGW/U5cc9+KEafCA13gZk=
 DEBUG [2015-09-01 17:23:38,751] (SLF4JLogger.java[debug]:75) - Authorization: ***************************************************************************************************************************************************************************************************************************************************************************************
 DEBUG [2015-09-01 17:23:38,751] (SLF4JLogger.java[debug]:67) - X-Twitter-Client-Version: 4.0.0
 DEBUG [2015-09-01 17:23:38,751] (SLF4JLogger.java[debug]:67) - X-Twitter-Client-URL: http://twitter4j.org/en/twitter4j-4.0.0.xml
 DEBUG [2015-09-01 17:23:38,751] (SLF4JLogger.java[debug]:67) - X-Twitter-Client: Twitter4J
 DEBUG [2015-09-01 17:23:38,751] (SLF4JLogger.java[debug]:67) - User-Agent: twitter4j http://twitter4j.org/ /4.0.0
 DEBUG [2015-09-01 17:23:38,751] (SLF4JLogger.java[debug]:67) - Connection: close
 DEBUG [2015-09-01 17:23:38,751] (SLF4JLogger.java[debug]:67) - Accept-Encoding: gzip
 DEBUG [2015-09-01 17:23:38,767] (SLF4JLogger.java[debug]:75) - Post Params: count=0&track=twitter&language=%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0&stall_warnings=true
 DEBUG [2015-09-01 17:23:51,937] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-09-01 17:23:51,937] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-09-01 17:23:51,937] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-09-01 17:23:51,937] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-09-01 17:23:51,953] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-09-01 17:23:52,018] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-09-01 17:23:52,064] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-09-01 17:23:52,064] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-09-01 17:23:52,064] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-09-01 17:23:52,127] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-09-01 17:23:52,127] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-09-01 17:23:52,143] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-09-01 17:23:52,158] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-09-01 17:23:52,174] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-09-01 17:23:52,236] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-09-01 17:23:52,236] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:52,236] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:52,236] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:52,236] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:52,236] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:52,236] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:52,236] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:52,236] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:52,236] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:52,236] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:52,236] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:52,236] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:52,236] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:23:52,252] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-09-01 17:23:52,314] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends\FollowerSearch$_start_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends\FollowerSearch.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\Twitter4JBase.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-09-01 17:23:52,361] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class]
 DEBUG [2015-09-01 17:23:52,377] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-09-01 17:23:52,377] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-09-01 17:23:52,377] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-09-01 17:23:52,377] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-09-01 17:23:52,773] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-09-01 17:23:52,775] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-09-01 17:23:52,785] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericXmlApplicationContext@60015ef5: startup date [Tue Sep 01 17:23:52 KST 2015]; root of context hierarchy
 DEBUG [2015-09-01 17:23:52,788] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericXmlApplicationContext@60015ef5: org.springframework.beans.factory.support.DefaultListableBeanFactory@1a9c38eb: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2]; root of factory hierarchy
 DEBUG [2015-09-01 17:23:52,881] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:23:52,881] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:23:52,908] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:52,911] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:23:53,009] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:53,009] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:53,010] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:53,011] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:53,011] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:53,011] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:53,012] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:53,012] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:53,012] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:23:53,012] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:23:53,017] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:53,017] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:23:53,017] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:23:53,018] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:23:53,019] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:53,020] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:23:53,020] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:23:53,020] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:23:53,020] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:53,020] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:23:53,021] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:23:53,021] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:23:53,021] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:53,021] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:23:53,025] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@4fc5e095]
 DEBUG [2015-09-01 17:23:53,028] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@5bfa8cc5]
 DEBUG [2015-09-01 17:23:53,031] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a9c38eb: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-09-01 17:23:53,031] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-09-01 17:23:53,031] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-09-01 17:23:53,039] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-09-01 17:23:53,041] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:53,062] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-09-01 17:23:53,062] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:23:53,062] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:23:53,062] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:53,093] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:53,093] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:53,109] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:53,124] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:23:53,124] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-09-01 17:23:53,234] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:53,249] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-09-01 17:23:53,249] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:53,312] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@27eb3298
 DEBUG [2015-09-01 17:23:53,312] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@27eb3298
 DEBUG [2015-09-01 17:23:53,312] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@27eb3298
 DEBUG [2015-09-01 17:23:53,312] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@71a9b4c7
 DEBUG [2015-09-01 17:23:53,312] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@681aad3b
 DEBUG [2015-09-01 17:23:53,312] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@63f34b70
 DEBUG [2015-09-01 17:23:53,312] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4c4d362a
 DEBUG [2015-09-01 17:23:53,312] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4c4d362a
 DEBUG [2015-09-01 17:23:53,312] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c4d362a
 DEBUG [2015-09-01 17:23:53,312] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@2c5d601e
 DEBUG [2015-09-01 17:23:53,312] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@2c5d601e
 DEBUG [2015-09-01 17:23:53,312] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c5d601e
 DEBUG [2015-09-01 17:23:53,312] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@620aa4ea
 DEBUG [2015-09-01 17:23:53,312] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@620aa4ea
 DEBUG [2015-09-01 17:23:53,312] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@620aa4ea
 DEBUG [2015-09-01 17:23:53,327] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@13006998
 DEBUG [2015-09-01 17:23:53,327] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@13006998
 DEBUG [2015-09-01 17:23:53,327] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@13006998
 DEBUG [2015-09-01 17:23:53,327] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@263f04ca
 DEBUG [2015-09-01 17:23:53,327] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@263f04ca
 DEBUG [2015-09-01 17:23:53,327] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@263f04ca
 DEBUG [2015-09-01 17:23:53,327] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@21a5fd96
 DEBUG [2015-09-01 17:23:53,327] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@21a5fd96
 DEBUG [2015-09-01 17:23:53,327] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@21a5fd96
 DEBUG [2015-09-01 17:23:53,327] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@525d79f0
 DEBUG [2015-09-01 17:23:53,327] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@525d79f0
 DEBUG [2015-09-01 17:23:53,327] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@525d79f0
 DEBUG [2015-09-01 17:23:53,327] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@72efb5c1
 DEBUG [2015-09-01 17:23:53,327] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@72efb5c1
 DEBUG [2015-09-01 17:23:53,343] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@324c64cd
 DEBUG [2015-09-01 17:23:53,343] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@324c64cd
 DEBUG [2015-09-01 17:23:53,343] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@120f38e6
 DEBUG [2015-09-01 17:23:53,343] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@120f38e6
 DEBUG [2015-09-01 17:23:53,343] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@3b1bb3ab
 DEBUG [2015-09-01 17:23:53,343] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b1bb3ab
 DEBUG [2015-09-01 17:23:53,343] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@15bcf458
 DEBUG [2015-09-01 17:23:53,343] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15bcf458
 DEBUG [2015-09-01 17:23:53,343] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@51650883
 DEBUG [2015-09-01 17:23:53,343] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51650883
 DEBUG [2015-09-01 17:23:53,343] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@615f972
 DEBUG [2015-09-01 17:23:53,343] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@615f972
 DEBUG [2015-09-01 17:23:53,343] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@615f972
 DEBUG [2015-09-01 17:23:53,343] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@73393584
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@200606de
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@200606de
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@200606de
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@24f43aa3
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@3aacf32a
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3aacf32a
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@443dbe42
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@443dbe42
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@133e019b
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@133e019b
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@65f87a2c
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@65f87a2c
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4e9658b5
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4e9658b5
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c41709a
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1edb61b1
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@5305c37d
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@5305c37d
 DEBUG [2015-09-01 17:23:53,359] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@5305c37d
 DEBUG [2015-09-01 17:23:53,374] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d9d1b69
 DEBUG [2015-09-01 17:23:53,374] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d9d1b69
 DEBUG [2015-09-01 17:23:53,374] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d9d1b69
 DEBUG [2015-09-01 17:23:53,374] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@781e7326
 DEBUG [2015-09-01 17:23:53,374] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@433ffad1
 DEBUG [2015-09-01 17:23:53,374] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@433ffad1
 DEBUG [2015-09-01 17:23:53,374] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@433ffad1
 DEBUG [2015-09-01 17:23:53,374] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4593ff34
 DEBUG [2015-09-01 17:23:53,374] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4593ff34
 DEBUG [2015-09-01 17:23:53,374] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4593ff34
 DEBUG [2015-09-01 17:23:53,374] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@29caf222
 DEBUG [2015-09-01 17:23:53,374] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@3e2fc448
 DEBUG [2015-09-01 17:23:53,374] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e2fc448
 DEBUG [2015-09-01 17:23:53,374] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4cc61eb1
 DEBUG [2015-09-01 17:23:53,374] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@7728643a
 DEBUG [2015-09-01 17:23:53,374] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7728643a
 DEBUG [2015-09-01 17:23:53,374] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28c0b664
 DEBUG [2015-09-01 17:23:53,390] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@3228d990
 DEBUG [2015-09-01 17:23:53,390] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@160c3ec1
 DEBUG [2015-09-01 17:23:53,390] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@160c3ec1
 DEBUG [2015-09-01 17:23:53,390] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7577b641
 DEBUG [2015-09-01 17:23:53,390] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3704122f
 DEBUG [2015-09-01 17:23:53,390] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3153ddfc
 DEBUG [2015-09-01 17:23:53,390] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@60afd40d
 DEBUG [2015-09-01 17:23:53,390] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@28a2a3e7
 DEBUG [2015-09-01 17:23:53,390] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3f2049b6
 DEBUG [2015-09-01 17:23:53,390] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@10b3df93
 DEBUG [2015-09-01 17:23:53,390] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ea27e34
  INFO [2015-09-01 17:23:53,406] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-09-01 17:23:53,424] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-09-01 17:23:53,424] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-09-01 17:23:53,424] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-09-01 17:23:53,440] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-09-01 17:23:53,487] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-09-01 17:23:53,487] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-09-01 17:23:53,487] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-09-01 17:23:53,487] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-09-01 17:23:53,502] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-09-01 17:23:53,502] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-09-01 17:23:53,502] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-09-01 17:23:53,502] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-09-01 17:23:53,502] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-09-01 17:23:53,502] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-09-01 17:23:53,502] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-09-01 17:23:53,502] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-09-01 17:23:53,502] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-09-01 17:23:53,502] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-09-01 17:23:53,502] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-09-01 17:23:53,549] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-09-01 17:23:53,549] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-09-01 17:23:53,549] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-09-01 17:23:53,580] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-09-01 17:23:53,580] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-09-01 17:23:53,580] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-09-01 17:23:53,580] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-09-01 17:23:53,627] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-09-01 17:23:53,627] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-09-01 17:23:53,627] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-09-01 17:23:53,627] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-09-01 17:23:53,643] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-09-01 17:23:53,643] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-09-01 17:23:53,643] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-09-01 17:23:53,643] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-09-01 17:23:53,643] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-09-01 17:23:53,643] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-09-01 17:23:53,643] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-09-01 17:23:53,643] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-09-01 17:23:53,659] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-09-01 17:23:53,659] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-09-01 17:23:53,659] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-09-01 17:23:53,659] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-09-01 17:23:53,659] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-09-01 17:23:53,659] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-09-01 17:23:53,659] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-09-01 17:23:53,659] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-09-01 17:23:53,659] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-09-01 17:23:53,659] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-09-01 17:23:53,659] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-09-01 17:23:53,659] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-09-01 17:23:53,659] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-09-01 17:23:53,659] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-09-01 17:23:53,659] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-09-01 17:23:53,659] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-09-01 17:23:54,065] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-09-01 17:23:54,065] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-09-01 17:23:54,096] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-09-01 17:23:54,112] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-09-01 17:23:54,112] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-09-01 17:23:54,112] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-09-01 17:23:54,112] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-09-01 17:23:54,112] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-09-01 17:23:54,127] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-09-01 17:23:54,127] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-09-01 17:23:54,127] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-09-01 17:23:54,127] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-09-01 17:23:54,127] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-09-01 17:23:54,127] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-09-01 17:23:54,127] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-09-01 17:23:54,127] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-09-01 17:23:54,159] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-09-01 17:23:54,159] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-09-01 17:23:54,159] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-09-01 17:23:54,159] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.11.0\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:instantclient_12_1;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=com.twitter.twitter4j.stream.PrintFilterStream, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=invalidate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-09-01 17:23:54,174] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-09-01 17:23:54,315] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-09-01 17:23:54,315] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-09-01 17:23:54,315] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-09-01 17:23:54,315] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-09-01 17:23:54,315] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-09-01 17:23:54,315] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-09-01 17:23:54,346] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:54,346] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:54,346] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:23:54,346] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:23:54,346] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:23:54,346] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-09-01 17:23:54,346] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:23:54,346] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:23:54,346] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:54,346] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:54,346] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:54,346] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:23:54,377] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-09-01 17:23:54,377] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: c484301a-8f12-413e-b84a-7e0c2edfcc5c (unnamed)
  INFO [2015-09-01 17:23:54,377] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-09-01 17:23:54,377] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
 DEBUG [2015-09-01 17:23:54,377] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-09-01 17:23:54,377] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-09-01 17:23:54,377] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:54,377] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-09-01 17:23:54,377] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:23:54,377] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-09-01 17:23:54,377] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-09-01 17:23:54,377] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-09-01 17:23:54,393] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-09-01 17:23:54,393] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:23:54,393] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:23:54,393] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:54,393] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-09-01 17:23:54,393] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:54,393] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:54,393] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:54,393] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:54,409] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-09-01 17:23:54,409] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:54,424] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:23:54,424] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-09-01 17:23:54,424] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:54,424] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-09-01 17:23:54,424] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:54,565] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-09-01 17:23:54,565] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-09-01 17:23:54,565] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:54,580] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:54,596] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:54,596] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:23:54,596] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:54,596] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:54,596] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:54,596] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:54,596] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:54,596] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:54,596] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:23:54,596] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:54,627] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-09-01 17:23:54,627] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-09-01 17:23:54,627] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:54,627] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:54,627] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:54,627] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:54,627] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:23:54,627] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:54,627] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:54,627] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:54,627] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-09-01 17:23:54,627] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-09-01 17:23:54,627] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-09-01 17:23:54,627] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-09-01 17:23:54,627] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-09-01 17:23:54,643] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:23:54,643] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:23:54,643] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:54,643] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-09-01 17:23:54,643] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:54,643] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:23:54,643] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:54,643] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:54,643] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:54,643] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:23:54,643] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:54,643] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:54,643] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:54,643] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-09-01 17:23:54,643] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-09-01 17:23:54,643] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-09-01 17:23:54,643] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-09-01 17:23:54,643] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-09-01 17:23:54,643] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:54,659] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-09-01 17:23:54,659] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-09-01 17:23:54,659] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-09-01 17:23:54,659] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-09-01 17:23:54,659] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-09-01 17:23:54,659] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-09-01 17:23:54,659] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:54,659] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-09-01 17:23:54,659] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-09-01 17:23:54,659] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-09-01 17:23:54,659] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:54,674] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-09-01 17:23:54,674] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-09-01 17:23:54,674] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-09-01 17:23:54,674] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-09-01 17:23:54,674] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-09-01 17:23:54,674] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:54,674] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-09-01 17:23:54,674] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-09-01 17:23:54,674] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-09-01 17:23:54,674] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-09-01 17:23:54,674] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-09-01 17:23:54,674] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-09-01 17:23:54,674] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:23:54,674] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:54,674] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:23:54,674] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:23:54,674] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:23:54,674] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-09-01 17:23:54,674] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-09-01 17:23:54,674] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:23:54,674] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:23:54,674] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:54,674] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:23:54,674] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:23:54,674] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:23:54,691] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:54,691] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:23:54,691] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-09-01 17:23:54,706] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@21079a12] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-09-01 17:23:54,706] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:23:54,706] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-09-01 17:23:54,706] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-09-01 17:23:54,706] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:54,706] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:23:54,706] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-09-01 17:23:54,706] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-09-01 17:23:54,706] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-09-01 17:23:54,706] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-09-01 17:23:54,706] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:23:54,706] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:23:54,706] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-09-01 17:23:54,706] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-09-01 17:23:54,706] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:54,706] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:23:54,706] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:54,706] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:23:54,706] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:23:54,706] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:23:54,706] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@dc79225]
 DEBUG [2015-09-01 17:23:54,722] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-09-01 17:23:54,722] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:23:54,722] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:23:54,722] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-09-01 17:23:54,722] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-09-01 17:23:54,722] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-09-01 17:23:54,753] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'configProperty'
  INFO [2015-09-01 17:23:54,878] (SLF4JLogger.java[info]:83) - Establishing connection.
 DEBUG [2015-09-01 17:23:54,878] (SLF4JLogger.java[debug]:67) - Twitter Stream consumer-1[Establishing connection]
 DEBUG [2015-09-01 17:23:55,050] (SLF4JLogger.java[debug]:67) - Request: 
 DEBUG [2015-09-01 17:23:55,050] (SLF4JLogger.java[debug]:75) - POST https://stream.twitter.com/1.1/statuses/filter.json
 DEBUG [2015-09-01 17:23:55,050] (SLF4JLogger.java[debug]:75) - OAuth base string: POST&https%3A%2F%2Fstream.twitter.com%2F1.1%2Fstatuses%2Ffilter.json&count%3D0%26language%3Dko%26oauth_consumer_key%3DWKzK4qYGZYuoOEYcnS9L50Gej%26oauth_nonce%3D924412135%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1441095835%26oauth_token%3D3147697626-sn2hFfU81AxKN33y6qBbDChO98YptDPfelnq1I3%26oauth_version%3D1.0%26stall_warnings%3Dtrue%26track%3D%25ED%2595%2598%25EB%2591%25A1
 DEBUG [2015-09-01 17:23:55,175] (SLF4JLogger.java[debug]:75) - OAuth signature: q4wjP7Gqt4mChi5dOiI0devtXaQ=
 DEBUG [2015-09-01 17:23:55,175] (SLF4JLogger.java[debug]:75) - Authorization: **********************************************************************************************************************************************************************************************************************************************************************************
 DEBUG [2015-09-01 17:23:55,175] (SLF4JLogger.java[debug]:67) - X-Twitter-Client-Version: 4.0.0
 DEBUG [2015-09-01 17:23:55,175] (SLF4JLogger.java[debug]:67) - X-Twitter-Client-URL: http://twitter4j.org/en/twitter4j-4.0.0.xml
 DEBUG [2015-09-01 17:23:55,175] (SLF4JLogger.java[debug]:67) - X-Twitter-Client: Twitter4J
 DEBUG [2015-09-01 17:23:55,175] (SLF4JLogger.java[debug]:67) - User-Agent: twitter4j http://twitter4j.org/ /4.0.0
 DEBUG [2015-09-01 17:23:55,175] (SLF4JLogger.java[debug]:67) - Connection: close
 DEBUG [2015-09-01 17:23:55,175] (SLF4JLogger.java[debug]:67) - Accept-Encoding: gzip
 DEBUG [2015-09-01 17:23:55,175] (SLF4JLogger.java[debug]:75) - Post Params: count=0&track=%ED%95%98%EB%91%A1&language=ko&stall_warnings=true
 DEBUG [2015-09-01 17:24:09,491] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-09-01 17:24:09,507] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-09-01 17:24:09,507] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-09-01 17:24:09,507] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-09-01 17:24:09,522] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-09-01 17:24:09,554] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-09-01 17:24:09,601] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-09-01 17:24:09,601] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-09-01 17:24:09,601] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-09-01 17:24:09,664] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-09-01 17:24:09,679] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-09-01 17:24:09,695] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-09-01 17:24:09,711] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-09-01 17:24:09,726] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-09-01 17:24:09,742] (SLF4JLogger.java[debug]:67) - Response: 
 DEBUG [2015-09-01 17:24:09,742] (SLF4JLogger.java[debug]:67) - date: Tue, 01 Sep 2015 08:23:42 GMT
 DEBUG [2015-09-01 17:24:09,742] (SLF4JLogger.java[debug]:67) - HTTP/1.1 200 OK
 DEBUG [2015-09-01 17:24:09,742] (SLF4JLogger.java[debug]:67) - server: tsa
 DEBUG [2015-09-01 17:24:09,742] (SLF4JLogger.java[debug]:67) - transfer-encoding: chunked
 DEBUG [2015-09-01 17:24:09,742] (SLF4JLogger.java[debug]:67) - x-connection-hash: f5857cebffb4b7e03deeff480446508a
 DEBUG [2015-09-01 17:24:09,742] (SLF4JLogger.java[debug]:67) - content-type: application/json
 DEBUG [2015-09-01 17:24:09,742] (SLF4JLogger.java[debug]:67) - connection: close
 DEBUG [2015-09-01 17:24:09,742] (SLF4JLogger.java[debug]:67) - content-Encoding: gzip
  INFO [2015-09-01 17:24:09,742] (SLF4JLogger.java[info]:83) - Connection established.
  INFO [2015-09-01 17:24:09,742] (SLF4JLogger.java[info]:83) - Receiving status stream.
 DEBUG [2015-09-01 17:24:09,742] (SLF4JLogger.java[debug]:67) - Twitter Stream consumer-1[Receiving stream]
 DEBUG [2015-09-01 17:24:09,823] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-09-01 17:24:09,823] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:24:09,823] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:24:09,839] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:24:09,839] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:24:09,839] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:24:09,839] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:24:09,839] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:24:09,839] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:24:09,854] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:24:09,854] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:24:09,854] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:24:09,854] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:24:09,854] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-09-01 17:24:09,854] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-09-01 17:24:10,011] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends\FollowerSearch$_start_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\friends\FollowerSearch.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\Twitter4JBase.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-09-01 17:24:10,191] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class]
 DEBUG [2015-09-01 17:24:10,205] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-09-01 17:24:10,207] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-09-01 17:24:10,219] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-09-01 17:24:10,234] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-09-01 17:24:10,643] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-09-01 17:24:10,644] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-09-01 17:24:10,651] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericXmlApplicationContext@3098cf3b: startup date [Tue Sep 01 17:24:10 KST 2015]; root of context hierarchy
 DEBUG [2015-09-01 17:24:10,652] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericXmlApplicationContext@3098cf3b: org.springframework.beans.factory.support.DefaultListableBeanFactory@3c9bfddc: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2]; root of factory hierarchy
 DEBUG [2015-09-01 17:24:10,708] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:24:10,708] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:24:10,729] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:10,732] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:24:10,843] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:24:10,843] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:24:10,844] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:10,845] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:24:10,846] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:24:10,846] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:24:10,848] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:10,849] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:24:10,849] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:24:10,849] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:24:10,859] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:10,859] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:24:10,859] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:24:10,860] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:24:10,863] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:10,863] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:24:10,863] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:24:10,864] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:24:10,864] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:10,864] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:24:10,864] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:24:10,864] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:24:10,865] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:10,865] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:24:10,871] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@75ed9710]
 DEBUG [2015-09-01 17:24:10,876] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@55b5f5d2]
 DEBUG [2015-09-01 17:24:10,880] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3c9bfddc: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-09-01 17:24:10,881] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-09-01 17:24:10,881] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-09-01 17:24:10,891] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-09-01 17:24:10,892] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:10,919] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-09-01 17:24:10,920] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:24:10,920] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:24:10,940] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:10,983] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:24:10,983] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:24:10,996] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:11,029] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:24:11,029] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-09-01 17:24:11,152] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:11,215] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-09-01 17:24:11,246] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:24:11,340] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@27eb3298
 DEBUG [2015-09-01 17:24:11,340] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@27eb3298
 DEBUG [2015-09-01 17:24:11,340] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@27eb3298
 DEBUG [2015-09-01 17:24:11,356] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@71a9b4c7
 DEBUG [2015-09-01 17:24:11,356] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@681aad3b
 DEBUG [2015-09-01 17:24:11,356] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@63f34b70
 DEBUG [2015-09-01 17:24:11,356] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4c4d362a
 DEBUG [2015-09-01 17:24:11,356] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4c4d362a
 DEBUG [2015-09-01 17:24:11,356] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c4d362a
 DEBUG [2015-09-01 17:24:11,356] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@2c5d601e
 DEBUG [2015-09-01 17:24:11,356] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@2c5d601e
 DEBUG [2015-09-01 17:24:11,356] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c5d601e
 DEBUG [2015-09-01 17:24:11,356] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@620aa4ea
 DEBUG [2015-09-01 17:24:11,356] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@620aa4ea
 DEBUG [2015-09-01 17:24:11,356] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@620aa4ea
 DEBUG [2015-09-01 17:24:11,356] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@13006998
 DEBUG [2015-09-01 17:24:11,356] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@13006998
 DEBUG [2015-09-01 17:24:11,356] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@13006998
 DEBUG [2015-09-01 17:24:11,371] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@263f04ca
 DEBUG [2015-09-01 17:24:11,371] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@263f04ca
 DEBUG [2015-09-01 17:24:11,371] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@263f04ca
 DEBUG [2015-09-01 17:24:11,371] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@21a5fd96
 DEBUG [2015-09-01 17:24:11,371] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@21a5fd96
 DEBUG [2015-09-01 17:24:11,371] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@21a5fd96
 DEBUG [2015-09-01 17:24:11,371] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@525d79f0
 DEBUG [2015-09-01 17:24:11,371] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@525d79f0
 DEBUG [2015-09-01 17:24:11,371] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@525d79f0
 DEBUG [2015-09-01 17:24:11,371] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@72efb5c1
 DEBUG [2015-09-01 17:24:11,371] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@72efb5c1
 DEBUG [2015-09-01 17:24:11,387] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@324c64cd
 DEBUG [2015-09-01 17:24:11,387] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@324c64cd
 DEBUG [2015-09-01 17:24:11,387] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@120f38e6
 DEBUG [2015-09-01 17:24:11,387] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@120f38e6
 DEBUG [2015-09-01 17:24:11,387] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@3b1bb3ab
 DEBUG [2015-09-01 17:24:11,387] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b1bb3ab
 DEBUG [2015-09-01 17:24:11,387] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@15bcf458
 DEBUG [2015-09-01 17:24:11,387] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15bcf458
 DEBUG [2015-09-01 17:24:11,402] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@51650883
 DEBUG [2015-09-01 17:24:11,402] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51650883
 DEBUG [2015-09-01 17:24:11,402] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@615f972
 DEBUG [2015-09-01 17:24:11,402] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@615f972
 DEBUG [2015-09-01 17:24:11,402] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@615f972
 DEBUG [2015-09-01 17:24:11,402] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@73393584
 DEBUG [2015-09-01 17:24:11,402] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@200606de
 DEBUG [2015-09-01 17:24:11,402] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@200606de
 DEBUG [2015-09-01 17:24:11,402] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@200606de
 DEBUG [2015-09-01 17:24:11,402] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@24f43aa3
 DEBUG [2015-09-01 17:24:11,402] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@3aacf32a
 DEBUG [2015-09-01 17:24:11,402] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3aacf32a
 DEBUG [2015-09-01 17:24:11,402] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@443dbe42
 DEBUG [2015-09-01 17:24:11,402] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@443dbe42
 DEBUG [2015-09-01 17:24:11,418] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@133e019b
 DEBUG [2015-09-01 17:24:11,418] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@133e019b
 DEBUG [2015-09-01 17:24:11,418] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@65f87a2c
 DEBUG [2015-09-01 17:24:11,418] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@65f87a2c
 DEBUG [2015-09-01 17:24:11,418] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4e9658b5
 DEBUG [2015-09-01 17:24:11,418] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4e9658b5
 DEBUG [2015-09-01 17:24:11,418] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c41709a
 DEBUG [2015-09-01 17:24:11,418] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1edb61b1
 DEBUG [2015-09-01 17:24:11,418] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@5305c37d
 DEBUG [2015-09-01 17:24:11,418] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@5305c37d
 DEBUG [2015-09-01 17:24:11,418] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@5305c37d
 DEBUG [2015-09-01 17:24:11,418] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d9d1b69
 DEBUG [2015-09-01 17:24:11,418] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d9d1b69
 DEBUG [2015-09-01 17:24:11,418] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d9d1b69
 DEBUG [2015-09-01 17:24:11,418] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@781e7326
 DEBUG [2015-09-01 17:24:11,418] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@433ffad1
 DEBUG [2015-09-01 17:24:11,434] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@433ffad1
 DEBUG [2015-09-01 17:24:11,434] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@433ffad1
 DEBUG [2015-09-01 17:24:11,434] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4593ff34
 DEBUG [2015-09-01 17:24:11,434] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4593ff34
 DEBUG [2015-09-01 17:24:11,434] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4593ff34
 DEBUG [2015-09-01 17:24:11,434] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@29caf222
 DEBUG [2015-09-01 17:24:11,434] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@3e2fc448
 DEBUG [2015-09-01 17:24:11,434] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e2fc448
 DEBUG [2015-09-01 17:24:11,434] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4cc61eb1
 DEBUG [2015-09-01 17:24:11,434] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@7728643a
 DEBUG [2015-09-01 17:24:11,434] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7728643a
 DEBUG [2015-09-01 17:24:11,434] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28c0b664
 DEBUG [2015-09-01 17:24:11,434] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@3228d990
 DEBUG [2015-09-01 17:24:11,449] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@160c3ec1
 DEBUG [2015-09-01 17:24:11,449] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@160c3ec1
 DEBUG [2015-09-01 17:24:11,449] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7577b641
 DEBUG [2015-09-01 17:24:11,449] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3704122f
 DEBUG [2015-09-01 17:24:11,449] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3153ddfc
 DEBUG [2015-09-01 17:24:11,449] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@60afd40d
 DEBUG [2015-09-01 17:24:11,449] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@28a2a3e7
 DEBUG [2015-09-01 17:24:11,449] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3f2049b6
 DEBUG [2015-09-01 17:24:11,449] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@10b3df93
 DEBUG [2015-09-01 17:24:11,449] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ea27e34
  INFO [2015-09-01 17:24:11,481] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-09-01 17:24:11,496] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-09-01 17:24:11,496] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-09-01 17:24:11,496] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-09-01 17:24:11,512] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-09-01 17:24:11,574] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-09-01 17:24:11,590] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-09-01 17:24:11,590] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-09-01 17:24:11,590] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-09-01 17:24:11,590] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-09-01 17:24:11,590] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-09-01 17:24:11,590] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-09-01 17:24:11,590] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-09-01 17:24:11,590] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-09-01 17:24:11,590] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-09-01 17:24:11,590] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-09-01 17:24:11,606] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-09-01 17:24:11,606] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-09-01 17:24:11,606] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-09-01 17:24:11,606] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-09-01 17:24:11,652] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-09-01 17:24:11,652] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-09-01 17:24:11,652] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-09-01 17:24:11,685] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-09-01 17:24:11,685] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-09-01 17:24:11,685] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-09-01 17:24:11,700] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-09-01 17:24:11,732] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-09-01 17:24:11,747] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-09-01 17:24:11,747] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-09-01 17:24:11,747] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-09-01 17:24:11,763] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-09-01 17:24:11,763] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-09-01 17:24:11,763] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-09-01 17:24:11,763] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-09-01 17:24:11,763] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-09-01 17:24:11,763] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-09-01 17:24:11,763] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-09-01 17:24:11,763] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-09-01 17:24:11,778] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-09-01 17:24:11,778] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-09-01 17:24:11,778] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-09-01 17:24:11,778] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-09-01 17:24:11,778] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-09-01 17:24:11,778] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-09-01 17:24:11,778] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-09-01 17:24:11,778] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-09-01 17:24:11,778] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-09-01 17:24:11,778] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-09-01 17:24:11,778] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-09-01 17:24:11,778] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-09-01 17:24:11,778] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-09-01 17:24:11,794] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-09-01 17:24:11,794] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-09-01 17:24:11,794] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-09-01 17:24:12,232] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-09-01 17:24:12,232] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-09-01 17:24:12,247] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-09-01 17:24:12,263] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-09-01 17:24:12,263] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-09-01 17:24:12,263] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-09-01 17:24:12,263] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-09-01 17:24:12,263] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-09-01 17:24:12,263] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-09-01 17:24:12,263] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-09-01 17:24:12,263] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-09-01 17:24:12,263] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-09-01 17:24:12,263] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-09-01 17:24:12,278] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-09-01 17:24:12,278] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-09-01 17:24:12,310] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-09-01 17:24:12,325] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-09-01 17:24:12,325] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-09-01 17:24:12,325] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.11.0\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:instantclient_12_1;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=com.twitter.twitter4j.stream.PrintFilterStream, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=invalidate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-09-01 17:24:12,341] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-09-01 17:24:12,482] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-09-01 17:24:12,482] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-09-01 17:24:12,482] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-09-01 17:24:12,482] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-09-01 17:24:12,482] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-09-01 17:24:12,482] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-09-01 17:24:12,513] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:24:12,513] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:24:12,513] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:24:12,513] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:24:12,513] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:24:12,513] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-09-01 17:24:12,513] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:24:12,513] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-09-01 17:24:12,513] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:24:12,513] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:24:12,528] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:24:12,528] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-09-01 17:24:12,544] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-09-01 17:24:12,544] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: 3ca0cf6c-1b29-436a-a878-77e5433586f4 (unnamed)
  INFO [2015-09-01 17:24:12,544] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-09-01 17:24:12,544] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
 DEBUG [2015-09-01 17:24:12,560] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-09-01 17:24:12,560] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-09-01 17:24:12,560] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:24:12,560] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-09-01 17:24:12,560] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:24:12,560] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-09-01 17:24:12,560] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-09-01 17:24:12,560] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-09-01 17:24:12,560] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-09-01 17:24:12,560] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:24:12,560] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:24:12,560] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:12,575] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-09-01 17:24:12,575] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:24:12,575] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:24:12,575] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:24:12,575] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:24:12,575] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-09-01 17:24:12,575] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:12,591] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:24:12,591] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-09-01 17:24:12,591] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:12,591] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-09-01 17:24:12,591] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-09-01 17:24:12,732] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-09-01 17:24:12,732] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-09-01 17:24:12,732] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:24:12,747] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:12,747] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:24:12,747] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:24:12,763] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:24:12,763] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:24:12,763] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:24:12,763] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:24:12,763] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:24:12,763] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:12,763] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:24:12,763] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:24:12,794] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-09-01 17:24:12,794] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-09-01 17:24:12,794] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:24:12,794] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:12,794] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:24:12,794] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:24:12,794] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:24:12,794] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:24:12,794] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:24:12,794] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-09-01 17:24:12,794] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-09-01 17:24:12,794] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-09-01 17:24:12,794] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-09-01 17:24:12,794] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-09-01 17:24:12,794] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-09-01 17:24:12,794] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:24:12,794] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:24:12,794] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:12,794] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-09-01 17:24:12,794] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:24:12,794] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-09-01 17:24:12,794] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:24:12,794] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:24:12,794] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:24:12,794] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-09-01 17:24:12,794] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:24:12,794] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:24:12,794] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-09-01 17:24:12,794] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-09-01 17:24:12,794] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-09-01 17:24:12,794] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-09-01 17:24:12,810] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-09-01 17:24:12,810] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-09-01 17:24:12,810] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:12,810] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-09-01 17:24:12,810] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-09-01 17:24:12,810] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-09-01 17:24:12,810] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-09-01 17:24:12,810] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-09-01 17:24:12,810] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-09-01 17:24:12,810] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:12,810] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-09-01 17:24:12,810] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-09-01 17:24:12,810] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-09-01 17:24:12,810] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:12,825] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-09-01 17:24:12,825] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-09-01 17:24:12,825] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-09-01 17:24:12,825] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-09-01 17:24:12,825] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-09-01 17:24:12,825] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:12,825] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-09-01 17:24:12,825] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-09-01 17:24:12,825] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-09-01 17:24:12,825] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-09-01 17:24:12,825] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-09-01 17:24:12,825] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-09-01 17:24:12,825] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-09-01 17:24:12,825] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-09-01 17:24:12,825] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-09-01 17:24:12,825] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-09-01 17:24:12,825] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-09-01 17:24:12,825] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-09-01 17:24:12,825] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-09-01 17:24:12,825] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:24:12,825] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:24:12,825] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:24:12,825] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-09-01 17:24:12,825] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:24:12,825] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:24:12,842] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:12,858] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-09-01 17:24:12,858] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-09-01 17:24:12,858] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@21079a12] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-09-01 17:24:12,858] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-09-01 17:24:12,858] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-09-01 17:24:12,858] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-09-01 17:24:12,858] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:12,858] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-09-01 17:24:12,858] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-09-01 17:24:12,858] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-09-01 17:24:12,858] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-09-01 17:24:12,858] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-09-01 17:24:12,858] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-09-01 17:24:12,858] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-09-01 17:24:12,858] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-09-01 17:24:12,873] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-09-01 17:24:12,873] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:24:12,873] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-09-01 17:24:12,873] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:24:12,873] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-09-01 17:24:12,873] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-09-01 17:24:12,873] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-09-01 17:24:12,873] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@dc79225]
 DEBUG [2015-09-01 17:24:12,873] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-09-01 17:24:12,873] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-09-01 17:24:12,873] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-09-01 17:24:12,873] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-09-01 17:24:12,873] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-09-01 17:24:12,873] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-09-01 17:24:12,920] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'configProperty'
  INFO [2015-09-01 17:24:13,076] (SLF4JLogger.java[info]:83) - Establishing connection.
 DEBUG [2015-09-01 17:24:13,092] (SLF4JLogger.java[debug]:67) - Twitter Stream consumer-1[Establishing connection]
 DEBUG [2015-09-01 17:24:13,233] (SLF4JLogger.java[debug]:67) - Request: 
 DEBUG [2015-09-01 17:24:13,233] (SLF4JLogger.java[debug]:75) - POST https://stream.twitter.com/1.1/statuses/filter.json
 DEBUG [2015-09-01 17:24:13,233] (SLF4JLogger.java[debug]:75) - OAuth base string: POST&https%3A%2F%2Fstream.twitter.com%2F1.1%2Fstatuses%2Ffilter.json&count%3D0%26language%3Dko%26oauth_consumer_key%3DWKzK4qYGZYuoOEYcnS9L50Gej%26oauth_nonce%3D1134787676%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1441095853%26oauth_token%3D3147697626-sn2hFfU81AxKN33y6qBbDChO98YptDPfelnq1I3%26oauth_version%3D1.0%26stall_warnings%3Dtrue%26track%3D%25EB%25B9%2585%25EB%258D%25B0%25EC%259D%25B4%25ED%2584%25B0
 DEBUG [2015-09-01 17:24:13,373] (SLF4JLogger.java[debug]:75) - OAuth signature: dGkF8/y7Masgngti6YhFKgOSlq8=
 DEBUG [2015-09-01 17:24:13,373] (SLF4JLogger.java[debug]:75) - Authorization: *************************************************************************************************************************************************************************************************************************************************************************************
 DEBUG [2015-09-01 17:24:13,373] (SLF4JLogger.java[debug]:67) - X-Twitter-Client-Version: 4.0.0
 DEBUG [2015-09-01 17:24:13,373] (SLF4JLogger.java[debug]:67) - X-Twitter-Client-URL: http://twitter4j.org/en/twitter4j-4.0.0.xml
 DEBUG [2015-09-01 17:24:13,373] (SLF4JLogger.java[debug]:67) - X-Twitter-Client: Twitter4J
 DEBUG [2015-09-01 17:24:13,373] (SLF4JLogger.java[debug]:67) - User-Agent: twitter4j http://twitter4j.org/ /4.0.0
 DEBUG [2015-09-01 17:24:13,373] (SLF4JLogger.java[debug]:67) - Connection: close
 DEBUG [2015-09-01 17:24:13,373] (SLF4JLogger.java[debug]:67) - Accept-Encoding: gzip
 DEBUG [2015-09-01 17:24:13,373] (SLF4JLogger.java[debug]:75) - Post Params: count=0&track=%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0&language=ko&stall_warnings=true
 DEBUG [2015-09-01 17:24:14,451] (SLF4JLogger.java[debug]:67) - Response: 
 DEBUG [2015-09-01 17:24:14,451] (SLF4JLogger.java[debug]:67) - date: Tue, 01 Sep 2015 08:24:17 GMT
 DEBUG [2015-09-01 17:24:14,451] (SLF4JLogger.java[debug]:67) - HTTP/1.1 420 Enhance Your Calm
 DEBUG [2015-09-01 17:24:14,451] (SLF4JLogger.java[debug]:67) - server: tsa
 DEBUG [2015-09-01 17:24:14,451] (SLF4JLogger.java[debug]:67) - content-length: 36
 DEBUG [2015-09-01 17:24:14,451] (SLF4JLogger.java[debug]:67) - x-connection-hash: c47d72e5942b0c46184c2731a6161fbb
 DEBUG [2015-09-01 17:24:14,451] (SLF4JLogger.java[debug]:67) - content-type: text/html
 DEBUG [2015-09-01 17:24:14,451] (SLF4JLogger.java[debug]:67) - connection: close
 DEBUG [2015-09-01 17:24:14,451] (SLF4JLogger.java[debug]:67) - Exceeded connection limit for user

  INFO [2015-09-01 17:24:14,451] (SLF4JLogger.java[info]:83) - 420:Returned by the Search and Trends API when you are being rate limited (https://dev.twitter.com/docs/rate-limiting).
Returned by the Streaming API:
 Too many login attempts in a short period of time.
 Running too many copies of the same application authenticating with the same account name.
Exceeded connection limit for user

  INFO [2015-09-01 17:24:14,468] (SLF4JLogger.java[info]:83) - Waiting for 10000 milliseconds
 DEBUG [2015-09-01 17:24:14,468] (SLF4JLogger.java[debug]:67) - Twitter Stream consumer-1[Waiting for 10000 milliseconds]
 DEBUG [2015-09-01 17:24:24,470] (SLF4JLogger.java[debug]:67) - 420:Returned by the Search and Trends API when you are being rate limited (https://dev.twitter.com/docs/rate-limiting).
Returned by the Streaming API:
 Too many login attempts in a short period of time.
 Running too many copies of the same application authenticating with the same account name.
Exceeded connection limit for user

  INFO [2015-09-01 17:24:24,470] (SLF4JLogger.java[info]:83) - Establishing connection.
 DEBUG [2015-09-01 17:24:24,470] (SLF4JLogger.java[debug]:67) - Twitter Stream consumer-1[Establishing connection]
 DEBUG [2015-09-01 17:24:24,470] (SLF4JLogger.java[debug]:67) - Request: 
 DEBUG [2015-09-01 17:24:24,470] (SLF4JLogger.java[debug]:75) - POST https://stream.twitter.com/1.1/statuses/filter.json
 DEBUG [2015-09-01 17:24:24,470] (SLF4JLogger.java[debug]:75) - OAuth base string: POST&https%3A%2F%2Fstream.twitter.com%2F1.1%2Fstatuses%2Ffilter.json&count%3D0%26language%3Dko%26oauth_consumer_key%3DWKzK4qYGZYuoOEYcnS9L50Gej%26oauth_nonce%3D2522818774%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1441095864%26oauth_token%3D3147697626-sn2hFfU81AxKN33y6qBbDChO98YptDPfelnq1I3%26oauth_version%3D1.0%26stall_warnings%3Dtrue%26track%3D%25EB%25B9%2585%25EB%258D%25B0%25EC%259D%25B4%25ED%2584%25B0
 DEBUG [2015-09-01 17:24:24,470] (SLF4JLogger.java[debug]:75) - OAuth signature: l/ONLj7JxfaR9MxJjY0wBf+Qkok=
 DEBUG [2015-09-01 17:24:24,470] (SLF4JLogger.java[debug]:75) - Authorization: ***************************************************************************************************************************************************************************************************************************************************************************************
 DEBUG [2015-09-01 17:24:24,470] (SLF4JLogger.java[debug]:67) - X-Twitter-Client-Version: 4.0.0
 DEBUG [2015-09-01 17:24:24,470] (SLF4JLogger.java[debug]:67) - X-Twitter-Client-URL: http://twitter4j.org/en/twitter4j-4.0.0.xml
 DEBUG [2015-09-01 17:24:24,470] (SLF4JLogger.java[debug]:67) - X-Twitter-Client: Twitter4J
 DEBUG [2015-09-01 17:24:24,470] (SLF4JLogger.java[debug]:67) - User-Agent: twitter4j http://twitter4j.org/ /4.0.0
 DEBUG [2015-09-01 17:24:24,470] (SLF4JLogger.java[debug]:67) - Connection: close
 DEBUG [2015-09-01 17:24:24,470] (SLF4JLogger.java[debug]:67) - Accept-Encoding: gzip
 DEBUG [2015-09-01 17:24:24,470] (SLF4JLogger.java[debug]:75) - Post Params: count=0&track=%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0&language=ko&stall_warnings=true
 DEBUG [2015-09-01 17:24:25,253] (SLF4JLogger.java[debug]:67) - Response: 
 DEBUG [2015-09-01 17:24:25,253] (SLF4JLogger.java[debug]:67) - date: Tue, 01 Sep 2015 08:24:28 GMT
 DEBUG [2015-09-01 17:24:25,253] (SLF4JLogger.java[debug]:67) - HTTP/1.1 420 Enhance Your Calm
 DEBUG [2015-09-01 17:24:25,253] (SLF4JLogger.java[debug]:67) - server: tsa
 DEBUG [2015-09-01 17:24:25,253] (SLF4JLogger.java[debug]:67) - content-length: 36
 DEBUG [2015-09-01 17:24:25,253] (SLF4JLogger.java[debug]:67) - x-connection-hash: 30443c20edb79e79982cfb2fa7038ed2
 DEBUG [2015-09-01 17:24:25,253] (SLF4JLogger.java[debug]:67) - content-type: text/html
 DEBUG [2015-09-01 17:24:25,253] (SLF4JLogger.java[debug]:67) - connection: close
 DEBUG [2015-09-01 17:24:25,269] (SLF4JLogger.java[debug]:67) - Exceeded connection limit for user

  INFO [2015-09-01 17:24:25,269] (SLF4JLogger.java[info]:83) - 420:Returned by the Search and Trends API when you are being rate limited (https://dev.twitter.com/docs/rate-limiting).
Returned by the Streaming API:
 Too many login attempts in a short period of time.
 Running too many copies of the same application authenticating with the same account name.
Exceeded connection limit for user

  INFO [2015-09-01 17:24:25,269] (SLF4JLogger.java[info]:83) - Waiting for 20000 milliseconds
 DEBUG [2015-09-01 17:24:25,269] (SLF4JLogger.java[debug]:67) - Twitter Stream consumer-1[Waiting for 20000 milliseconds]
 