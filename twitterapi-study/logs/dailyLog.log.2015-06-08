DEBUG [2015-06-08 23:17:39,115] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-08 23:17:39,263] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@28c4711c declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-08 23:17:39,269] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:39,275] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-08 23:17:39,292] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-08 23:17:39,330] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:39,332] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:39,336] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:39,336] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:39,351] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:39,351] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:39,355] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:39,355] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:39,357] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:39,358] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:39,365] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:39,372] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:39,386] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@358c99f5, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-08 23:17:39,388] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-08 23:17:39,389] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-08 23:17:39,782] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-08 23:17:39,786] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-08 23:17:39,795] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-08 23:17:39,795] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-08 23:17:39,905] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-08 23:17:40,001] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-08 23:17:40,110] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-08 23:17:40,122] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-08 23:17:40,124] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-08 23:17:40,236] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-08 23:17:40,259] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-08 23:17:40,272] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-08 23:17:40,297] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-08 23:17:40,361] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-08 23:17:40,485] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-08 23:17:40,485] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-08 23:17:40,490] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-08 23:17:40,494] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-08 23:17:40,499] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-08 23:17:40,500] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-08 23:17:40,501] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-08 23:17:40,504] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-08 23:17:40,506] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-08 23:17:40,508] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-08 23:17:40,510] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-08 23:17:40,513] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-08 23:17:40,516] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-08 23:17:40,518] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-08 23:17:40,519] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-08 23:17:40,521] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-08 23:17:40,525] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-08 23:17:40,530] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-08 23:17:40,577] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-08 23:17:40,661] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class]
 DEBUG [2015-06-08 23:17:40,674] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-08 23:17:40,677] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-08 23:17:40,684] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-08 23:17:40,689] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-08 23:17:41,291] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-08 23:17:41,292] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-08 23:17:41,304] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@2805c96b: startup date [Mon Jun 08 23:17:41 KST 2015]; root of context hierarchy
 DEBUG [2015-06-08 23:17:41,305] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@2805c96b: org.springframework.beans.factory.support.DefaultListableBeanFactory@327bcebd: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2]; root of factory hierarchy
 DEBUG [2015-06-08 23:17:41,383] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-08 23:17:41,384] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-08 23:17:41,433] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:41,437] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-08 23:17:41,537] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-08 23:17:41,537] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-08 23:17:41,540] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:41,540] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-08 23:17:41,541] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-08 23:17:41,541] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-08 23:17:41,543] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:41,543] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-08 23:17:41,544] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-08 23:17:41,544] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-08 23:17:41,560] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:41,561] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-08 23:17:41,561] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-08 23:17:41,562] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-08 23:17:41,567] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:41,567] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-08 23:17:41,568] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-08 23:17:41,568] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-08 23:17:41,569] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:41,569] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-08 23:17:41,570] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-08 23:17:41,571] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-08 23:17:41,571] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:41,572] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-08 23:17:41,582] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6986bbaf]
 DEBUG [2015-06-08 23:17:41,590] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@62727399]
 DEBUG [2015-06-08 23:17:41,596] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@327bcebd: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-08 23:17:41,597] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-08 23:17:41,600] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-08 23:17:41,625] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-08 23:17:41,627] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:41,673] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-08 23:17:41,674] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-08 23:17:41,674] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-08 23:17:41,716] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:41,840] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-08 23:17:41,841] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-08 23:17:41,880] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:41,938] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-08 23:17:41,939] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-08 23:17:42,260] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:42,294] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-08 23:17:42,336] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-08 23:17:42,471] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@5b057c8c
 DEBUG [2015-06-08 23:17:42,472] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@5b057c8c
 DEBUG [2015-06-08 23:17:42,473] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5b057c8c
 DEBUG [2015-06-08 23:17:42,477] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e1d3956
 DEBUG [2015-06-08 23:17:42,484] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@150ab4ed
 DEBUG [2015-06-08 23:17:42,486] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@7a8fa663
 DEBUG [2015-06-08 23:17:42,492] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@5b04476e
 DEBUG [2015-06-08 23:17:42,493] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@5b04476e
 DEBUG [2015-06-08 23:17:42,494] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b04476e
 DEBUG [2015-06-08 23:17:42,497] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@4a335fa8
 DEBUG [2015-06-08 23:17:42,498] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@4a335fa8
 DEBUG [2015-06-08 23:17:42,498] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4a335fa8
 DEBUG [2015-06-08 23:17:42,504] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@553f1d75
 DEBUG [2015-06-08 23:17:42,505] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@553f1d75
 DEBUG [2015-06-08 23:17:42,506] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@553f1d75
 DEBUG [2015-06-08 23:17:42,511] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@47404bea
 DEBUG [2015-06-08 23:17:42,511] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@47404bea
 DEBUG [2015-06-08 23:17:42,512] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@47404bea
 DEBUG [2015-06-08 23:17:42,519] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@3234f74e
 DEBUG [2015-06-08 23:17:42,519] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@3234f74e
 DEBUG [2015-06-08 23:17:42,520] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3234f74e
 DEBUG [2015-06-08 23:17:42,527] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@73ff4fae
 DEBUG [2015-06-08 23:17:42,528] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@73ff4fae
 DEBUG [2015-06-08 23:17:42,529] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@73ff4fae
 DEBUG [2015-06-08 23:17:42,542] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@64beebb7
 DEBUG [2015-06-08 23:17:42,542] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@64beebb7
 DEBUG [2015-06-08 23:17:42,542] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@64beebb7
 DEBUG [2015-06-08 23:17:42,551] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@76ba13c
 DEBUG [2015-06-08 23:17:42,551] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@76ba13c
 DEBUG [2015-06-08 23:17:42,556] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@410ae9a3
 DEBUG [2015-06-08 23:17:42,556] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@410ae9a3
 DEBUG [2015-06-08 23:17:42,560] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@1d1f7216
 DEBUG [2015-06-08 23:17:42,561] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d1f7216
 DEBUG [2015-06-08 23:17:42,564] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@2a1edad4
 DEBUG [2015-06-08 23:17:42,565] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a1edad4
 DEBUG [2015-06-08 23:17:42,571] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@fd0e5b6
 DEBUG [2015-06-08 23:17:42,571] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@fd0e5b6
 DEBUG [2015-06-08 23:17:42,576] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@7e809b79
 DEBUG [2015-06-08 23:17:42,577] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7e809b79
 DEBUG [2015-06-08 23:17:42,582] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@1a1da881
 DEBUG [2015-06-08 23:17:42,583] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1a1da881
 DEBUG [2015-06-08 23:17:42,583] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1a1da881
 DEBUG [2015-06-08 23:17:42,585] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5b970f7
 DEBUG [2015-06-08 23:17:42,587] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@751d3241
 DEBUG [2015-06-08 23:17:42,588] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@751d3241
 DEBUG [2015-06-08 23:17:42,588] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@751d3241
 DEBUG [2015-06-08 23:17:42,591] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30ea8c23
 DEBUG [2015-06-08 23:17:42,595] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@53e211ee
 DEBUG [2015-06-08 23:17:42,595] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@53e211ee
 DEBUG [2015-06-08 23:17:42,600] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@2a65bb85
 DEBUG [2015-06-08 23:17:42,600] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2a65bb85
 DEBUG [2015-06-08 23:17:42,602] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@184497d1
 DEBUG [2015-06-08 23:17:42,603] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@184497d1
 DEBUG [2015-06-08 23:17:42,607] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@35beb15e
 DEBUG [2015-06-08 23:17:42,608] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@35beb15e
 DEBUG [2015-06-08 23:17:42,615] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@71e5f61d
 DEBUG [2015-06-08 23:17:42,615] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@71e5f61d
 DEBUG [2015-06-08 23:17:42,617] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@fd46303
 DEBUG [2015-06-08 23:17:42,622] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@79e18e38
 DEBUG [2015-06-08 23:17:42,626] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@6d1d4d7
 DEBUG [2015-06-08 23:17:42,627] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@6d1d4d7
 DEBUG [2015-06-08 23:17:42,627] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@6d1d4d7
 DEBUG [2015-06-08 23:17:42,630] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5f2606b
 DEBUG [2015-06-08 23:17:42,630] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5f2606b
 DEBUG [2015-06-08 23:17:42,631] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5f2606b
 DEBUG [2015-06-08 23:17:42,633] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@2cf23c81
 DEBUG [2015-06-08 23:17:42,635] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@1255b1d1
 DEBUG [2015-06-08 23:17:42,636] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@1255b1d1
 DEBUG [2015-06-08 23:17:42,636] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@1255b1d1
 DEBUG [2015-06-08 23:17:42,640] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@46e8a539
 DEBUG [2015-06-08 23:17:42,641] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@46e8a539
 DEBUG [2015-06-08 23:17:42,641] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@46e8a539
 DEBUG [2015-06-08 23:17:42,644] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@27a5328c
 DEBUG [2015-06-08 23:17:42,651] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@224b4d61
 DEBUG [2015-06-08 23:17:42,651] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@224b4d61
 DEBUG [2015-06-08 23:17:42,653] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@362a019c
 DEBUG [2015-06-08 23:17:42,658] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@32cb636e
 DEBUG [2015-06-08 23:17:42,659] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@32cb636e
 DEBUG [2015-06-08 23:17:42,661] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6a1d204a
 DEBUG [2015-06-08 23:17:42,664] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@2f94c4db
 DEBUG [2015-06-08 23:17:42,675] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@2f7a7219
 DEBUG [2015-06-08 23:17:42,676] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2f7a7219
 DEBUG [2015-06-08 23:17:42,678] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@361c294e
 DEBUG [2015-06-08 23:17:42,678] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7859e786
 DEBUG [2015-06-08 23:17:42,679] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@285d851a
 DEBUG [2015-06-08 23:17:42,679] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@314b8f2d
 DEBUG [2015-06-08 23:17:42,679] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@664a9613
 DEBUG [2015-06-08 23:17:42,680] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5118388b
 DEBUG [2015-06-08 23:17:42,680] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@15a902e7
 DEBUG [2015-06-08 23:17:42,681] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7876d598
  INFO [2015-06-08 23:17:42,746] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-08 23:17:42,762] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-08 23:17:42,766] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-08 23:17:42,773] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-08 23:17:42,779] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-08 23:17:42,923] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-08 23:17:42,925] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-08 23:17:42,928] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-08 23:17:42,928] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-08 23:17:42,934] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-08 23:17:42,937] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-08 23:17:42,940] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-08 23:17:42,942] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-08 23:17:42,945] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-08 23:17:42,947] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-08 23:17:42,949] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-08 23:17:42,951] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-08 23:17:42,953] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-08 23:17:42,956] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-08 23:17:42,958] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-08 23:17:43,079] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-08 23:17:43,079] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-08 23:17:43,092] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-08 23:17:43,160] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-08 23:17:43,165] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-08 23:17:43,178] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-08 23:17:43,192] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-08 23:17:43,248] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-08 23:17:43,258] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-08 23:17:43,265] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-08 23:17:43,271] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-08 23:17:43,282] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-08 23:17:43,284] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-08 23:17:43,287] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-08 23:17:43,287] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-08 23:17:43,288] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-08 23:17:43,288] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-08 23:17:43,289] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-08 23:17:43,290] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-08 23:17:43,316] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-08 23:17:43,325] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-08 23:17:43,327] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-08 23:17:43,327] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-08 23:17:43,330] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-08 23:17:43,330] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-08 23:17:43,331] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-08 23:17:43,331] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-08 23:17:43,332] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-08 23:17:43,332] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-08 23:17:43,332] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-08 23:17:43,333] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-08 23:17:43,341] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-08 23:17:43,352] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-08 23:17:43,353] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-08 23:17:43,362] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-08 23:17:44,115] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-08 23:17:44,116] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-08 23:17:44,174] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-08 23:17:44,213] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-08 23:17:44,216] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-08 23:17:44,217] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-08 23:17:44,217] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-08 23:17:44,218] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-08 23:17:44,218] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-08 23:17:44,220] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-08 23:17:44,220] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-08 23:17:44,221] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-08 23:17:44,221] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-08 23:17:44,223] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-08 23:17:44,224] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-08 23:17:44,224] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-08 23:17:44,224] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-08 23:17:44,225] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-08 23:17:44,225] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-08 23:17:44,232] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-08 23:17:44,232] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-08 23:17:44,233] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-08 23:17:44,233] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-08 23:17:44,233] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-08 23:17:44,234] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-08 23:17:44,237] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-08 23:17:44,238] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-08 23:17:44,248] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-08 23:17:44,250] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-08 23:17:44,251] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-08 23:17:44,252] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-08 23:17:44,252] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-08 23:17:44,252] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-08 23:17:44,307] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-08 23:17:44,323] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-08 23:17:44,331] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-08 23:17:44,332] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 12556 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-08 23:17:44,363] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-08 23:17:44,684] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-08 23:17:44,684] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-08 23:17:44,685] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-08 23:17:44,685] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-08 23:17:44,685] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-08 23:17:44,686] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-08 23:17:44,739] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-08 23:17:44,740] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-08 23:17:44,740] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-08 23:17:44,740] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-08 23:17:44,741] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-08 23:17:44,741] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-08 23:17:44,742] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-08 23:17:44,742] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-08 23:17:44,743] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-08 23:17:44,744] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-08 23:17:44,759] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-08 23:17:44,759] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-08 23:17:44,939] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-08 23:17:44,942] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: 3a71f5ef-1cdc-4953-937a-758c49364d09 (unnamed)
  INFO [2015-06-08 23:17:44,943] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-08 23:17:44,943] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-08 23:17:44,951] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-08 23:17:44,952] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-08 23:17:44,953] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-08 23:17:44,954] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-08 23:17:44,954] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-08 23:17:44,955] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-08 23:17:44,955] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-08 23:17:44,955] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-08 23:17:44,956] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-08 23:17:44,956] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-08 23:17:44,957] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-08 23:17:45,017] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-08 23:17:45,018] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-08 23:17:45,018] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-08 23:17:45,027] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-08 23:17:45,027] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-08 23:17:45,031] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-08 23:17:45,032] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-08 23:17:45,033] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-08 23:17:45,033] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-08 23:17:45,034] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-08 23:17:45,034] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-08 23:17:45,038] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-08 23:17:45,059] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-08 23:17:45,060] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-08 23:17:45,060] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:45,069] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-08 23:17:45,069] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-08 23:17:45,070] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-08 23:17:45,078] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-08 23:17:45,079] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-08 23:17:45,096] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-08 23:17:45,104] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:45,115] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-08 23:17:45,115] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-08 23:17:45,117] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:45,118] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-08 23:17:45,119] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-08 23:17:45,459] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-08 23:17:45,461] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-08 23:17:45,464] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-08 23:17:45,541] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:45,552] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-08 23:17:45,553] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-08 23:17:45,563] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-08 23:17:45,563] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-08 23:17:45,564] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-08 23:17:45,564] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-08 23:17:45,565] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-08 23:17:45,566] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:45,566] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-08 23:17:45,568] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-08 23:17:45,669] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-08 23:17:45,670] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-08 23:17:45,670] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-08 23:17:45,672] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:45,673] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-08 23:17:45,675] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-08 23:17:45,676] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-08 23:17:45,677] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-08 23:17:45,678] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-08 23:17:45,678] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-08 23:17:45,679] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-08 23:17:45,679] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-08 23:17:45,679] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-08 23:17:45,680] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-08 23:17:45,682] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-08 23:17:45,684] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-08 23:17:45,684] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-08 23:17:45,685] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:45,693] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-08 23:17:45,693] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-08 23:17:45,694] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-08 23:17:45,694] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-08 23:17:45,695] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-08 23:17:45,695] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-08 23:17:45,696] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-08 23:17:45,696] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-08 23:17:45,697] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-08 23:17:45,697] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-08 23:17:45,698] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-08 23:17:45,698] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-08 23:17:45,698] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-08 23:17:45,699] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-08 23:17:45,700] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-08 23:17:45,700] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:45,707] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-08 23:17:45,708] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-08 23:17:45,708] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-08 23:17:45,708] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-08 23:17:45,709] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-08 23:17:45,712] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-08 23:17:45,713] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:45,719] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-08 23:17:45,722] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-08 23:17:45,722] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-08 23:17:45,723] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:45,746] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-08 23:17:45,747] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-08 23:17:45,754] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-08 23:17:45,755] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-08 23:17:45,755] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-08 23:17:45,756] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:45,759] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-08 23:17:45,759] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-08 23:17:45,765] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-08 23:17:45,765] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-08 23:17:45,766] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-08 23:17:45,766] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-08 23:17:45,766] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-08 23:17:45,767] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-08 23:17:45,767] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-08 23:17:45,767] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-08 23:17:45,767] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-08 23:17:45,768] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-08 23:17:45,769] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-08 23:17:45,769] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-08 23:17:45,769] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-08 23:17:45,770] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-08 23:17:45,770] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-08 23:17:45,770] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-08 23:17:45,770] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-08 23:17:45,802] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:45,826] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-08 23:17:45,827] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-08 23:17:45,851] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@4d0753c9] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-08 23:17:45,853] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-08 23:17:45,853] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-08 23:17:45,853] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-08 23:17:45,856] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:45,875] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-08 23:17:45,876] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-08 23:17:45,876] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-08 23:17:45,876] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-08 23:17:45,877] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-08 23:17:45,878] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-08 23:17:45,878] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-08 23:17:45,879] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-08 23:17:45,879] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-08 23:17:45,880] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-08 23:17:45,880] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-08 23:17:45,881] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-08 23:17:45,881] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-08 23:17:45,882] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-08 23:17:45,882] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-08 23:17:45,886] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@28f878a0]
 DEBUG [2015-06-08 23:17:45,887] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-08 23:17:45,899] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-08 23:17:45,900] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-08 23:17:45,903] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-08 23:17:45,905] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-08 23:17:45,907] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-08 23:17:45,909] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-08 23:17:45,922] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-08 23:17:45,923] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-08 23:17:45,923] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-08 23:17:45,923] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-08 23:17:45,924] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-08 23:17:45,924] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-08 23:17:45,934] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.mybatisTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-08 23:17:45,939] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@358c99f5, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-08 23:17:45,939] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-08 23:17:45,942] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-08 23:17:45,942] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-08 23:17:45,943] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-08 23:17:45,958] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [mybatisTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-08 23:17:45,961] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-08 23:17:45,970] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-08 23:17:45,972] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-08 23:17:45,974] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@64f16277 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-08 23:17:45,975] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@358c99f5, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-08 23:17:45,976] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@358c99f5, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@21e20ad5]; rollback [true]
 DEBUG [2015-06-08 23:17:45,982] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-08 23:17:45,986] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-08 23:17:45,996] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-08 23:17:46,006] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@350a94ce]
 DEBUG [2015-06-08 23:17:46,268] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-08 23:17:46,269] (Slf4jImpl.java[debug]:28) - ==> Parameters: 52(Integer)
 DEBUG [2015-06-08 23:17:46,285] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@350a94ce]
 DEBUG [2015-06-08 23:17:46,286] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-08 23:17:46,383] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14337730662
 DEBUG [2015-06-08 23:17:46,383] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-08 23:17:46,387] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-08 23:17:46,399] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 67, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-08 23:17:46,423] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-08 23:17:46,423] (Slf4jImpl.java[debug]:28) - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@350a94ce] from current transaction
 DEBUG [2015-06-08 23:17:46,427] (Slf4jImpl.java[debug]:28) - ==>  Executing: select * from types; 
 DEBUG [2015-06-08 23:17:46,428] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-08 23:17:46,455] (Slf4jImpl.java[debug]:28) - <==    Columns: typeId
 DEBUG [2015-06-08 23:17:46,455] (Slf4jImpl.java[debug]:28) - <==        Row: 1
 DEBUG [2015-06-08 23:17:46,457] (Slf4jImpl.java[debug]:28) - <==        Row: 19
 DEBUG [2015-06-08 23:17:46,457] (Slf4jImpl.java[debug]:28) - <==        Row: 5
 DEBUG [2015-06-08 23:17:46,458] (Slf4jImpl.java[debug]:28) - <==        Row: 52
 DEBUG [2015-06-08 23:17:46,458] (Slf4jImpl.java[debug]:28) - <==        Row: 73
 DEBUG [2015-06-08 23:17:46,459] (Slf4jImpl.java[debug]:28) - <==        Row: 81
 DEBUG [2015-06-08 23:17:46,459] (Slf4jImpl.java[debug]:28) - <==        Row: 96
 DEBUG [2015-06-08 23:17:46,461] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@350a94ce]
 DEBUG [2015-06-08 23:17:46,462] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@358c99f5, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-08 23:17:46,462] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-08 23:17:46,463] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-08 23:17:46,470] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-08 23:17:46,474] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@350a94ce]
 DEBUG [2015-06-08 23:17:46,476] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-08 23:17:46,476] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-08 23:17:46,476] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@358c99f5, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-08 23:17:46,480] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@358c99f5, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-08 23:17:46,483] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:46,483] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:46,484] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@741f8dbe, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-08 23:17:46,484] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-08 23:17:46,485] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-08 23:17:46,485] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-08 23:17:46,485] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-08 23:17:46,486] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-08 23:17:46,487] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-08 23:17:46,487] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'] found for test context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@741f8dbe, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-08 23:17:46,487] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-08 23:17:46,488] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-08 23:17:46,488] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-08 23:17:46,488] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-08 23:17:46,491] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-08 23:17:46,491] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14337730664
 DEBUG [2015-06-08 23:17:46,492] (HibernateTransactionManager.java[doBegin]:498) - Opened new Session [org.hibernate.impl.SessionImpl@6daf7d37] for Hibernate transaction
 DEBUG [2015-06-08 23:17:46,492] (HibernateTransactionManager.java[doBegin]:509) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6daf7d37]
 DEBUG [2015-06-08 23:17:46,512] (JDBCTransaction.java[begin]:78) - begin
 DEBUG [2015-06-08 23:17:46,513] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-08 23:17:46,513] (JDBCTransaction.java[begin]:83) - current autocommit status: true
 DEBUG [2015-06-08 23:17:46,513] (JDBCTransaction.java[begin]:86) - disabling autocommit
 DEBUG [2015-06-08 23:17:46,517] (HibernateTransactionManager.java[doBegin]:574) - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-08 23:17:46,518] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@741f8dbe, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-08 23:17:46,518] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (2) for test context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@741f8dbe, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3bddc676]; rollback [true]
 DEBUG [2015-06-08 23:17:46,518] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-08 23:17:46,518] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 98, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-08 23:17:46,518] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-08 23:17:46,519] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14337730665
 DEBUG [2015-06-08 23:17:46,630] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-08 23:17:46,660] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-08 23:17:46,660] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-08 23:17:46,747] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-08 23:17:46,778] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-08 23:17:46,779] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-08 23:17:46,779] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-08 23:17:46,788] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-08 23:17:46,801] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-08 23:17:46,802] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-08 23:17:46,804] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-08 23:17:46,804] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-08 23:17:46,836] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-08 23:17:46,837] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-08 23:17:46,837] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-08 23:17:46,860] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-08 23:17:46,861] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-08 23:17:46,891] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-08 23:17:46,894] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-08 23:17:46,903] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#1]
 DEBUG [2015-06-08 23:17:46,906] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#19]
 DEBUG [2015-06-08 23:17:46,907] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#5]
 DEBUG [2015-06-08 23:17:46,908] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-08 23:17:46,908] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#81]
 DEBUG [2015-06-08 23:17:46,909] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-08 23:17:46,909] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-08 23:17:46,910] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-08 23:17:46,912] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#1]
 DEBUG [2015-06-08 23:17:46,913] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#1]
 DEBUG [2015-06-08 23:17:46,913] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#19]
 DEBUG [2015-06-08 23:17:46,914] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#19]
 DEBUG [2015-06-08 23:17:46,914] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#5]
 DEBUG [2015-06-08 23:17:46,914] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#5]
 DEBUG [2015-06-08 23:17:46,915] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-08 23:17:46,915] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-08 23:17:46,915] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#81]
 DEBUG [2015-06-08 23:17:46,915] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#81]
 DEBUG [2015-06-08 23:17:46,916] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-08 23:17:46,916] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-08 23:17:46,916] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-08 23:17:46,922] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-08 23:17:46,922] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-08 23:17:46,923] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@741f8dbe, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-08 23:17:46,923] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-08 23:17:46,923] (HibernateTransactionManager.java[doRollback]:677) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6daf7d37]
 DEBUG [2015-06-08 23:17:46,923] (JDBCTransaction.java[rollback]:182) - rollback
 DEBUG [2015-06-08 23:17:46,924] (JDBCTransaction.java[toggleAutoCommit]:223) - re-enabling autocommit
 DEBUG [2015-06-08 23:17:46,926] (JDBCTransaction.java[rollback]:193) - rolled back JDBC Connection
 DEBUG [2015-06-08 23:17:46,926] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-08 23:17:46,926] (HibernateTransactionManager.java[doCleanupAfterCompletion]:740) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6daf7d37] after transaction
 DEBUG [2015-06-08 23:17:46,927] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-08 23:17:46,927] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-08 23:17:46,927] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
  INFO [2015-06-08 23:17:46,928] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@741f8dbe, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-08 23:17:46,929] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@741f8dbe, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-08 23:17:46,929] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:46,929] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:46,930] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@3cd9aa64, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-08 23:17:46,930] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-08 23:17:46,931] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-08 23:17:46,931] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-08 23:17:46,931] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-08 23:17:46,931] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-08 23:17:46,933] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.deleteTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-08 23:17:46,933] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@3cd9aa64, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-08 23:17:46,934] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-08 23:17:46,934] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-08 23:17:46,934] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-08 23:17:46,934] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-08 23:17:46,936] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [deleteTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-08 23:17:46,937] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-08 23:17:46,938] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-08 23:17:46,939] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@3cd9aa64, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-08 23:17:46,940] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (3) for test context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@3cd9aa64, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@21e20ad5]; rollback [true]
 DEBUG [2015-06-08 23:17:46,941] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-08 23:17:46,941] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-08 23:17:46,942] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-08 23:17:46,942] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41eb94bc]
 DEBUG [2015-06-08 23:17:46,943] (Slf4jImpl.java[debug]:28) - ==>  Executing: delete from types where 1=1 
 DEBUG [2015-06-08 23:17:46,943] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-08 23:17:46,945] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41eb94bc]
 DEBUG [2015-06-08 23:17:46,946] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@3cd9aa64, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-08 23:17:46,946] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-08 23:17:46,947] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-08 23:17:46,961] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41eb94bc]
 DEBUG [2015-06-08 23:17:46,963] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-08 23:17:46,964] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-08 23:17:46,964] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@3cd9aa64, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-08 23:17:46,966] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = com.spring.SpringTest@3cd9aa64, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-08 23:17:46,967] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@53ca01a2 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3ee0fea4 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-08 23:17:46,993] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@2805c96b: startup date [Mon Jun 08 23:17:41 KST 2015]; root of context hierarchy
 DEBUG [2015-06-08 23:17:46,994] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-08 23:17:46,994] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-08 23:17:46,995] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-08 23:17:46,995] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@327bcebd: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-08 23:17:47,014] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'mybatisService': [com.spring.SpringTest]
 DEBUG [2015-06-08 23:17:47,015] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-08 23:17:47,019] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-08 23:17:47,019] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-08 23:17:47,019] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-08 23:17:47,023] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 