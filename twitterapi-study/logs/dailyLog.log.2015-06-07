DEBUG [2015-06-07 11:33:33,641] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:33:33,766] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@23a5fd2 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:33:33,766] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:33,785] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:33:33,791] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:33:33,807] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:33,807] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:33,823] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:33,823] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:33,823] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:33,823] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:33,823] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:33,823] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:33,839] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:33,839] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:33,839] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:33,839] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:33,839] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@6f3b5d16, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:33:33,839] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:33:33,839] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:34,042] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:33:34,057] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:33:34,057] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:33:34,057] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:33:34,151] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:33:34,214] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:33:34,295] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:33:34,295] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:33:34,295] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:33:34,358] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:33:34,373] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:33:34,373] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:33:34,389] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:33:34,420] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:33:34,498] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:33:34,498] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:34,498] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:34,498] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:34,498] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:33:34,498] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:34,514] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:34,514] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:34,514] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:34,514] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:34,514] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:34,514] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:34,514] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:34,514] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:34,514] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:34,514] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:34,514] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:34,514] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:33:34,561] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:33:34,624] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:33:34,624] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:33:34,639] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:33:34,639] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:33:34,921] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao': replacing [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:33:34,921] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao2': replacing [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:33:34,921] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:33:34,921] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:33:34,938] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@16e7dcfd: startup date [Sun Jun 07 11:33:34 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:33:34,938] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@16e7dcfd: org.springframework.beans.factory.support.DefaultListableBeanFactory@479460a6: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao]; root of factory hierarchy
 DEBUG [2015-06-07 11:33:34,985] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:33:34,985] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,016] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,016] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,094] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,094] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,094] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,094] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,094] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,094] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,094] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,094] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,094] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,094] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,110] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,110] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,110] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,110] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,110] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,110] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,110] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:33:35,110] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:33:35,110] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,110] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:33:35,110] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:33:35,110] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:33:35,110] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,110] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:33:35,126] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@45fd9a4d]
 DEBUG [2015-06-07 11:33:35,126] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@4879dfad]
 DEBUG [2015-06-07 11:33:35,126] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@479460a6: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:33:35,126] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:33:35,126] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:33:35,141] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:33:35,157] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:33:35,157] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:33:35,157] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,172] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:33:35,172] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:33:35,172] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:33:35,188] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:35,188] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:35,204] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:33:35,219] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,235] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:33:35,235] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:33:35,418] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,449] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:33:35,449] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:35,638] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:33:35,638] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:33:35,638] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:35,669] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,685] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:33:35,685] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:33:35,700] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:33:35,700] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:33:35,700] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:33:35,700] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:35,700] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:35,700] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,700] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:33:35,700] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:33:35,700] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,700] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:33:35,700] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:35,731] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:33:35,731] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:33:35,731] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:35,731] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,731] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:33:35,731] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:33:35,731] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:33:35,731] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:35,731] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:35,731] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:35,731] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:33:35,731] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:33:35,731] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:33:35,731] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:33:35,731] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:33:35,731] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:33:35,731] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:33:35,731] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,747] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:33:35,747] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:33:35,747] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:33:35,747] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:33:35,747] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:33:35,747] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:33:35,747] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:33:35,747] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:35,747] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:35,747] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:35,747] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:33:35,747] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:33:35,747] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:33:35,747] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:33:35,747] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:33:35,747] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,747] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:33:35,747] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:33:35,747] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:33:35,747] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:33:35,747] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:33:35,747] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:33:35,747] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,763] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:33:35,763] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:33:35,763] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:33:35,763] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,778] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:33:35,778] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:33:35,778] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:33:35,778] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:33:35,778] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:33:35,778] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,778] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:33:35,778] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:33:35,778] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:33:35,778] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:33:35,778] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:33:35,778] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:33:35,778] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,778] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,778] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,778] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,778] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:33:35,778] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:33:35,778] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:33:35,778] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:33:35,778] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:33:35,778] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:33:35,778] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:33:35,794] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:35,810] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:33:35,810] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:33:35,872] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@f713686
 DEBUG [2015-06-07 11:33:35,872] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@f713686
 DEBUG [2015-06-07 11:33:35,872] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@f713686
 DEBUG [2015-06-07 11:33:35,888] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@620aa4ea
 DEBUG [2015-06-07 11:33:35,888] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7d373bcf
 DEBUG [2015-06-07 11:33:35,888] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@54afd745
 DEBUG [2015-06-07 11:33:35,888] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@2f3c6ac4
 DEBUG [2015-06-07 11:33:35,888] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@2f3c6ac4
 DEBUG [2015-06-07 11:33:35,888] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2f3c6ac4
 DEBUG [2015-06-07 11:33:35,888] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@5769e7ae
 DEBUG [2015-06-07 11:33:35,888] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@5769e7ae
 DEBUG [2015-06-07 11:33:35,888] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5769e7ae
 DEBUG [2015-06-07 11:33:35,888] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@7072bc39
 DEBUG [2015-06-07 11:33:35,888] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@7072bc39
 DEBUG [2015-06-07 11:33:35,888] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7072bc39
 DEBUG [2015-06-07 11:33:35,903] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@ecf9049
 DEBUG [2015-06-07 11:33:35,903] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@ecf9049
 DEBUG [2015-06-07 11:33:35,903] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ecf9049
 DEBUG [2015-06-07 11:33:35,903] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@6bc28a83
 DEBUG [2015-06-07 11:33:35,903] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@6bc28a83
 DEBUG [2015-06-07 11:33:35,903] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6bc28a83
 DEBUG [2015-06-07 11:33:35,903] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@7646731d
 DEBUG [2015-06-07 11:33:35,903] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@7646731d
 DEBUG [2015-06-07 11:33:35,903] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7646731d
 DEBUG [2015-06-07 11:33:35,903] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@384fc774
 DEBUG [2015-06-07 11:33:35,903] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@384fc774
 DEBUG [2015-06-07 11:33:35,903] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@384fc774
 DEBUG [2015-06-07 11:33:35,919] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@69adf72c
 DEBUG [2015-06-07 11:33:35,919] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@69adf72c
 DEBUG [2015-06-07 11:33:35,919] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@30c31dd7
 DEBUG [2015-06-07 11:33:35,919] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@30c31dd7
 DEBUG [2015-06-07 11:33:35,919] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@70e659aa
 DEBUG [2015-06-07 11:33:35,919] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@70e659aa
 DEBUG [2015-06-07 11:33:35,919] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@7249dadf
 DEBUG [2015-06-07 11:33:35,919] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7249dadf
 DEBUG [2015-06-07 11:33:35,919] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@7957dc72
 DEBUG [2015-06-07 11:33:35,919] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7957dc72
 DEBUG [2015-06-07 11:33:35,919] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@1734f68
 DEBUG [2015-06-07 11:33:35,919] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1734f68
 DEBUG [2015-06-07 11:33:35,935] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@3d4d3fe7
 DEBUG [2015-06-07 11:33:35,935] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3d4d3fe7
 DEBUG [2015-06-07 11:33:35,935] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3d4d3fe7
 DEBUG [2015-06-07 11:33:35,935] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@38875e7d
 DEBUG [2015-06-07 11:33:35,935] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@3113a37
 DEBUG [2015-06-07 11:33:35,935] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3113a37
 DEBUG [2015-06-07 11:33:35,935] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3113a37
 DEBUG [2015-06-07 11:33:35,935] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@70eecdc2
 DEBUG [2015-06-07 11:33:35,935] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@1a6f5124
 DEBUG [2015-06-07 11:33:35,935] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a6f5124
 DEBUG [2015-06-07 11:33:35,935] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@f5c79a6
 DEBUG [2015-06-07 11:33:35,935] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@f5c79a6
 DEBUG [2015-06-07 11:33:35,935] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@66d23e4a
 DEBUG [2015-06-07 11:33:35,935] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@66d23e4a
 DEBUG [2015-06-07 11:33:35,950] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@41c07648
 DEBUG [2015-06-07 11:33:35,950] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@41c07648
 DEBUG [2015-06-07 11:33:35,950] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@ecf9fb3
 DEBUG [2015-06-07 11:33:35,950] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@ecf9fb3
 DEBUG [2015-06-07 11:33:35,950] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@37d3d232
 DEBUG [2015-06-07 11:33:35,950] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@46cf05f7
 DEBUG [2015-06-07 11:33:35,950] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@547e29a4
 DEBUG [2015-06-07 11:33:35,950] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@547e29a4
 DEBUG [2015-06-07 11:33:35,950] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@547e29a4
 DEBUG [2015-06-07 11:33:35,950] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@c8b96ec
 DEBUG [2015-06-07 11:33:35,950] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@c8b96ec
 DEBUG [2015-06-07 11:33:35,950] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@c8b96ec
 DEBUG [2015-06-07 11:33:35,950] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@5949eba8
 DEBUG [2015-06-07 11:33:35,966] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@7728643a
 DEBUG [2015-06-07 11:33:35,966] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@7728643a
 DEBUG [2015-06-07 11:33:35,966] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@7728643a
 DEBUG [2015-06-07 11:33:35,966] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ebd78d1
 DEBUG [2015-06-07 11:33:35,966] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ebd78d1
 DEBUG [2015-06-07 11:33:35,966] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ebd78d1
 DEBUG [2015-06-07 11:33:35,966] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@50b8ae8d
 DEBUG [2015-06-07 11:33:35,966] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@47d93e0d
 DEBUG [2015-06-07 11:33:35,966] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@47d93e0d
 DEBUG [2015-06-07 11:33:35,966] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@182b435b
 DEBUG [2015-06-07 11:33:35,981] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@33c2bd
 DEBUG [2015-06-07 11:33:35,981] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@33c2bd
 DEBUG [2015-06-07 11:33:35,981] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3abd581e
 DEBUG [2015-06-07 11:33:35,981] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@2c22a348
 DEBUG [2015-06-07 11:33:35,981] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@2b27cc70
 DEBUG [2015-06-07 11:33:35,981] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2b27cc70
 DEBUG [2015-06-07 11:33:35,981] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6ca320ab
 DEBUG [2015-06-07 11:33:35,981] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@50d68830
 DEBUG [2015-06-07 11:33:35,981] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1e53135d
 DEBUG [2015-06-07 11:33:35,981] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7674a051
 DEBUG [2015-06-07 11:33:35,981] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a7704c
 DEBUG [2015-06-07 11:33:35,981] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6754ef00
 DEBUG [2015-06-07 11:33:35,981] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@619bd14c
 DEBUG [2015-06-07 11:33:35,981] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@323e8306
  INFO [2015-06-07 11:33:36,013] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:33:36,013] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:33:36,029] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:33:36,029] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:33:36,029] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:33:36,107] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:33:36,107] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:33:36,107] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:33:36,107] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:33:36,123] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:33:36,123] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:33:36,123] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:33:36,123] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:33:36,123] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:33:36,123] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:33:36,123] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:33:36,123] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:33:36,123] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:33:36,139] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:33:36,139] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:33:36,186] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:33:36,186] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:33:36,201] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:33:36,232] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:33:36,232] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:33:36,248] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:33:36,248] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:33:36,295] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:33:36,295] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:33:36,295] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:33:36,295] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:33:36,311] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:33:36,311] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:33:36,311] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:33:36,311] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:33:36,311] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:33:36,311] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:33:36,311] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:33:36,311] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:33:36,328] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:33:36,328] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:33:36,328] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:33:36,328] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:33:36,328] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:33:36,328] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:33:36,328] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:33:36,328] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:33:36,328] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:33:36,328] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:33:36,328] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:33:36,328] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:33:36,328] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:33:36,328] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:33:36,328] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:33:36,344] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:33:36,730] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:33:36,730] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:33:36,839] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:33:36,870] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:33:36,870] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:33:36,870] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:33:36,870] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:33:36,870] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:33:36,886] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:33:36,886] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:33:36,886] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:33:36,886] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:33:36,886] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:33:36,886] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:33:36,886] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:33:36,886] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:33:36,917] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:33:36,917] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:33:36,917] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:33:36,917] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14255 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:33:36,933] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:33:37,089] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:33:37,089] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:33:37,089] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:33:37,089] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:33:37,089] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:33:37,089] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:33:37,120] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:33:37,120] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:33:37,120] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:33:37,120] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:33:37,120] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:33:37,120] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:33:37,120] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:33:37,120] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:33:37,120] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:33:37,120] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:33:37,136] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:33:37,136] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:33:37,214] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:33:37,214] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: 65e4df05-af37-470f-8b3e-cdca32a0b2cd (unnamed)
  INFO [2015-06-07 11:33:37,214] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:33:37,214] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:33:37,214] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:33:37,214] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:33:37,214] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:33:37,214] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:33:37,214] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:33:37,214] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:33:37,214] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:33:37,214] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:33:37,214] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:33:37,214] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:33:37,214] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:33:37,262] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:33:37,262] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:33:37,262] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:33:37,262] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:33:37,262] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:33:37,262] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:33:37,262] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:33:37,262] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:33:37,278] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:37,293] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:33:37,293] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:33:37,293] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:33:37,293] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:33:37,293] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:33:37,309] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:37,309] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:33:37,309] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:33:37,325] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@351f2244] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:33:37,325] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:33:37,325] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:33:37,325] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:33:37,325] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:37,325] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:33:37,325] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:33:37,325] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:33:37,325] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:33:37,325] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:33:37,325] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:37,340] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:33:37,340] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:33:37,340] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:33:37,340] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:37,340] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:33:37,340] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:37,340] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:33:37,340] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:33:37,340] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:33:37,340] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:33:37,340] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:37,340] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:33:37,340] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:33:37,340] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:33:37,340] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:33:37,340] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:33:37,340] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@148c7c4b]
 DEBUG [2015-06-07 11:33:37,340] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:33:37,340] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:37,340] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:37,356] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:33:37,356] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:33:37,356] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:33:37,356] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:37,356] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:33:37,356] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:33:37,356] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:33:37,356] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.dao.MybatisDao com.spring.SpringTest.mybatisDao
 DEBUG [2015-06-07 11:33:37,356] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:33:37,356] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisDao'
 DEBUG [2015-06-07 11:33:37,356] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:33:37,356] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:33:37,356] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:33:37,356] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.mybatisTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:33:37,356] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@6f3b5d16, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:33:37,371] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:37,373] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:33:37,373] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:33:37,373] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:33:37,378] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [mybatisTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:33:37,393] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:33:37,409] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:33:37,409] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:33:37,409] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@73fc518f transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:33:37,409] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@6f3b5d16, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:33:37,409] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@6f3b5d16, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@151ef57f]; rollback [true]
 DEBUG [2015-06-07 11:33:37,409] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:33:37,409] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:33:37,424] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:33:37,424] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ac6c4f2]
 DEBUG [2015-06-07 11:33:37,503] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:33:37,503] (Slf4jImpl.java[debug]:28) - ==> Parameters: 84(Integer)
 DEBUG [2015-06-07 11:33:37,503] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ac6c4f2]
 DEBUG [2015-06-07 11:33:37,503] (DataSourceUtils.java[doGetConnection]:110) - Fetching JDBC Connection from DataSource
 DEBUG [2015-06-07 11:33:37,503] (DataSourceUtils.java[doGetConnection]:114) - Registering transaction synchronization for JDBC Connection
 DEBUG [2015-06-07 11:33:37,503] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:33:37,503] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:33:37,503] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:33:37,503] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3901f6af]
 DEBUG [2015-06-07 11:33:37,503] (Slf4jImpl.java[debug]:28) - ==>  Executing: select * from types; 
 DEBUG [2015-06-07 11:33:37,518] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:33:37,518] (Slf4jImpl.java[debug]:28) - <==    Columns: typeId
 DEBUG [2015-06-07 11:33:37,518] (Slf4jImpl.java[debug]:28) - <==        Row: 96
 DEBUG [2015-06-07 11:33:37,518] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3901f6af]
 DEBUG [2015-06-07 11:33:37,518] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@6f3b5d16, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:37,518] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:33:37,534] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:33:37,534] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ac6c4f2]
 DEBUG [2015-06-07 11:33:37,534] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3901f6af]
 DEBUG [2015-06-07 11:33:37,534] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
 DEBUG [2015-06-07 11:33:37,534] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:33:37,534] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:33:37,534] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@6f3b5d16, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:33:37,534] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@6f3b5d16, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:33:37,534] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:37,534] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:37,534] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@2dfe5525, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:33:37,534] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:37,534] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:33:37,534] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:33:37,534] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.dao.MybatisDao com.spring.SpringTest.mybatisDao
 DEBUG [2015-06-07 11:33:37,534] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:33:37,534] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:33:37,534] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:33:37,534] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:33:37,534] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'] found for test context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@2dfe5525, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:33:37,534] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:37,534] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:33:37,534] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:33:37,534] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:33:37,549] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:33:37,596] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336444175
 DEBUG [2015-06-07 11:33:37,596] (HibernateTransactionManager.java[doBegin]:498) - Opened new Session [org.hibernate.impl.SessionImpl@39c385d6] for Hibernate transaction
 DEBUG [2015-06-07 11:33:37,596] (HibernateTransactionManager.java[doBegin]:509) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@39c385d6]
 DEBUG [2015-06-07 11:33:37,612] (JDBCTransaction.java[begin]:78) - begin
 DEBUG [2015-06-07 11:33:37,612] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:33:37,612] (JDBCTransaction.java[begin]:83) - current autocommit status: true
 DEBUG [2015-06-07 11:33:37,612] (JDBCTransaction.java[begin]:86) - disabling autocommit
 DEBUG [2015-06-07 11:33:37,612] (HibernateTransactionManager.java[doBegin]:574) - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:33:37,612] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@2dfe5525, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:33:37,612] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (2) for test context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@2dfe5525, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@615e3f51]; rollback [true]
 DEBUG [2015-06-07 11:33:37,612] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:33:37,612] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 49, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:33:37,628] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:33:37,628] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336444176
 DEBUG [2015-06-07 11:33:37,690] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:33:37,706] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 11:33:37,706] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:33:37,753] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 11:33:37,768] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 11:33:37,768] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 11:33:37,768] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 11:33:37,784] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 11:33:37,784] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 11:33:37,784] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 11:33:37,784] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 11:33:37,784] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:33:37,799] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:33:37,799] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 11:33:37,799] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:33:37,815] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 11:33:37,815] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:33:37,831] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 11:33:37,831] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 11:33:37,831] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:33:37,831] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 11:33:37,831] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 11:33:37,831] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:33:37,846] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:33:37,846] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 11:33:37,846] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:33:37,846] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:33:37,846] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@2dfe5525, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:37,846] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:33:37,846] (HibernateTransactionManager.java[doRollback]:677) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@39c385d6]
 DEBUG [2015-06-07 11:33:37,846] (JDBCTransaction.java[rollback]:182) - rollback
 DEBUG [2015-06-07 11:33:37,846] (JDBCTransaction.java[toggleAutoCommit]:223) - re-enabling autocommit
 DEBUG [2015-06-07 11:33:37,846] (JDBCTransaction.java[rollback]:193) - rolled back JDBC Connection
 DEBUG [2015-06-07 11:33:37,846] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:33:37,846] (HibernateTransactionManager.java[doCleanupAfterCompletion]:740) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@39c385d6] after transaction
 DEBUG [2015-06-07 11:33:37,846] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:33:37,846] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:33:37,846] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
  INFO [2015-06-07 11:33:37,846] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@2dfe5525, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:33:37,846] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@2dfe5525, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:33:37,846] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:37,846] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:37,846] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@21bd20ee, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:33:37,846] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:37,846] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:33:37,846] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:33:37,846] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.dao.MybatisDao com.spring.SpringTest.mybatisDao
 DEBUG [2015-06-07 11:33:37,846] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:33:37,846] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:33:37,846] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:33:37,846] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.deleteTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:33:37,846] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@21bd20ee, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:33:37,846] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:37,846] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:33:37,846] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:33:37,846] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:33:37,846] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [deleteTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:33:37,846] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:33:37,846] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:33:37,846] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@21bd20ee, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:33:37,846] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (3) for test context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@21bd20ee, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@151ef57f]; rollback [true]
 DEBUG [2015-06-07 11:33:37,846] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:33:37,862] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:33:37,862] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:33:37,862] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54e3658c]
 DEBUG [2015-06-07 11:33:37,862] (Slf4jImpl.java[debug]:28) - ==>  Executing: delete from types where 1=1 
 DEBUG [2015-06-07 11:33:37,862] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:33:37,862] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54e3658c]
 DEBUG [2015-06-07 11:33:37,862] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@21bd20ee, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:37,862] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:33:37,862] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:33:37,862] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54e3658c]
 DEBUG [2015-06-07 11:33:37,862] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:33:37,862] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:33:37,862] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@21bd20ee, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:33:37,878] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = com.spring.SpringTest@21bd20ee, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:33:37,878] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@3b938003 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78b1cc93 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:33:37,878] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@16e7dcfd: startup date [Sun Jun 07 11:33:34 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:33:37,893] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:37,893] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:37,893] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:33:37,893] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@479460a6: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:33:37,893] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'hibernateDao': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:37,893] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:33:37,893] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:33:37,893] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:33:37,909] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 11:33:37,909] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:33:40,542] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:33:40,642] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@62bd765 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:33:40,642] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:40,642] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:33:40,657] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:33:40,673] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:40,673] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:40,673] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:40,673] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:40,673] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:40,673] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:40,689] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:40,689] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:40,689] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:40,689] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:40,689] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:40,689] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:40,704] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@3b938003, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:33:40,704] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:33:40,704] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:40,907] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:33:40,907] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:33:40,907] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:33:40,907] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:33:40,954] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:33:40,987] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:33:41,050] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:33:41,066] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:33:41,066] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:33:41,144] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:33:41,144] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:33:41,159] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:33:41,191] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:33:41,206] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:33:41,269] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:33:41,269] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:41,284] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:41,284] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:41,284] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:33:41,284] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:41,284] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:41,284] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:41,284] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:41,284] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:41,284] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:41,284] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:41,284] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:41,284] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:41,284] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:41,284] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:41,284] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:33:41,300] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:33:41,331] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:33:41,362] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:33:41,362] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:33:41,362] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:33:41,362] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:33:41,659] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao': replacing [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:33:41,659] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao2': replacing [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:33:41,659] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:33:41,659] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:33:41,675] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@222114ba: startup date [Sun Jun 07 11:33:41 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:33:41,675] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@222114ba: org.springframework.beans.factory.support.DefaultListableBeanFactory@479460a6: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao]; root of factory hierarchy
 DEBUG [2015-06-07 11:33:41,722] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:33:41,722] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:33:41,784] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:41,800] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:33:41,862] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:33:41,862] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:33:41,862] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:41,862] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:33:41,862] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:33:41,862] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:33:41,878] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:41,878] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:33:41,878] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:33:41,878] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:33:41,878] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:41,878] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:33:41,878] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:33:41,878] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:33:41,894] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:41,894] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:33:41,894] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:33:41,894] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:33:41,894] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:41,894] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:33:41,894] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:33:41,894] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:33:41,894] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:41,894] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:33:41,894] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@b1712f3]
 DEBUG [2015-06-07 11:33:41,894] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2826f61]
 DEBUG [2015-06-07 11:33:41,909] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@479460a6: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:33:41,909] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:33:41,909] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:33:41,925] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:33:41,941] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:33:41,941] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:33:41,941] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:41,956] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:33:41,956] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:33:41,956] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:33:41,987] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:41,987] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:42,021] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:33:42,031] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:42,033] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:33:42,033] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:33:42,189] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:42,220] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:33:42,220] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:42,414] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:33:42,414] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:33:42,414] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:42,429] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:42,445] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:33:42,445] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:33:42,461] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:42,461] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:42,461] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:42,476] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:42,476] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:33:42,476] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:33:42,476] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:42,476] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:33:42,476] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:42,508] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:33:42,508] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:33:42,508] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:42,508] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:42,508] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:33:42,508] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:33:42,508] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:33:42,508] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:33:42,508] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:42,508] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:42,508] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:33:42,508] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:33:42,508] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:33:42,508] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:33:42,508] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:33:42,508] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:33:42,508] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:33:42,508] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:33:42,508] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:33:42,508] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:42,523] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:33:42,523] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:33:42,523] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:33:42,523] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:42,523] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:42,523] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:42,523] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:33:42,523] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:33:42,523] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:33:42,523] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:33:42,523] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:33:42,523] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:33:42,523] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:33:42,523] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:33:42,523] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:33:42,523] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:42,523] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:33:42,523] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:33:42,523] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:33:42,523] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:33:42,523] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:33:42,539] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:33:42,539] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:42,539] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:33:42,539] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:33:42,539] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:33:42,539] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:42,554] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:33:42,554] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:33:42,554] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:33:42,554] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:33:42,554] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:33:42,554] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:42,570] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:33:42,570] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:33:42,570] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:33:42,570] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:33:42,570] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:33:42,570] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:33:42,570] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:33:42,570] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:33:42,570] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:33:42,570] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:33:42,586] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:33:42,586] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:33:42,587] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:33:42,589] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:33:42,589] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:33:42,589] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:33:42,590] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:33:42,590] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:42,621] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:33:42,621] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:33:42,699] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@4108fa66
 DEBUG [2015-06-07 11:33:42,699] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@4108fa66
 DEBUG [2015-06-07 11:33:42,699] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4108fa66
 DEBUG [2015-06-07 11:33:42,699] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b5bc39d
 DEBUG [2015-06-07 11:33:42,699] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2cd2c8fe
 DEBUG [2015-06-07 11:33:42,699] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@681aad3b
 DEBUG [2015-06-07 11:33:42,715] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@3277e499
 DEBUG [2015-06-07 11:33:42,715] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@3277e499
 DEBUG [2015-06-07 11:33:42,768] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3277e499
 DEBUG [2015-06-07 11:33:42,773] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@5bd73d1a
 DEBUG [2015-06-07 11:33:42,773] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@5bd73d1a
 DEBUG [2015-06-07 11:33:42,773] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5bd73d1a
 DEBUG [2015-06-07 11:33:42,777] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@3b1bb3ab
 DEBUG [2015-06-07 11:33:42,777] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@3b1bb3ab
 DEBUG [2015-06-07 11:33:42,777] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3b1bb3ab
 DEBUG [2015-06-07 11:33:42,777] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@37d80fe7
 DEBUG [2015-06-07 11:33:42,777] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@37d80fe7
 DEBUG [2015-06-07 11:33:42,777] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@37d80fe7
 DEBUG [2015-06-07 11:33:42,777] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@fac80
 DEBUG [2015-06-07 11:33:42,777] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@fac80
 DEBUG [2015-06-07 11:33:42,777] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@fac80
 DEBUG [2015-06-07 11:33:42,777] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@596df867
 DEBUG [2015-06-07 11:33:42,777] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@596df867
 DEBUG [2015-06-07 11:33:42,777] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@596df867
 DEBUG [2015-06-07 11:33:42,792] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@1827a871
 DEBUG [2015-06-07 11:33:42,792] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@1827a871
 DEBUG [2015-06-07 11:33:42,792] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1827a871
 DEBUG [2015-06-07 11:33:42,792] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1e11bc55
 DEBUG [2015-06-07 11:33:42,792] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1e11bc55
 DEBUG [2015-06-07 11:33:42,792] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@82c57b3
 DEBUG [2015-06-07 11:33:42,792] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@82c57b3
 DEBUG [2015-06-07 11:33:42,792] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@1734f68
 DEBUG [2015-06-07 11:33:42,792] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1734f68
 DEBUG [2015-06-07 11:33:42,792] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@7dac3fd8
 DEBUG [2015-06-07 11:33:42,808] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7dac3fd8
 DEBUG [2015-06-07 11:33:42,808] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@31c269fd
 DEBUG [2015-06-07 11:33:42,808] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@31c269fd
 DEBUG [2015-06-07 11:33:42,808] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@7db0565c
 DEBUG [2015-06-07 11:33:42,808] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7db0565c
 DEBUG [2015-06-07 11:33:42,808] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@29539e36
 DEBUG [2015-06-07 11:33:42,823] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@29539e36
 DEBUG [2015-06-07 11:33:42,823] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@29539e36
 DEBUG [2015-06-07 11:33:42,823] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@669253b7
 DEBUG [2015-06-07 11:33:42,823] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@36ac8a63
 DEBUG [2015-06-07 11:33:42,823] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@36ac8a63
 DEBUG [2015-06-07 11:33:42,823] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@36ac8a63
 DEBUG [2015-06-07 11:33:42,823] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@77b21474
 DEBUG [2015-06-07 11:33:42,823] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@39c11e6c
 DEBUG [2015-06-07 11:33:42,823] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@39c11e6c
 DEBUG [2015-06-07 11:33:42,823] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@329a1243
 DEBUG [2015-06-07 11:33:42,839] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@329a1243
 DEBUG [2015-06-07 11:33:42,839] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@581d969c
 DEBUG [2015-06-07 11:33:42,839] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@581d969c
 DEBUG [2015-06-07 11:33:42,839] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@7cd1ac19
 DEBUG [2015-06-07 11:33:42,839] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7cd1ac19
 DEBUG [2015-06-07 11:33:42,839] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c8b96ec
 DEBUG [2015-06-07 11:33:42,839] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c8b96ec
 DEBUG [2015-06-07 11:33:42,839] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7048f722
 DEBUG [2015-06-07 11:33:42,839] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3c291aad
 DEBUG [2015-06-07 11:33:42,855] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@28c0b664
 DEBUG [2015-06-07 11:33:42,855] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@28c0b664
 DEBUG [2015-06-07 11:33:42,855] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@28c0b664
 DEBUG [2015-06-07 11:33:42,855] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6d1310f6
 DEBUG [2015-06-07 11:33:42,855] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6d1310f6
 DEBUG [2015-06-07 11:33:42,855] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6d1310f6
 DEBUG [2015-06-07 11:33:42,855] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@29d2d081
 DEBUG [2015-06-07 11:33:42,855] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@1bc53649
 DEBUG [2015-06-07 11:33:42,870] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@1bc53649
 DEBUG [2015-06-07 11:33:42,870] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@1bc53649
 DEBUG [2015-06-07 11:33:42,870] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4d0402b
 DEBUG [2015-06-07 11:33:42,870] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4d0402b
 DEBUG [2015-06-07 11:33:42,870] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4d0402b
 DEBUG [2015-06-07 11:33:42,870] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@3f2049b6
 DEBUG [2015-06-07 11:33:42,870] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@3fabf088
 DEBUG [2015-06-07 11:33:42,870] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3fabf088
 DEBUG [2015-06-07 11:33:42,870] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2c22a348
 DEBUG [2015-06-07 11:33:42,870] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@6058e535
 DEBUG [2015-06-07 11:33:42,886] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6058e535
 DEBUG [2015-06-07 11:33:42,886] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1cefc4b3
 DEBUG [2015-06-07 11:33:42,886] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@1e53135d
 DEBUG [2015-06-07 11:33:42,886] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@33d05366
 DEBUG [2015-06-07 11:33:42,886] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@33d05366
 DEBUG [2015-06-07 11:33:42,886] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@32c0915e
 DEBUG [2015-06-07 11:33:42,886] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@106faf11
 DEBUG [2015-06-07 11:33:42,886] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@70f43b45
 DEBUG [2015-06-07 11:33:42,886] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@26d10f2e
 DEBUG [2015-06-07 11:33:42,886] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@10ad20cb
 DEBUG [2015-06-07 11:33:42,886] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7dd712e8
 DEBUG [2015-06-07 11:33:42,886] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c282004
 DEBUG [2015-06-07 11:33:42,886] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22ee2d0
  INFO [2015-06-07 11:33:42,917] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:33:42,933] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:33:42,933] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:33:42,933] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:33:42,948] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:33:43,011] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:33:43,011] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:33:43,011] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:33:43,011] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:33:43,027] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:33:43,027] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:33:43,027] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:33:43,027] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:33:43,027] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:33:43,027] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:33:43,027] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:33:43,027] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:33:43,027] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:33:43,027] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:33:43,027] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:33:43,073] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:33:43,073] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:33:43,089] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:33:43,121] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:33:43,137] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:33:43,137] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:33:43,137] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:33:43,184] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:33:43,184] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:33:43,184] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:33:43,184] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:33:43,199] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:33:43,199] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:33:43,199] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:33:43,199] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:33:43,199] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:33:43,199] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:33:43,199] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:33:43,199] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:33:43,199] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:33:43,199] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:33:43,199] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:33:43,199] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:33:43,199] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:33:43,199] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:33:43,199] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:33:43,199] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:33:43,199] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:33:43,199] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:33:43,199] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:33:43,199] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:33:43,215] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:33:43,215] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:33:43,215] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:33:43,215] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:33:43,561] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:33:43,561] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:33:43,670] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:33:43,694] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:33:43,694] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:33:43,694] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:33:43,694] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:33:43,694] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:33:43,694] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:33:43,694] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:33:43,709] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:33:43,709] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:33:43,709] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:33:43,709] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:33:43,709] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:33:43,709] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:33:43,709] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:33:43,709] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:33:43,709] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:33:43,709] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:33:43,709] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:33:43,709] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:33:43,709] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:33:43,709] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:33:43,709] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:33:43,709] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:33:43,709] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:33:43,725] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:33:43,725] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:33:43,725] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:33:43,725] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:33:43,725] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:33:43,725] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:33:43,741] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:33:43,756] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:33:43,756] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:33:43,756] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14264 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:33:43,772] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:33:43,912] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:33:43,912] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:33:43,912] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:33:43,912] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:33:43,912] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:33:43,912] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:33:43,943] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:33:43,943] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:33:43,943] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:33:43,943] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:33:43,943] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:33:43,943] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:33:43,943] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:33:43,943] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:33:43,943] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:33:43,943] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:33:43,959] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:33:43,959] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:33:43,990] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:33:43,990] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: 8587ba9d-e3f8-4b05-b59a-8df6551dc8b6 (unnamed)
  INFO [2015-06-07 11:33:43,990] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:33:43,990] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:33:43,990] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:33:43,990] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:33:44,006] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:33:44,006] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:33:44,006] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:33:44,006] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:33:44,006] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:33:44,006] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:33:44,006] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:33:44,006] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:33:44,006] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:33:44,037] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:33:44,037] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:33:44,037] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:33:44,037] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:33:44,037] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:33:44,037] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:33:44,037] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:33:44,037] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:33:44,053] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:44,068] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:33:44,068] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:33:44,068] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:33:44,068] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:33:44,068] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:33:44,084] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:44,100] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:33:44,100] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:33:44,100] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@1ff55ff] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:33:44,100] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:33:44,100] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:33:44,100] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:33:44,100] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:44,115] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:33:44,115] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:33:44,115] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:33:44,115] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:33:44,115] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:33:44,115] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:44,115] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:33:44,115] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:33:44,115] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:33:44,115] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:44,115] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:33:44,115] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:44,115] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:33:44,115] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:33:44,115] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:33:44,115] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:33:44,115] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:33:44,115] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:33:44,115] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:33:44,115] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:33:44,115] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:33:44,115] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:33:44,115] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@43da41e]
 DEBUG [2015-06-07 11:33:44,115] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:33:44,131] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:44,131] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:44,131] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:33:44,131] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:33:44,131] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:33:44,131] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:44,131] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:33:44,131] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:33:44,131] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:33:44,131] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.dao.MybatisDao com.spring.SpringTest.mybatisDao
 DEBUG [2015-06-07 11:33:44,131] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:33:44,131] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisDao'
 DEBUG [2015-06-07 11:33:44,131] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:33:44,131] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:33:44,131] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:33:44,146] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.mybatisTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:33:44,146] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@3b938003, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:33:44,146] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:44,146] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:33:44,146] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:33:44,146] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:33:44,146] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [mybatisTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:33:44,178] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:33:44,178] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:33:44,178] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:33:44,178] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@3db663d0 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:33:44,193] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@3b938003, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:33:44,193] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@3b938003, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@47fbc56]; rollback [true]
 DEBUG [2015-06-07 11:33:44,193] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:33:44,193] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:33:44,193] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:33:44,209] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a230001]
 DEBUG [2015-06-07 11:33:44,290] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:33:44,290] (Slf4jImpl.java[debug]:28) - ==> Parameters: 94(Integer)
 DEBUG [2015-06-07 11:33:44,293] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a230001]
 DEBUG [2015-06-07 11:33:44,293] (DataSourceUtils.java[doGetConnection]:110) - Fetching JDBC Connection from DataSource
 DEBUG [2015-06-07 11:33:44,294] (DataSourceUtils.java[doGetConnection]:114) - Registering transaction synchronization for JDBC Connection
 DEBUG [2015-06-07 11:33:44,296] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:33:44,296] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:33:44,297] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:33:44,297] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d8d9199]
 DEBUG [2015-06-07 11:33:44,300] (Slf4jImpl.java[debug]:28) - ==>  Executing: select * from types; 
 DEBUG [2015-06-07 11:33:44,300] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:33:44,306] (Slf4jImpl.java[debug]:28) - <==    Columns: typeId
 DEBUG [2015-06-07 11:33:44,306] (Slf4jImpl.java[debug]:28) - <==        Row: 96
 DEBUG [2015-06-07 11:33:44,306] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d8d9199]
 DEBUG [2015-06-07 11:33:44,306] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@3b938003, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:44,306] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:33:44,306] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:33:44,322] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a230001]
 DEBUG [2015-06-07 11:33:44,322] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d8d9199]
 DEBUG [2015-06-07 11:33:44,322] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
 DEBUG [2015-06-07 11:33:44,322] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:33:44,322] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:33:44,322] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@3b938003, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:33:44,322] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@3b938003, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:33:44,322] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:44,322] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:44,322] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@fb6097b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:33:44,322] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:44,322] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:33:44,322] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:33:44,322] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.dao.MybatisDao com.spring.SpringTest.mybatisDao
 DEBUG [2015-06-07 11:33:44,322] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:33:44,322] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:33:44,322] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:33:44,322] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:33:44,337] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'] found for test context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@fb6097b, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:33:44,337] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:44,337] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:33:44,337] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:33:44,337] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:33:44,337] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:33:44,384] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336444243
 DEBUG [2015-06-07 11:33:44,384] (HibernateTransactionManager.java[doBegin]:498) - Opened new Session [org.hibernate.impl.SessionImpl@71945bc0] for Hibernate transaction
 DEBUG [2015-06-07 11:33:44,384] (HibernateTransactionManager.java[doBegin]:509) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@71945bc0]
 DEBUG [2015-06-07 11:33:44,384] (JDBCTransaction.java[begin]:78) - begin
 DEBUG [2015-06-07 11:33:44,384] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:33:44,384] (JDBCTransaction.java[begin]:83) - current autocommit status: true
 DEBUG [2015-06-07 11:33:44,384] (JDBCTransaction.java[begin]:86) - disabling autocommit
 DEBUG [2015-06-07 11:33:44,384] (HibernateTransactionManager.java[doBegin]:574) - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:33:44,384] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@fb6097b, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:33:44,384] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (2) for test context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@fb6097b, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@741f8dbe]; rollback [true]
 DEBUG [2015-06-07 11:33:44,384] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:33:44,400] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 32, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:33:44,400] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:33:44,400] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336444244
 DEBUG [2015-06-07 11:33:44,462] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:33:44,462] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 11:33:44,462] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:33:44,494] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 11:33:44,525] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 11:33:44,525] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 11:33:44,525] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 11:33:44,525] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 11:33:44,525] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 11:33:44,525] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 11:33:44,525] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 11:33:44,525] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:33:44,540] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:33:44,540] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 11:33:44,540] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:33:44,559] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 11:33:44,559] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:33:44,575] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 11:33:44,575] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 11:33:44,575] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:33:44,575] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 11:33:44,575] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 11:33:44,575] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:33:44,575] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:33:44,575] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 11:33:44,590] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:33:44,590] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:33:44,590] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@fb6097b, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:44,590] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:33:44,590] (HibernateTransactionManager.java[doRollback]:677) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@71945bc0]
 DEBUG [2015-06-07 11:33:44,590] (JDBCTransaction.java[rollback]:182) - rollback
 DEBUG [2015-06-07 11:33:44,590] (JDBCTransaction.java[toggleAutoCommit]:223) - re-enabling autocommit
 DEBUG [2015-06-07 11:33:44,590] (JDBCTransaction.java[rollback]:193) - rolled back JDBC Connection
 DEBUG [2015-06-07 11:33:44,590] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:33:44,590] (HibernateTransactionManager.java[doCleanupAfterCompletion]:740) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@71945bc0] after transaction
 DEBUG [2015-06-07 11:33:44,590] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:33:44,590] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:33:44,590] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
  INFO [2015-06-07 11:33:44,590] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@fb6097b, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:33:44,590] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@fb6097b, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:33:44,590] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:44,590] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:44,590] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:33:44,590] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:44,590] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:33:44,590] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:33:44,590] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.dao.MybatisDao com.spring.SpringTest.mybatisDao
 DEBUG [2015-06-07 11:33:44,590] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:33:44,590] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:33:44,590] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:33:44,590] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.deleteTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:33:44,590] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:33:44,590] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:44,590] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:33:44,590] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:33:44,590] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:33:44,590] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [deleteTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:33:44,590] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:33:44,590] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:33:44,590] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:33:44,590] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (3) for test context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@47fbc56]; rollback [true]
 DEBUG [2015-06-07 11:33:44,590] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:33:44,590] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:33:44,590] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:33:44,590] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38eb0f4d]
 DEBUG [2015-06-07 11:33:44,590] (Slf4jImpl.java[debug]:28) - ==>  Executing: delete from types where 1=1 
 DEBUG [2015-06-07 11:33:44,590] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:33:44,590] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38eb0f4d]
 DEBUG [2015-06-07 11:33:44,590] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:33:44,590] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:33:44,590] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:33:44,606] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38eb0f4d]
 DEBUG [2015-06-07 11:33:44,606] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:33:44,606] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:33:44,606] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:33:44,606] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:33:44,606] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@55a561cf testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f3b5d16 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:33:44,606] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@222114ba: startup date [Sun Jun 07 11:33:41 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:33:44,606] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:33:44,606] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:33:44,606] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:33:44,606] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@479460a6: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:33:44,606] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'hibernateDao': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:33:44,622] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:33:44,622] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:33:44,622] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:33:44,622] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 11:33:44,622] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:38:58,079] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:38:58,142] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@38364841 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:38:58,142] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:38:58,142] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:38:58,158] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:38:58,173] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:38:58,173] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:38:58,173] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:38:58,173] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:38:58,173] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:38:58,173] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:38:58,173] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:38:58,173] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:38:58,189] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:38:58,189] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:38:58,189] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:38:58,189] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:38:58,189] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:38:58,189] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:38:58,189] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:38:58,418] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:38:58,418] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:38:58,418] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:38:58,418] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:38:58,496] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:38:58,528] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:38:58,584] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:38:58,584] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:38:58,584] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:38:58,647] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:38:58,647] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:38:58,662] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:38:58,678] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:38:58,709] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:38:58,756] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:38:58,756] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:38:58,756] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:38:58,756] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:38:58,756] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:38:58,756] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:38:58,756] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:38:58,772] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:38:58,772] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:38:58,772] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:38:58,772] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:38:58,772] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:38:58,772] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:38:58,772] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:38:58,772] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:38:58,772] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:38:58,772] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:38:58,772] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:38:58,819] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:38:58,850] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:38:58,850] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:38:58,865] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:38:58,865] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:38:59,209] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao': replacing [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:38:59,209] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao2': replacing [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:38:59,209] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:38:59,209] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:38:59,225] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 11:38:59 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:38:59,225] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@4fe767f3: org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao]; root of factory hierarchy
 DEBUG [2015-06-07 11:38:59,293] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:38:59,294] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:38:59,321] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:38:59,327] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:38:59,402] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:38:59,402] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:38:59,404] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:38:59,404] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:38:59,405] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:38:59,405] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:38:59,406] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:38:59,406] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:38:59,406] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:38:59,407] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:38:59,415] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:38:59,416] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:38:59,416] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:38:59,417] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:38:59,420] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:38:59,420] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:38:59,421] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:38:59,421] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:38:59,422] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:38:59,422] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:38:59,422] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:38:59,423] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:38:59,423] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:38:59,423] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:38:59,432] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@4df5bcb4]
 DEBUG [2015-06-07 11:38:59,438] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1e636ea3]
 DEBUG [2015-06-07 11:38:59,447] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:38:59,447] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:38:59,447] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:38:59,463] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:38:59,486] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:38:59,487] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:38:59,487] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:38:59,501] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:38:59,501] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:38:59,501] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:38:59,524] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:38:59,525] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:38:59,529] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:38:59,545] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:38:59,560] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:38:59,560] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:38:59,701] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:38:59,716] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:38:59,716] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:38:59,920] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:38:59,920] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:38:59,920] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:38:59,935] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:38:59,951] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:38:59,951] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:38:59,966] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:38:59,966] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:38:59,966] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:38:59,966] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:38:59,966] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:38:59,966] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:38:59,966] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:38:59,966] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:38:59,966] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:38:59,982] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:38:59,998] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:38:59,998] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:38:59,998] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:38:59,998] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:38:59,998] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:38:59,998] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:38:59,998] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:38:59,998] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:38:59,998] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:38:59,998] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:38:59,998] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:38:59,998] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:38:59,998] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:38:59,998] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:38:59,998] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:38:59,998] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:38:59,998] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:38:59,998] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:38:59,998] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:38:59,998] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:38:59,998] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:38:59,998] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:39:00,013] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:00,013] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:00,013] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:00,013] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:39:00,013] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:00,013] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:00,013] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:00,013] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:39:00,013] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:39:00,013] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:39:00,013] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:39:00,013] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:39:00,013] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:00,013] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:39:00,013] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:39:00,013] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:39:00,013] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:39:00,013] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:39:00,013] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:39:00,013] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:00,013] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:39:00,013] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:39:00,013] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:39:00,013] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:00,029] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:39:00,029] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:39:00,029] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:39:00,029] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:39:00,029] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:39:00,029] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:00,049] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:39:00,050] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:39:00,051] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:39:00,051] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:39:00,051] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:39:00,051] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:39:00,051] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:39:00,051] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:00,051] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:00,051] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:39:00,051] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:39:00,051] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:39:00,051] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:39:00,051] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:39:00,051] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:39:00,051] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:00,051] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:00,051] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:00,082] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:39:00,082] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:00,129] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@1494b84d
 DEBUG [2015-06-07 11:39:00,129] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@1494b84d
 DEBUG [2015-06-07 11:39:00,129] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1494b84d
 DEBUG [2015-06-07 11:39:00,129] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@226f885f
 DEBUG [2015-06-07 11:39:00,129] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@641856
 DEBUG [2015-06-07 11:39:00,129] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@76318a7d
 DEBUG [2015-06-07 11:39:00,129] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@5aa0dbf4
 DEBUG [2015-06-07 11:39:00,129] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@5aa0dbf4
 DEBUG [2015-06-07 11:39:00,129] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5aa0dbf4
 DEBUG [2015-06-07 11:39:00,129] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@74f7d1d2
 DEBUG [2015-06-07 11:39:00,129] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@74f7d1d2
 DEBUG [2015-06-07 11:39:00,129] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@74f7d1d2
 DEBUG [2015-06-07 11:39:00,144] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@41beb473
 DEBUG [2015-06-07 11:39:00,144] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@41beb473
 DEBUG [2015-06-07 11:39:00,144] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@41beb473
 DEBUG [2015-06-07 11:39:00,144] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@5dda6f9
 DEBUG [2015-06-07 11:39:00,144] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@5dda6f9
 DEBUG [2015-06-07 11:39:00,144] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5dda6f9
 DEBUG [2015-06-07 11:39:00,144] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@f31c0c6
 DEBUG [2015-06-07 11:39:00,144] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@f31c0c6
 DEBUG [2015-06-07 11:39:00,144] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@f31c0c6
 DEBUG [2015-06-07 11:39:00,144] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@287f94b1
 DEBUG [2015-06-07 11:39:00,144] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@287f94b1
 DEBUG [2015-06-07 11:39:00,144] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@287f94b1
 DEBUG [2015-06-07 11:39:00,144] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@2ca65ce4
 DEBUG [2015-06-07 11:39:00,144] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@2ca65ce4
 DEBUG [2015-06-07 11:39:00,144] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2ca65ce4
 DEBUG [2015-06-07 11:39:00,160] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4fbdc0f0
 DEBUG [2015-06-07 11:39:00,160] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4fbdc0f0
 DEBUG [2015-06-07 11:39:00,160] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@aec50a1
 DEBUG [2015-06-07 11:39:00,160] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@aec50a1
 DEBUG [2015-06-07 11:39:00,160] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@7c18432b
 DEBUG [2015-06-07 11:39:00,160] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@7c18432b
 DEBUG [2015-06-07 11:39:00,160] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@42a9a63e
 DEBUG [2015-06-07 11:39:00,160] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@42a9a63e
 DEBUG [2015-06-07 11:39:00,160] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@726386ed
 DEBUG [2015-06-07 11:39:00,160] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@726386ed
 DEBUG [2015-06-07 11:39:00,176] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@499b2a5c
 DEBUG [2015-06-07 11:39:00,176] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@499b2a5c
 DEBUG [2015-06-07 11:39:00,176] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@1827a871
 DEBUG [2015-06-07 11:39:00,176] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1827a871
 DEBUG [2015-06-07 11:39:00,176] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1827a871
 DEBUG [2015-06-07 11:39:00,176] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@66238be2
 DEBUG [2015-06-07 11:39:00,176] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@63fd4873
 DEBUG [2015-06-07 11:39:00,176] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63fd4873
 DEBUG [2015-06-07 11:39:00,176] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63fd4873
 DEBUG [2015-06-07 11:39:00,176] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6ab72419
 DEBUG [2015-06-07 11:39:00,191] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@5ea502e0
 DEBUG [2015-06-07 11:39:00,207] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5ea502e0
 DEBUG [2015-06-07 11:39:00,207] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@27f9e982
 DEBUG [2015-06-07 11:39:00,207] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27f9e982
 DEBUG [2015-06-07 11:39:00,207] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d572e62
 DEBUG [2015-06-07 11:39:00,207] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d572e62
 DEBUG [2015-06-07 11:39:00,207] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@69c43e48
 DEBUG [2015-06-07 11:39:00,207] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@69c43e48
 DEBUG [2015-06-07 11:39:00,207] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2024293c
 DEBUG [2015-06-07 11:39:00,207] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2024293c
 DEBUG [2015-06-07 11:39:00,207] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5949eba8
 DEBUG [2015-06-07 11:39:00,207] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7728643a
 DEBUG [2015-06-07 11:39:00,222] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@6ebd78d1
 DEBUG [2015-06-07 11:39:00,222] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ebd78d1
 DEBUG [2015-06-07 11:39:00,222] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@6ebd78d1
 DEBUG [2015-06-07 11:39:00,222] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@50b8ae8d
 DEBUG [2015-06-07 11:39:00,222] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@50b8ae8d
 DEBUG [2015-06-07 11:39:00,222] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@50b8ae8d
 DEBUG [2015-06-07 11:39:00,222] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@3a7b503d
 DEBUG [2015-06-07 11:39:00,222] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@475b7792
 DEBUG [2015-06-07 11:39:00,222] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@475b7792
 DEBUG [2015-06-07 11:39:00,222] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@475b7792
 DEBUG [2015-06-07 11:39:00,222] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3704122f
 DEBUG [2015-06-07 11:39:00,222] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3704122f
 DEBUG [2015-06-07 11:39:00,222] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3704122f
 DEBUG [2015-06-07 11:39:00,222] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@33a2499c
 DEBUG [2015-06-07 11:39:00,222] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@4ced35ed
 DEBUG [2015-06-07 11:39:00,238] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4ced35ed
 DEBUG [2015-06-07 11:39:00,238] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51b01960
 DEBUG [2015-06-07 11:39:00,238] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@3bb9efbc
 DEBUG [2015-06-07 11:39:00,238] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bb9efbc
 DEBUG [2015-06-07 11:39:00,238] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1bdaa23d
 DEBUG [2015-06-07 11:39:00,238] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@6754ef00
 DEBUG [2015-06-07 11:39:00,238] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@33aa93c
 DEBUG [2015-06-07 11:39:00,238] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@33aa93c
 DEBUG [2015-06-07 11:39:00,238] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@26d10f2e
 DEBUG [2015-06-07 11:39:00,238] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@10ad20cb
 DEBUG [2015-06-07 11:39:00,238] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7dd712e8
 DEBUG [2015-06-07 11:39:00,238] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c282004
 DEBUG [2015-06-07 11:39:00,238] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@22ee2d0
 DEBUG [2015-06-07 11:39:00,238] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7bfc3126
 DEBUG [2015-06-07 11:39:00,238] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3e792ce3
 DEBUG [2015-06-07 11:39:00,238] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53bc1328
  INFO [2015-06-07 11:39:00,269] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:39:00,269] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:39:00,269] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:39:00,269] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:39:00,289] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:39:00,332] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:39:00,348] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:39:00,348] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:39:00,348] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:39:00,348] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:39:00,348] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:39:00,348] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:39:00,348] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:39:00,348] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:39:00,348] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:39:00,348] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:39:00,348] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:39:00,348] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:39:00,348] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:39:00,348] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:39:00,397] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:39:00,397] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:39:00,397] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:39:00,444] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:39:00,444] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:39:00,459] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:39:00,459] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:39:00,491] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:39:00,506] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:39:00,506] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:39:00,506] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:39:00,506] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:39:00,506] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:39:00,506] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:39:00,506] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:39:00,522] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:39:00,522] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:39:00,522] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:39:00,522] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:39:00,522] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:39:00,522] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:39:00,522] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:39:00,522] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:39:00,522] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:39:00,522] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:39:00,522] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:39:00,522] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:39:00,522] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:39:00,522] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:39:00,522] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:39:00,522] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:39:00,522] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:39:00,537] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:39:00,537] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:39:00,537] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:39:00,883] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:39:00,883] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:39:00,977] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:39:01,008] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:39:01,008] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:39:01,008] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:39:01,008] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:39:01,008] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:39:01,008] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:39:01,008] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:39:01,008] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:39:01,008] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:39:01,008] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:39:01,008] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:39:01,008] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:39:01,024] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:39:01,024] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:39:01,024] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:39:01,024] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:39:01,024] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:39:01,024] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:39:01,024] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:39:01,024] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:39:01,024] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:39:01,024] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:39:01,024] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:39:01,024] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:39:01,024] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:39:01,024] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:39:01,039] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:39:01,039] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:39:01,039] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:39:01,039] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:39:01,056] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:39:01,072] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:39:01,072] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:39:01,072] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14323 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:39:01,087] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:39:01,244] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:39:01,244] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:39:01,244] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:39:01,244] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:39:01,244] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:39:01,244] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:39:01,291] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:01,292] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:01,292] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:01,292] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:01,293] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:01,293] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:39:01,293] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:01,294] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:01,294] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:01,294] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:01,304] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:01,304] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:01,323] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:39:01,323] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: a9df5db4-7b4c-4b91-b52c-e7a814266c47 (unnamed)
  INFO [2015-06-07 11:39:01,323] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:39:01,323] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:39:01,339] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:39:01,339] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:39:01,339] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:39:01,339] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:39:01,339] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:39:01,339] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:39:01,339] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:39:01,339] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:39:01,339] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:39:01,339] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:39:01,339] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:39:01,354] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:39:01,354] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:39:01,354] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:39:01,370] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:39:01,370] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:39:01,370] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:01,370] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:01,370] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:01,370] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:01,401] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:01,401] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:01,401] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:01,401] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:01,401] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:01,417] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:01,417] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:01,417] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:39:01,433] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@1ff55ff] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:39:01,433] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:01,433] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:01,433] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:01,433] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:01,433] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:39:01,433] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:39:01,433] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:01,433] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:01,433] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:01,433] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:01,433] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:39:01,433] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:39:01,433] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:01,448] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:01,448] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:01,448] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:01,448] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:01,448] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:01,448] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:01,448] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:39:01,448] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:01,448] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:39:01,448] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:01,448] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:01,448] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:39:01,448] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:39:01,448] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@43da41e]
 DEBUG [2015-06-07 11:39:01,448] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:39:01,464] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:01,464] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:01,464] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:39:01,464] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:39:01,464] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:39:01,464] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:01,464] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:39:01,464] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:01,464] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:39:01,464] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:39:01,464] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:39:01,464] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:39:01,464] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.mybatisTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:39:01,479] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:01,479] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:01,479] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:01,479] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:01,479] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:01,479] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [mybatisTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:39:01,511] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:39:01,511] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:39:01,511] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:39:01,526] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@3db663d0 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:39:01,526] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:39:01,526] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@47fbc56]; rollback [true]
 DEBUG [2015-06-07 11:39:01,526] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:01,526] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:39:01,526] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:39:01,549] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a230001]
 DEBUG [2015-06-07 11:39:01,620] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:39:01,620] (Slf4jImpl.java[debug]:28) - ==> Parameters: 1(Integer)
 DEBUG [2015-06-07 11:39:01,620] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a230001]
 DEBUG [2015-06-07 11:39:01,620] (Slf4jImpl.java[debug]:28) - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a230001] from current transaction
 DEBUG [2015-06-07 11:39:01,620] (Slf4jImpl.java[debug]:28) - ==>  Executing: select * from types; 
 DEBUG [2015-06-07 11:39:01,620] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:39:01,636] (Slf4jImpl.java[debug]:28) - <==    Columns: typeId
 DEBUG [2015-06-07 11:39:01,636] (Slf4jImpl.java[debug]:28) - <==        Row: 1
 DEBUG [2015-06-07 11:39:01,636] (Slf4jImpl.java[debug]:28) - <==        Row: 96
 DEBUG [2015-06-07 11:39:01,636] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a230001]
 DEBUG [2015-06-07 11:39:01,636] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:01,636] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:39:01,636] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:01,652] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a230001]
 DEBUG [2015-06-07 11:39:01,652] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:39:01,652] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:39:01,652] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:01,652] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:39:01,652] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:01,652] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:01,652] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@524a2ffb, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:39:01,652] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:01,652] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:39:01,652] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:01,652] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:39:01,652] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:39:01,652] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:01,652] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@524a2ffb, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:01,652] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:01,652] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:01,652] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:01,652] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:01,667] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:01,699] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336447416
 DEBUG [2015-06-07 11:39:01,699] (HibernateTransactionManager.java[doBegin]:498) - Opened new Session [org.hibernate.impl.SessionImpl@2123064f] for Hibernate transaction
 DEBUG [2015-06-07 11:39:01,699] (HibernateTransactionManager.java[doBegin]:509) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2123064f]
 DEBUG [2015-06-07 11:39:01,714] (JDBCTransaction.java[begin]:78) - begin
 DEBUG [2015-06-07 11:39:01,714] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:39:01,714] (JDBCTransaction.java[begin]:83) - current autocommit status: true
 DEBUG [2015-06-07 11:39:01,714] (JDBCTransaction.java[begin]:86) - disabling autocommit
 DEBUG [2015-06-07 11:39:01,714] (HibernateTransactionManager.java[doBegin]:574) - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:01,714] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@524a2ffb, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:39:01,714] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (2) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@524a2ffb, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@6dbcf214]; rollback [true]
 DEBUG [2015-06-07 11:39:01,714] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:39:01,714] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 67, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:39:01,730] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:39:01,730] (DataSourceUtils.java[doGetConnection]:110) - Fetching JDBC Connection from DataSource
 DEBUG [2015-06-07 11:39:01,730] (DataSourceUtils.java[doGetConnection]:114) - Registering transaction synchronization for JDBC Connection
 DEBUG [2015-06-07 11:39:01,730] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:01,730] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:39:01,730] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:39:01,730] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b16e202]
 DEBUG [2015-06-07 11:39:01,730] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:39:01,730] (Slf4jImpl.java[debug]:28) - ==> Parameters: 73(Integer)
 DEBUG [2015-06-07 11:39:01,745] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b16e202]
 DEBUG [2015-06-07 11:39:01,745] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336447417
 DEBUG [2015-06-07 11:39:01,792] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:39:01,808] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 11:39:01,808] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:39:01,856] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 11:39:01,871] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 11:39:01,871] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 11:39:01,871] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 11:39:01,871] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 11:39:01,871] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 11:39:01,871] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 11:39:01,871] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 11:39:01,871] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:39:01,887] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:39:01,887] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 11:39:01,887] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:39:01,903] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 11:39:01,903] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:39:01,918] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 11:39:01,918] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 11:39:01,918] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:39:01,918] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:39:01,918] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 11:39:01,918] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 11:39:01,934] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:39:01,934] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:39:01,934] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:39:01,934] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:39:01,934] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 11:39:01,934] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:39:01,934] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:39:01,934] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@524a2ffb, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:01,934] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:39:01,934] (HibernateTransactionManager.java[doRollback]:677) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2123064f]
 DEBUG [2015-06-07 11:39:01,934] (JDBCTransaction.java[rollback]:182) - rollback
 DEBUG [2015-06-07 11:39:01,934] (JDBCTransaction.java[toggleAutoCommit]:223) - re-enabling autocommit
 DEBUG [2015-06-07 11:39:01,934] (JDBCTransaction.java[rollback]:193) - rolled back JDBC Connection
 DEBUG [2015-06-07 11:39:01,934] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:39:01,934] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b16e202]
 DEBUG [2015-06-07 11:39:01,934] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
 DEBUG [2015-06-07 11:39:01,934] (HibernateTransactionManager.java[doCleanupAfterCompletion]:740) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2123064f] after transaction
 DEBUG [2015-06-07 11:39:01,934] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:39:01,934] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:39:01,934] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
  INFO [2015-06-07 11:39:01,934] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@524a2ffb, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:01,934] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@524a2ffb, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:39:01,934] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:01,934] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:01,934] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@102c577f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:39:01,934] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:01,934] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:39:01,934] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:01,934] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:39:01,934] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:39:01,934] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.deleteTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:39:01,934] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@102c577f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:01,934] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:01,934] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:01,934] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:01,934] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:01,934] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [deleteTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:39:01,950] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:39:01,950] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:39:01,950] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@102c577f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:39:01,950] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (3) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@102c577f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@47fbc56]; rollback [true]
 DEBUG [2015-06-07 11:39:01,950] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:01,950] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:39:01,950] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:39:01,950] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15b642b9]
 DEBUG [2015-06-07 11:39:01,950] (Slf4jImpl.java[debug]:28) - ==>  Executing: delete from types where 1=1 
 DEBUG [2015-06-07 11:39:01,950] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:39:01,950] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15b642b9]
 DEBUG [2015-06-07 11:39:01,950] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@102c577f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:01,950] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:39:01,950] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:01,950] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15b642b9]
 DEBUG [2015-06-07 11:39:01,950] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:39:01,950] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:39:01,950] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@102c577f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:01,950] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@102c577f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:39:01,950] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:39:01,950] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 11:38:59 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:39:01,965] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:01,965] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:01,965] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:39:01,965] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:39:01,965] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'hibernateDao': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:01,965] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:39:01,965] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:39:01,965] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:39:01,965] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 11:39:01,981] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:39:15,219] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:39:15,298] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@38364841 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:39:15,298] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:15,298] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:39:15,313] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:39:15,329] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:15,329] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:15,329] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:15,329] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:15,329] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:15,329] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:15,345] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:15,345] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:15,345] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:15,345] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:15,345] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:15,345] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:15,345] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:39:15,360] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:39:15,360] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:15,595] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:39:15,595] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:39:15,610] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:39:15,610] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:39:15,673] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:39:15,707] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:39:15,754] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:39:15,769] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:39:15,769] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:39:15,818] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:39:15,834] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:39:15,850] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:39:15,865] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:39:15,881] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:39:15,943] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:39:15,943] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:15,943] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:15,943] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:15,943] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:39:15,943] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:15,943] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:15,943] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:15,943] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:15,959] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:15,959] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:15,959] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:15,959] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:15,959] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:15,959] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:15,975] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:15,975] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:15,975] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:39:16,022] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:39:16,068] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:39:16,084] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:39:16,084] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:39:16,084] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:39:16,323] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao': replacing [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:39:16,323] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao2': replacing [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:39:16,323] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:39:16,323] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:39:16,339] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 11:39:16 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:39:16,339] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@4fe767f3: org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao]; root of factory hierarchy
 DEBUG [2015-06-07 11:39:16,386] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:39:16,401] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:39:16,417] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:16,433] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:39:16,511] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:16,511] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:16,511] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:16,511] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:16,511] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:16,511] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:16,511] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:16,511] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:16,511] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:39:16,511] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:39:16,526] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:16,526] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:39:16,526] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:39:16,526] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:39:16,526] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:16,526] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:39:16,526] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:39:16,526] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:39:16,526] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:16,526] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:39:16,526] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:39:16,526] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:39:16,526] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:16,526] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:39:16,526] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@b1712f3]
 DEBUG [2015-06-07 11:39:16,542] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2826f61]
 DEBUG [2015-06-07 11:39:16,542] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:39:16,542] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:39:16,542] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:39:16,558] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:39:16,573] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:39:16,573] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:39:16,573] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:16,589] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:39:16,589] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:16,589] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:16,604] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:16,604] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:16,636] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:39:16,636] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:16,651] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:39:16,651] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:39:16,776] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:16,808] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:39:16,808] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:16,979] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:39:16,979] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:39:16,979] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:16,995] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:17,011] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:17,011] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:39:17,026] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:17,026] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:17,026] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:17,026] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:17,026] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:39:17,026] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:39:17,026] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:17,026] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:39:17,026] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:17,058] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:39:17,058] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:39:17,058] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:17,058] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:17,058] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:39:17,058] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:17,058] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:17,058] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:17,058] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:17,058] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:17,058] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:17,058] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:17,058] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:39:17,058] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:39:17,058] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:39:17,058] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:39:17,058] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:39:17,058] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:39:17,058] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:39:17,058] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:17,073] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:39:17,073] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:17,073] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:39:17,073] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:17,073] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:17,073] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:17,073] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:39:17,073] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:17,073] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:17,073] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:17,073] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:39:17,073] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:39:17,073] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:39:17,073] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:39:17,073] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:39:17,073] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:17,073] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:39:17,073] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:39:17,073] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:39:17,073] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:39:17,073] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:39:17,073] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:39:17,073] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:17,089] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:39:17,089] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:39:17,089] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:39:17,089] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:17,104] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:39:17,104] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:39:17,104] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:39:17,104] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:39:17,104] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:39:17,104] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:17,104] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:39:17,104] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:39:17,104] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:39:17,104] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:39:17,104] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:39:17,104] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:39:17,104] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:39:17,104] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:17,104] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:17,104] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:39:17,104] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:39:17,104] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:39:17,104] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:39:17,104] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:39:17,104] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:39:17,104] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:17,104] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:17,120] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:17,137] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:39:17,137] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:17,168] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@4108fa66
 DEBUG [2015-06-07 11:39:17,168] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@4108fa66
 DEBUG [2015-06-07 11:39:17,168] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4108fa66
 DEBUG [2015-06-07 11:39:17,168] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b5bc39d
 DEBUG [2015-06-07 11:39:17,184] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2cd2c8fe
 DEBUG [2015-06-07 11:39:17,184] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@681aad3b
 DEBUG [2015-06-07 11:39:17,184] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@3277e499
 DEBUG [2015-06-07 11:39:17,184] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@3277e499
 DEBUG [2015-06-07 11:39:17,184] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3277e499
 DEBUG [2015-06-07 11:39:17,184] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@2d72f75e
 DEBUG [2015-06-07 11:39:17,184] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@2d72f75e
 DEBUG [2015-06-07 11:39:17,184] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2d72f75e
 DEBUG [2015-06-07 11:39:17,184] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@3b1bb3ab
 DEBUG [2015-06-07 11:39:17,184] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@3b1bb3ab
 DEBUG [2015-06-07 11:39:17,199] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3b1bb3ab
 DEBUG [2015-06-07 11:39:17,199] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@37d80fe7
 DEBUG [2015-06-07 11:39:17,199] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@37d80fe7
 DEBUG [2015-06-07 11:39:17,199] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@37d80fe7
 DEBUG [2015-06-07 11:39:17,199] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@fac80
 DEBUG [2015-06-07 11:39:17,199] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@fac80
 DEBUG [2015-06-07 11:39:17,199] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@fac80
 DEBUG [2015-06-07 11:39:17,199] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@596df867
 DEBUG [2015-06-07 11:39:17,199] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@596df867
 DEBUG [2015-06-07 11:39:17,199] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@596df867
 DEBUG [2015-06-07 11:39:17,199] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@1827a871
 DEBUG [2015-06-07 11:39:17,199] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@1827a871
 DEBUG [2015-06-07 11:39:17,199] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1827a871
 DEBUG [2015-06-07 11:39:17,215] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1e11bc55
 DEBUG [2015-06-07 11:39:17,215] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1e11bc55
 DEBUG [2015-06-07 11:39:17,215] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@82c57b3
 DEBUG [2015-06-07 11:39:17,215] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@82c57b3
 DEBUG [2015-06-07 11:39:17,215] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@1734f68
 DEBUG [2015-06-07 11:39:17,215] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1734f68
 DEBUG [2015-06-07 11:39:17,215] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@7dac3fd8
 DEBUG [2015-06-07 11:39:17,215] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7dac3fd8
 DEBUG [2015-06-07 11:39:17,215] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@31c269fd
 DEBUG [2015-06-07 11:39:17,215] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@31c269fd
 DEBUG [2015-06-07 11:39:17,215] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@7db0565c
 DEBUG [2015-06-07 11:39:17,215] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7db0565c
 DEBUG [2015-06-07 11:39:17,230] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@29539e36
 DEBUG [2015-06-07 11:39:17,230] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@29539e36
 DEBUG [2015-06-07 11:39:17,230] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@29539e36
 DEBUG [2015-06-07 11:39:17,230] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@669253b7
 DEBUG [2015-06-07 11:39:17,230] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@36ac8a63
 DEBUG [2015-06-07 11:39:17,230] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@36ac8a63
 DEBUG [2015-06-07 11:39:17,230] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@36ac8a63
 DEBUG [2015-06-07 11:39:17,230] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@77b21474
 DEBUG [2015-06-07 11:39:17,230] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@39c11e6c
 DEBUG [2015-06-07 11:39:17,230] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@39c11e6c
 DEBUG [2015-06-07 11:39:17,230] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@329a1243
 DEBUG [2015-06-07 11:39:17,230] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@329a1243
 DEBUG [2015-06-07 11:39:17,246] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@581d969c
 DEBUG [2015-06-07 11:39:17,246] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@581d969c
 DEBUG [2015-06-07 11:39:17,246] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@7cd1ac19
 DEBUG [2015-06-07 11:39:17,246] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7cd1ac19
 DEBUG [2015-06-07 11:39:17,246] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c8b96ec
 DEBUG [2015-06-07 11:39:17,246] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c8b96ec
 DEBUG [2015-06-07 11:39:17,246] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7048f722
 DEBUG [2015-06-07 11:39:17,246] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3c291aad
 DEBUG [2015-06-07 11:39:17,246] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@28c0b664
 DEBUG [2015-06-07 11:39:17,246] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@28c0b664
 DEBUG [2015-06-07 11:39:17,246] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@28c0b664
 DEBUG [2015-06-07 11:39:17,246] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6d1310f6
 DEBUG [2015-06-07 11:39:17,246] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6d1310f6
 DEBUG [2015-06-07 11:39:17,246] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6d1310f6
 DEBUG [2015-06-07 11:39:17,246] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@29d2d081
 DEBUG [2015-06-07 11:39:17,262] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@1bc53649
 DEBUG [2015-06-07 11:39:17,262] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@1bc53649
 DEBUG [2015-06-07 11:39:17,262] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@1bc53649
 DEBUG [2015-06-07 11:39:17,262] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4d0402b
 DEBUG [2015-06-07 11:39:17,262] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4d0402b
 DEBUG [2015-06-07 11:39:17,262] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4d0402b
 DEBUG [2015-06-07 11:39:17,262] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@3f2049b6
 DEBUG [2015-06-07 11:39:17,262] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@3fabf088
 DEBUG [2015-06-07 11:39:17,262] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3fabf088
 DEBUG [2015-06-07 11:39:17,262] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2c22a348
 DEBUG [2015-06-07 11:39:17,262] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@6058e535
 DEBUG [2015-06-07 11:39:17,262] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6058e535
 DEBUG [2015-06-07 11:39:17,277] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1cefc4b3
 DEBUG [2015-06-07 11:39:17,277] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@1e53135d
 DEBUG [2015-06-07 11:39:17,277] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@33d05366
 DEBUG [2015-06-07 11:39:17,277] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@33d05366
 DEBUG [2015-06-07 11:39:17,277] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@32c0915e
 DEBUG [2015-06-07 11:39:17,277] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@106faf11
 DEBUG [2015-06-07 11:39:17,277] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@70f43b45
 DEBUG [2015-06-07 11:39:17,277] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@26d10f2e
 DEBUG [2015-06-07 11:39:17,277] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@10ad20cb
 DEBUG [2015-06-07 11:39:17,277] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7dd712e8
 DEBUG [2015-06-07 11:39:17,277] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c282004
 DEBUG [2015-06-07 11:39:17,277] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22ee2d0
  INFO [2015-06-07 11:39:17,309] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:39:17,324] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:39:17,324] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:39:17,324] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:39:17,324] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:39:17,387] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:39:17,387] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:39:17,387] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:39:17,387] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:39:17,387] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:39:17,387] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:39:17,387] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:39:17,387] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:39:17,387] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:39:17,387] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:39:17,387] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:39:17,402] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:39:17,402] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:39:17,402] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:39:17,402] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:39:17,465] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:39:17,465] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:39:17,480] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:39:17,512] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:39:17,527] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:39:17,527] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:39:17,527] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:39:17,574] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:39:17,574] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:39:17,590] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:39:17,590] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:39:17,590] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:39:17,590] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:39:17,590] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:39:17,590] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:39:17,590] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:39:17,605] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:39:17,605] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:39:17,605] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:39:17,605] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:39:17,605] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:39:17,605] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:39:17,621] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:39:17,621] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:39:17,621] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:39:17,621] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:39:17,621] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:39:17,621] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:39:17,621] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:39:17,621] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:39:17,621] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:39:17,621] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:39:17,621] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:39:17,621] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:39:17,621] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:39:17,988] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:39:17,988] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:39:18,113] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:39:18,129] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:39:18,129] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:39:18,129] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:39:18,129] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:39:18,129] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:39:18,145] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:39:18,145] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:39:18,145] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:39:18,145] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:39:18,145] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:39:18,145] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:39:18,145] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:39:18,145] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:39:18,145] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:39:18,145] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:39:18,145] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:39:18,145] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:39:18,145] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:39:18,145] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:39:18,145] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:39:18,145] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:39:18,145] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:39:18,145] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:39:18,145] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:39:18,160] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:39:18,160] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:39:18,160] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:39:18,160] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:39:18,160] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:39:18,160] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:39:18,176] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:39:18,176] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:39:18,192] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:39:18,192] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14344 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:39:18,192] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:39:18,333] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:39:18,333] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:39:18,333] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:39:18,333] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:39:18,333] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:39:18,333] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:39:18,365] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:18,365] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:18,365] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:18,365] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:18,365] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:18,365] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:39:18,365] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:18,365] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:18,365] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:18,365] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:18,380] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:18,380] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:18,411] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:39:18,411] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: 40ef1815-2c40-466d-adec-44a224eaaf0a (unnamed)
  INFO [2015-06-07 11:39:18,411] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:39:18,411] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:39:18,411] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:39:18,411] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:39:18,427] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:39:18,427] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:39:18,427] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:39:18,427] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:39:18,427] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:39:18,427] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:39:18,427] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:39:18,427] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:39:18,427] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:39:18,458] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:39:18,458] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:39:18,458] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:39:18,458] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:39:18,458] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:39:18,458] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:18,458] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:18,458] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:18,474] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:18,505] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:18,505] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:18,505] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:18,505] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:18,505] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:18,521] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:18,536] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:18,536] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:39:18,552] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@1ff55ff] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:39:18,552] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:18,552] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:18,552] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:18,552] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:18,552] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:39:18,552] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:39:18,552] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:18,552] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:18,552] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:18,552] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:18,552] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:39:18,552] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:39:18,552] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:18,552] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:18,552] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:18,552] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:18,552] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:18,552] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:18,552] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:18,552] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:39:18,552] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:18,568] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:39:18,568] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:18,568] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:18,568] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:39:18,568] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:39:18,568] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@43da41e]
 DEBUG [2015-06-07 11:39:18,568] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:39:18,568] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:18,568] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:18,583] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:39:18,583] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:39:18,583] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:39:18,583] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:18,583] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:39:18,583] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:18,583] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:39:18,583] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:39:18,583] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:39:18,583] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:39:18,583] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.mybatisTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:39:18,599] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:18,599] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:18,599] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:18,599] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:18,599] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:18,599] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [mybatisTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:39:18,661] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:39:18,661] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:39:18,661] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:39:18,661] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@3db663d0 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:39:18,661] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:39:18,661] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@47fbc56]; rollback [true]
 DEBUG [2015-06-07 11:39:18,661] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-07 11:39:18,708] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336447586
 DEBUG [2015-06-07 11:39:18,708] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-07 11:39:18,708] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:39:18,724] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 57, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:39:18,740] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:39:18,740] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:18,740] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:39:18,755] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:39:18,755] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd49a4]
 DEBUG [2015-06-07 11:39:18,880] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:39:18,880] (Slf4jImpl.java[debug]:28) - ==> Parameters: 3(Integer)
 DEBUG [2015-06-07 11:39:18,880] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd49a4]
 DEBUG [2015-06-07 11:39:18,880] (Slf4jImpl.java[debug]:28) - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd49a4] from current transaction
 DEBUG [2015-06-07 11:39:18,880] (Slf4jImpl.java[debug]:28) - ==>  Executing: select * from types; 
 DEBUG [2015-06-07 11:39:18,880] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:39:18,896] (Slf4jImpl.java[debug]:28) - <==    Columns: typeId
 DEBUG [2015-06-07 11:39:18,896] (Slf4jImpl.java[debug]:28) - <==        Row: 3
 DEBUG [2015-06-07 11:39:18,896] (Slf4jImpl.java[debug]:28) - <==        Row: 73
 DEBUG [2015-06-07 11:39:18,896] (Slf4jImpl.java[debug]:28) - <==        Row: 96
 DEBUG [2015-06-07 11:39:18,911] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd49a4]
 DEBUG [2015-06-07 11:39:18,911] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:18,911] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:39:18,911] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:18,911] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:39:18,911] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd49a4]
 DEBUG [2015-06-07 11:39:18,911] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:39:18,911] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:39:18,911] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:18,911] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:39:18,927] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:18,927] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:18,927] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@b16e202, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:39:18,927] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:18,927] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:39:18,927] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:18,927] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:39:18,927] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:39:18,927] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:18,927] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@b16e202, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:18,927] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:18,927] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:18,927] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:18,927] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:18,927] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:18,927] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336447589
 DEBUG [2015-06-07 11:39:18,927] (HibernateTransactionManager.java[doBegin]:498) - Opened new Session [org.hibernate.impl.SessionImpl@10c07b8d] for Hibernate transaction
 DEBUG [2015-06-07 11:39:18,927] (HibernateTransactionManager.java[doBegin]:509) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@10c07b8d]
 DEBUG [2015-06-07 11:39:18,927] (JDBCTransaction.java[begin]:78) - begin
 DEBUG [2015-06-07 11:39:18,927] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:39:18,927] (JDBCTransaction.java[begin]:83) - current autocommit status: true
 DEBUG [2015-06-07 11:39:18,927] (JDBCTransaction.java[begin]:86) - disabling autocommit
 DEBUG [2015-06-07 11:39:18,927] (HibernateTransactionManager.java[doBegin]:574) - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:18,927] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@b16e202, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:39:18,927] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (2) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@b16e202, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@2133661d]; rollback [true]
 DEBUG [2015-06-07 11:39:18,927] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:39:18,927] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 35, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:39:18,927] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:39:18,927] (DataSourceUtils.java[doGetConnection]:110) - Fetching JDBC Connection from DataSource
 DEBUG [2015-06-07 11:39:18,927] (DataSourceUtils.java[doGetConnection]:114) - Registering transaction synchronization for JDBC Connection
 DEBUG [2015-06-07 11:39:18,943] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:18,943] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:39:18,943] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:39:18,943] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10643593]
 DEBUG [2015-06-07 11:39:18,943] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:39:18,943] (Slf4jImpl.java[debug]:28) - ==> Parameters: 19(Integer)
 DEBUG [2015-06-07 11:39:18,943] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10643593]
 DEBUG [2015-06-07 11:39:18,943] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336447589
 DEBUG [2015-06-07 11:39:18,996] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:39:19,027] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 11:39:19,027] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:39:19,074] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 11:39:19,089] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 11:39:19,089] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 11:39:19,089] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 11:39:19,089] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 11:39:19,105] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 11:39:19,105] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 11:39:19,105] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 11:39:19,105] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:39:19,121] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:39:19,121] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 11:39:19,121] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:39:19,121] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 11:39:19,121] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:39:19,152] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 11:39:19,152] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 11:39:19,152] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:39:19,152] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:39:19,152] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:39:19,152] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 11:39:19,152] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 11:39:19,152] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:39:19,152] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:39:19,152] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:39:19,152] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:39:19,152] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:39:19,152] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:39:19,152] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 11:39:19,168] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:39:19,168] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:39:19,169] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@b16e202, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:19,169] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:39:19,169] (HibernateTransactionManager.java[doRollback]:677) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@10c07b8d]
 DEBUG [2015-06-07 11:39:19,169] (JDBCTransaction.java[rollback]:182) - rollback
 DEBUG [2015-06-07 11:39:19,170] (JDBCTransaction.java[toggleAutoCommit]:223) - re-enabling autocommit
 DEBUG [2015-06-07 11:39:19,170] (JDBCTransaction.java[rollback]:193) - rolled back JDBC Connection
 DEBUG [2015-06-07 11:39:19,171] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:39:19,171] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10643593]
 DEBUG [2015-06-07 11:39:19,171] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
 DEBUG [2015-06-07 11:39:19,172] (HibernateTransactionManager.java[doCleanupAfterCompletion]:740) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@10c07b8d] after transaction
 DEBUG [2015-06-07 11:39:19,172] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:39:19,172] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:39:19,172] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
  INFO [2015-06-07 11:39:19,172] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@b16e202, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:19,173] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@b16e202, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:39:19,173] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:19,174] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:19,174] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@411c6d44, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:39:19,174] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:19,174] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:39:19,175] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:19,175] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:39:19,175] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:39:19,175] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.deleteTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:39:19,175] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@411c6d44, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:19,175] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:19,175] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:19,175] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:19,175] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:19,175] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [deleteTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:39:19,175] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:39:19,175] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:39:19,175] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@411c6d44, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:39:19,175] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (3) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@411c6d44, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@47fbc56]; rollback [true]
 DEBUG [2015-06-07 11:39:19,175] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:19,175] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:39:19,175] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:39:19,175] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45acdd11]
 DEBUG [2015-06-07 11:39:19,175] (Slf4jImpl.java[debug]:28) - ==>  Executing: delete from types where 1=1 
 DEBUG [2015-06-07 11:39:19,175] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:39:19,175] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45acdd11]
 DEBUG [2015-06-07 11:39:19,175] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@411c6d44, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:19,175] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:39:19,175] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:19,175] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45acdd11]
 DEBUG [2015-06-07 11:39:19,175] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:39:19,175] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:39:19,175] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@411c6d44, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:19,175] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@411c6d44, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:39:19,175] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:39:19,175] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 11:39:16 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:39:19,191] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:19,191] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:19,191] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:39:19,191] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:39:19,191] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'hibernateDao': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:19,191] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:39:19,191] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:39:19,191] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:39:19,191] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 11:39:19,191] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:39:22,325] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:39:22,387] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@38364841 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:39:22,387] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:22,387] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:39:22,403] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:39:22,419] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:22,419] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:22,419] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:22,419] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:22,434] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:22,434] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:22,434] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:22,434] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:22,434] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:22,434] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:22,434] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:22,434] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:22,434] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:39:22,434] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:39:22,434] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:22,669] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:39:22,669] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:39:22,669] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:39:22,669] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:39:22,716] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:39:22,763] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:39:22,810] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:39:22,826] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:39:22,826] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:39:22,904] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:39:22,904] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:39:22,920] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:39:22,951] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:39:22,987] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:39:23,101] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:39:23,101] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:23,101] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:23,101] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:23,101] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:39:23,101] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:23,101] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:23,101] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:23,101] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:23,117] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:23,117] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:23,117] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:23,117] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:23,117] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:23,117] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:23,117] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:23,117] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:23,117] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:39:23,164] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:39:23,242] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:39:23,242] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:39:23,242] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:39:23,242] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:39:23,693] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao': replacing [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:39:23,694] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao2': replacing [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:39:23,695] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:39:23,695] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:39:23,701] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 11:39:23 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:39:23,702] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@4fe767f3: org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao]; root of factory hierarchy
 DEBUG [2015-06-07 11:39:23,745] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:39:23,745] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:39:23,776] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:23,776] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:39:23,854] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:23,854] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:23,870] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:23,870] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:23,870] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:23,870] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:23,870] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:23,870] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:23,870] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:39:23,870] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:39:23,870] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:23,870] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:39:23,870] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:39:23,870] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:39:23,870] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:23,870] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:39:23,870] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:39:23,870] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:39:23,870] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:23,870] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:39:23,870] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:39:23,870] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:39:23,870] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:23,885] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:39:23,885] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@b1712f3]
 DEBUG [2015-06-07 11:39:23,885] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2826f61]
 DEBUG [2015-06-07 11:39:23,885] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:39:23,885] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:39:23,885] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:39:23,901] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:39:23,917] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:39:23,917] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:39:23,917] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:23,932] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:39:23,932] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:23,932] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:23,948] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:23,948] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:23,964] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:39:23,964] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:23,979] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:39:23,979] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:39:24,104] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:24,120] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:39:24,135] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:24,323] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:39:24,323] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:39:24,323] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:24,339] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:24,354] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:24,354] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:39:24,370] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:24,370] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:24,370] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:24,370] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:24,370] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:39:24,370] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:39:24,370] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:24,370] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:39:24,370] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:24,403] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:39:24,403] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:39:24,403] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:24,403] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:24,403] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:39:24,403] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:24,403] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:24,403] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:24,403] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:24,403] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:24,403] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:24,403] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:24,403] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:39:24,403] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:39:24,403] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:39:24,403] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:39:24,419] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:39:24,419] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:39:24,419] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:39:24,419] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:24,419] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:39:24,419] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:24,419] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:39:24,419] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:24,419] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:24,419] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:24,419] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:39:24,419] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:24,419] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:24,419] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:24,419] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:39:24,419] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:39:24,419] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:39:24,419] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:39:24,419] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:39:24,419] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:24,419] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:39:24,419] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:39:24,419] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:39:24,419] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:39:24,419] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:39:24,419] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:39:24,434] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:24,434] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:39:24,434] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:39:24,434] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:39:24,434] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:24,450] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:39:24,450] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:39:24,450] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:39:24,450] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:39:24,450] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:39:24,450] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:24,450] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:39:24,450] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:39:24,450] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:39:24,450] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:39:24,450] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:39:24,450] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:39:24,450] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:39:24,450] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:24,450] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:24,450] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:39:24,450] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:39:24,450] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:39:24,450] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:39:24,450] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:39:24,450] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:39:24,450] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:24,450] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:24,469] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:24,484] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:39:24,484] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:24,531] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@7e0aadd0
 DEBUG [2015-06-07 11:39:24,531] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@7e0aadd0
 DEBUG [2015-06-07 11:39:24,531] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7e0aadd0
 DEBUG [2015-06-07 11:39:24,531] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1494b84d
 DEBUG [2015-06-07 11:39:24,547] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@cc6460c
 DEBUG [2015-06-07 11:39:24,547] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@2427e004
 DEBUG [2015-06-07 11:39:24,547] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@22c01ab0
 DEBUG [2015-06-07 11:39:24,547] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@22c01ab0
 DEBUG [2015-06-07 11:39:24,547] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@22c01ab0
 DEBUG [2015-06-07 11:39:24,547] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@5aa0dbf4
 DEBUG [2015-06-07 11:39:24,547] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@5aa0dbf4
 DEBUG [2015-06-07 11:39:24,547] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5aa0dbf4
 DEBUG [2015-06-07 11:39:24,562] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@3b1bb3ab
 DEBUG [2015-06-07 11:39:24,562] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@3b1bb3ab
 DEBUG [2015-06-07 11:39:24,562] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3b1bb3ab
 DEBUG [2015-06-07 11:39:24,562] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@37d80fe7
 DEBUG [2015-06-07 11:39:24,562] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@37d80fe7
 DEBUG [2015-06-07 11:39:24,562] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@37d80fe7
 DEBUG [2015-06-07 11:39:24,562] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@fac80
 DEBUG [2015-06-07 11:39:24,562] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@fac80
 DEBUG [2015-06-07 11:39:24,562] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@fac80
 DEBUG [2015-06-07 11:39:24,562] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@596df867
 DEBUG [2015-06-07 11:39:24,562] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@596df867
 DEBUG [2015-06-07 11:39:24,562] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@596df867
 DEBUG [2015-06-07 11:39:24,578] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@1827a871
 DEBUG [2015-06-07 11:39:24,578] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@1827a871
 DEBUG [2015-06-07 11:39:24,578] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1827a871
 DEBUG [2015-06-07 11:39:24,578] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1e11bc55
 DEBUG [2015-06-07 11:39:24,578] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1e11bc55
 DEBUG [2015-06-07 11:39:24,578] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@82c57b3
 DEBUG [2015-06-07 11:39:24,578] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@82c57b3
 DEBUG [2015-06-07 11:39:24,578] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@1734f68
 DEBUG [2015-06-07 11:39:24,578] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1734f68
 DEBUG [2015-06-07 11:39:24,578] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@7dac3fd8
 DEBUG [2015-06-07 11:39:24,578] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7dac3fd8
 DEBUG [2015-06-07 11:39:24,578] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@31c269fd
 DEBUG [2015-06-07 11:39:24,578] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@31c269fd
 DEBUG [2015-06-07 11:39:24,578] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@7db0565c
 DEBUG [2015-06-07 11:39:24,594] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7db0565c
 DEBUG [2015-06-07 11:39:24,594] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@29539e36
 DEBUG [2015-06-07 11:39:24,594] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@29539e36
 DEBUG [2015-06-07 11:39:24,594] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@29539e36
 DEBUG [2015-06-07 11:39:24,594] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@669253b7
 DEBUG [2015-06-07 11:39:24,594] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@36ac8a63
 DEBUG [2015-06-07 11:39:24,594] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@36ac8a63
 DEBUG [2015-06-07 11:39:24,594] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@36ac8a63
 DEBUG [2015-06-07 11:39:24,594] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@77b21474
 DEBUG [2015-06-07 11:39:24,594] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@39c11e6c
 DEBUG [2015-06-07 11:39:24,594] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@39c11e6c
 DEBUG [2015-06-07 11:39:24,594] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@329a1243
 DEBUG [2015-06-07 11:39:24,594] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@329a1243
 DEBUG [2015-06-07 11:39:24,594] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@581d969c
 DEBUG [2015-06-07 11:39:24,594] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@581d969c
 DEBUG [2015-06-07 11:39:24,609] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@7cd1ac19
 DEBUG [2015-06-07 11:39:24,609] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7cd1ac19
 DEBUG [2015-06-07 11:39:24,609] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c8b96ec
 DEBUG [2015-06-07 11:39:24,609] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c8b96ec
 DEBUG [2015-06-07 11:39:24,609] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7048f722
 DEBUG [2015-06-07 11:39:24,625] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3c291aad
 DEBUG [2015-06-07 11:39:24,625] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@28c0b664
 DEBUG [2015-06-07 11:39:24,625] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@28c0b664
 DEBUG [2015-06-07 11:39:24,625] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@28c0b664
 DEBUG [2015-06-07 11:39:24,625] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6d1310f6
 DEBUG [2015-06-07 11:39:24,625] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6d1310f6
 DEBUG [2015-06-07 11:39:24,625] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6d1310f6
 DEBUG [2015-06-07 11:39:24,625] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@29d2d081
 DEBUG [2015-06-07 11:39:24,625] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@1bc53649
 DEBUG [2015-06-07 11:39:24,640] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@1bc53649
 DEBUG [2015-06-07 11:39:24,640] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@1bc53649
 DEBUG [2015-06-07 11:39:24,640] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4d0402b
 DEBUG [2015-06-07 11:39:24,640] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4d0402b
 DEBUG [2015-06-07 11:39:24,640] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4d0402b
 DEBUG [2015-06-07 11:39:24,640] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@3f2049b6
 DEBUG [2015-06-07 11:39:24,656] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@3fabf088
 DEBUG [2015-06-07 11:39:24,656] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3fabf088
 DEBUG [2015-06-07 11:39:24,656] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2c22a348
 DEBUG [2015-06-07 11:39:24,656] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@6058e535
 DEBUG [2015-06-07 11:39:24,656] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6058e535
 DEBUG [2015-06-07 11:39:24,656] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1cefc4b3
 DEBUG [2015-06-07 11:39:24,672] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@1e53135d
 DEBUG [2015-06-07 11:39:24,672] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@33d05366
 DEBUG [2015-06-07 11:39:24,672] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@33d05366
 DEBUG [2015-06-07 11:39:24,672] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@32c0915e
 DEBUG [2015-06-07 11:39:24,672] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@106faf11
 DEBUG [2015-06-07 11:39:24,672] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@70f43b45
 DEBUG [2015-06-07 11:39:24,672] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@26d10f2e
 DEBUG [2015-06-07 11:39:24,672] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@10ad20cb
 DEBUG [2015-06-07 11:39:24,672] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7dd712e8
 DEBUG [2015-06-07 11:39:24,672] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c282004
 DEBUG [2015-06-07 11:39:24,672] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22ee2d0
  INFO [2015-06-07 11:39:24,734] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:39:24,750] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:39:24,750] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:39:24,750] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:39:24,765] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:39:24,828] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:39:24,828] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:39:24,844] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:39:24,844] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:39:24,844] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:39:24,844] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:39:24,844] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:39:24,844] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:39:24,844] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:39:24,844] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:39:24,844] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:39:24,844] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:39:24,844] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:39:24,844] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:39:24,844] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:39:24,890] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:39:24,890] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:39:24,906] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:39:24,937] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:39:24,937] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:39:24,953] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:39:24,953] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:39:24,984] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:39:24,984] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:39:25,000] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:39:25,000] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:39:25,000] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:39:25,000] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:39:25,000] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:39:25,000] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:39:25,015] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:39:25,015] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:39:25,015] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:39:25,015] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:39:25,015] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:39:25,015] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:39:25,015] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:39:25,015] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:39:25,015] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:39:25,015] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:39:25,015] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:39:25,015] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:39:25,015] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:39:25,015] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:39:25,015] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:39:25,015] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:39:25,015] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:39:25,031] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:39:25,031] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:39:25,031] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:39:25,370] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:39:25,370] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:39:25,480] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:39:25,496] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:39:25,496] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:39:25,496] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:39:25,512] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:39:25,512] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:39:25,527] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:39:25,527] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:39:25,527] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:39:25,527] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:39:25,527] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:39:25,527] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:39:25,543] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:39:25,559] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:39:25,559] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:39:25,559] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14354 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:39:25,574] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:39:25,746] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:39:25,746] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:39:25,746] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:39:25,746] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:39:25,746] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:39:25,746] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:39:25,777] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:25,777] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:25,777] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:25,777] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:25,777] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:25,777] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:39:25,777] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:25,777] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:25,777] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:25,777] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:25,793] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:25,793] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:25,824] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:39:25,824] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: fbc19012-e932-42d5-b533-d6c33e2e6169 (unnamed)
  INFO [2015-06-07 11:39:25,824] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:39:25,824] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:39:25,824] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:39:25,824] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:39:25,840] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:39:25,840] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:39:25,840] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:39:25,840] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:39:25,840] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:39:25,840] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:39:25,840] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:39:25,840] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:39:25,840] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:39:25,856] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:39:25,856] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:39:25,856] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:39:25,871] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:39:25,871] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:39:25,871] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:25,871] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:25,871] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:25,871] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:25,902] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:25,902] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:25,902] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:25,902] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:25,902] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:25,902] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:25,918] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:25,918] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:39:25,934] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@1ff55ff] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:39:25,934] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:25,934] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:25,934] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:25,934] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:25,934] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:39:25,934] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:39:25,934] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:25,934] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:25,934] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:25,934] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:25,934] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:39:25,934] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:39:25,934] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:25,934] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:25,934] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:25,934] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:25,934] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:25,934] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:25,934] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:25,934] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:39:25,934] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:25,934] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:39:25,934] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:25,934] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:25,949] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:39:25,949] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:39:25,949] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@43da41e]
 DEBUG [2015-06-07 11:39:25,949] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:39:25,949] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:25,949] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:25,949] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:39:25,949] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:39:25,949] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:39:25,949] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:25,965] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:39:25,965] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:25,965] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:39:25,965] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:39:25,965] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:39:25,965] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:39:25,965] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.mybatisTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:39:25,965] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:25,965] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:25,965] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:25,965] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:25,965] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:25,981] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [mybatisTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:39:25,996] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:39:26,012] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:39:26,012] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:39:26,012] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@3db663d0 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:39:26,012] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:39:26,012] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@47fbc56]; rollback [true]
 DEBUG [2015-06-07 11:39:26,027] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-07 11:39:26,059] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336447660
 DEBUG [2015-06-07 11:39:26,059] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-07 11:39:26,059] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:39:26,059] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 99, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:39:26,074] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:39:26,074] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:26,074] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:39:26,090] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:39:26,090] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd49a4]
 DEBUG [2015-06-07 11:39:26,184] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:39:26,184] (Slf4jImpl.java[debug]:28) - ==> Parameters: 27(Integer)
 DEBUG [2015-06-07 11:39:26,184] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd49a4]
 DEBUG [2015-06-07 11:39:26,184] (Slf4jImpl.java[debug]:28) - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd49a4] from current transaction
 DEBUG [2015-06-07 11:39:26,184] (Slf4jImpl.java[debug]:28) - ==>  Executing: select * from types; 
 DEBUG [2015-06-07 11:39:26,184] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:39:26,199] (Slf4jImpl.java[debug]:28) - <==    Columns: typeId
 DEBUG [2015-06-07 11:39:26,199] (Slf4jImpl.java[debug]:28) - <==        Row: 19
 DEBUG [2015-06-07 11:39:26,199] (Slf4jImpl.java[debug]:28) - <==        Row: 27
 DEBUG [2015-06-07 11:39:26,199] (Slf4jImpl.java[debug]:28) - <==        Row: 73
 DEBUG [2015-06-07 11:39:26,199] (Slf4jImpl.java[debug]:28) - <==        Row: 96
 DEBUG [2015-06-07 11:39:26,199] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd49a4]
 DEBUG [2015-06-07 11:39:26,199] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:26,199] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:39:26,199] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:26,215] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:39:26,215] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd49a4]
 DEBUG [2015-06-07 11:39:26,215] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:39:26,215] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:39:26,215] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:26,215] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:39:26,215] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:26,215] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:26,215] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@14fa92af, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:39:26,215] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:26,215] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:39:26,215] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:26,215] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:39:26,215] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:39:26,215] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:26,215] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@14fa92af, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:26,215] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:26,215] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:26,215] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:26,215] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:26,215] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:26,215] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336447662
 DEBUG [2015-06-07 11:39:26,215] (HibernateTransactionManager.java[doBegin]:498) - Opened new Session [org.hibernate.impl.SessionImpl@2c7a8af2] for Hibernate transaction
 DEBUG [2015-06-07 11:39:26,215] (HibernateTransactionManager.java[doBegin]:509) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2c7a8af2]
 DEBUG [2015-06-07 11:39:26,231] (JDBCTransaction.java[begin]:78) - begin
 DEBUG [2015-06-07 11:39:26,231] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:39:26,231] (JDBCTransaction.java[begin]:83) - current autocommit status: true
 DEBUG [2015-06-07 11:39:26,231] (JDBCTransaction.java[begin]:86) - disabling autocommit
 DEBUG [2015-06-07 11:39:26,231] (HibernateTransactionManager.java[doBegin]:574) - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:26,231] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@14fa92af, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:39:26,231] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (2) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@14fa92af, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@1d23ff23]; rollback [true]
 DEBUG [2015-06-07 11:39:26,231] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:39:26,231] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 57, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:39:26,231] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:39:26,231] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336447662
 DEBUG [2015-06-07 11:39:26,293] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:39:26,309] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 11:39:26,309] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:39:26,340] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 11:39:26,356] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 11:39:26,356] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 11:39:26,356] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 11:39:26,371] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 11:39:26,371] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 11:39:26,371] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 11:39:26,371] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 11:39:26,371] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:39:26,387] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:39:26,387] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 11:39:26,387] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:39:26,402] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 11:39:26,402] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:39:26,402] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 11:39:26,418] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 11:39:26,418] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:39:26,418] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:39:26,418] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:39:26,418] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 11:39:26,418] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 11:39:26,418] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:39:26,418] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:39:26,418] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:39:26,418] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:39:26,418] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:39:26,418] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:39:26,418] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 11:39:26,418] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:39:26,418] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:39:26,418] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@14fa92af, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:26,418] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:39:26,418] (HibernateTransactionManager.java[doRollback]:677) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2c7a8af2]
 DEBUG [2015-06-07 11:39:26,418] (JDBCTransaction.java[rollback]:182) - rollback
 DEBUG [2015-06-07 11:39:26,434] (JDBCTransaction.java[toggleAutoCommit]:223) - re-enabling autocommit
 DEBUG [2015-06-07 11:39:26,434] (JDBCTransaction.java[rollback]:193) - rolled back JDBC Connection
 DEBUG [2015-06-07 11:39:26,434] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:39:26,434] (HibernateTransactionManager.java[doCleanupAfterCompletion]:740) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2c7a8af2] after transaction
 DEBUG [2015-06-07 11:39:26,434] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:39:26,434] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:39:26,434] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
  INFO [2015-06-07 11:39:26,434] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@14fa92af, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:26,434] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@14fa92af, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:39:26,434] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:26,434] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:26,434] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@518bfd90, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:39:26,434] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:26,434] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:39:26,434] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:26,434] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:39:26,434] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:39:26,434] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.deleteTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:39:26,434] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@518bfd90, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:26,434] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:26,434] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:26,434] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:26,434] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:26,434] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [deleteTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:39:26,434] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:39:26,434] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:39:26,434] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@518bfd90, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:39:26,434] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (3) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@518bfd90, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@47fbc56]; rollback [true]
 DEBUG [2015-06-07 11:39:26,434] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:26,434] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:39:26,434] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:39:26,434] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44f24a20]
 DEBUG [2015-06-07 11:39:26,434] (Slf4jImpl.java[debug]:28) - ==>  Executing: delete from types where 1=1 
 DEBUG [2015-06-07 11:39:26,434] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:39:26,434] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44f24a20]
 DEBUG [2015-06-07 11:39:26,434] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@518bfd90, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:26,434] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:39:26,434] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:26,434] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44f24a20]
 DEBUG [2015-06-07 11:39:26,449] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:39:26,449] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:39:26,449] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@518bfd90, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:26,449] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@518bfd90, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:39:26,449] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:39:26,449] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 11:39:23 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:39:26,449] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:26,449] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:26,449] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:39:26,449] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:39:26,449] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'hibernateDao': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:26,449] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:39:26,449] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:39:26,449] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:39:26,465] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 11:39:26,465] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:39:31,740] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:39:31,838] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@6b1274d2 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:39:31,844] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:31,847] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:39:31,856] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:39:31,876] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:31,877] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:31,879] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:31,879] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:31,884] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:31,885] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:31,887] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:31,887] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:31,889] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:31,890] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:31,893] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:31,895] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:31,900] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@6295d394, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:39:31,901] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:39:31,901] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:32,230] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:39:32,233] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:39:32,238] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:39:32,238] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:39:32,319] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:39:32,378] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:39:32,437] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:39:32,446] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:39:32,448] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:39:32,486] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:39:32,501] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:39:32,501] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:39:32,517] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:39:32,532] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:39:32,585] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:39:32,601] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:32,601] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:32,601] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:32,601] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:39:32,601] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:32,601] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:32,601] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:32,601] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:32,601] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:32,601] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:32,601] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:32,617] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:32,617] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:32,632] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:32,632] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:32,632] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:39:32,632] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:39:32,679] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:39:32,742] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:39:32,742] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:39:32,742] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:39:32,757] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:39:33,061] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao': replacing [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:39:33,061] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao2': replacing [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:39:33,061] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:39:33,061] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:39:33,077] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@4c15e7fd: startup date [Sun Jun 07 11:39:33 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:39:33,077] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@4c15e7fd: org.springframework.beans.factory.support.DefaultListableBeanFactory@2421cc4: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao]; root of factory hierarchy
 DEBUG [2015-06-07 11:39:33,108] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,108] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,140] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,155] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,218] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,218] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,218] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,218] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,218] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,218] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,218] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,218] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,218] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,218] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,233] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,233] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,233] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,233] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,233] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,233] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,233] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:39:33,233] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:39:33,233] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,233] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:39:33,233] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:39:33,233] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:39:33,233] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,233] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:39:33,233] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@41d426b5]
 DEBUG [2015-06-07 11:39:33,249] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@17aad511]
 DEBUG [2015-06-07 11:39:33,249] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2421cc4: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:39:33,249] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:39:33,249] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:39:33,265] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:39:33,287] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:39:33,287] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:39:33,287] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,303] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:39:33,303] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:33,303] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:33,318] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:33,318] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:33,350] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:39:33,350] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,365] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:39:33,365] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:39:33,506] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,537] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:39:33,537] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:33,756] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:39:33,756] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:39:33,756] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:33,787] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,818] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:33,818] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:39:33,834] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:33,834] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:33,834] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:33,834] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:33,834] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:33,834] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,834] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:39:33,834] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:39:33,834] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,850] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:39:33,850] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:33,865] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:39:33,865] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:39:33,865] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:33,865] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,865] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:33,881] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:33,881] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:39:33,881] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:33,881] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:33,881] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:33,881] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:39:33,881] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:39:33,881] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:39:33,881] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:39:33,881] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:39:33,881] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:39:33,881] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:39:33,881] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,881] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:39:33,881] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:33,881] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:39:33,881] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:33,897] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:33,897] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:33,897] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:39:33,897] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:33,897] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:33,897] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:33,897] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:39:33,897] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:39:33,897] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:39:33,897] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:39:33,897] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:39:33,897] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,897] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:39:33,897] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:39:33,897] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:39:33,897] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:39:33,897] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:39:33,897] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:39:33,897] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,912] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:39:33,912] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:39:33,912] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:39:33,912] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,928] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:39:33,928] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:39:33,928] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:39:33,928] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:39:33,928] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:39:33,928] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,928] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:39:33,928] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:39:33,928] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:39:33,928] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:39:33,928] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:39:33,928] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:39:33,928] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,928] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,928] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,928] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,928] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:39:33,928] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:39:33,928] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:39:33,928] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:39:33,928] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:39:33,928] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:33,928] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:33,944] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:33,976] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:39:33,976] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:34,023] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@63f34b70
 DEBUG [2015-06-07 11:39:34,023] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@63f34b70
 DEBUG [2015-06-07 11:39:34,023] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63f34b70
 DEBUG [2015-06-07 11:39:34,023] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3277e499
 DEBUG [2015-06-07 11:39:34,023] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@16afbd92
 DEBUG [2015-06-07 11:39:34,023] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@486be205
 DEBUG [2015-06-07 11:39:34,023] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4d411036
 DEBUG [2015-06-07 11:39:34,023] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4d411036
 DEBUG [2015-06-07 11:39:34,023] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4d411036
 DEBUG [2015-06-07 11:39:34,023] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@7d373bcf
 DEBUG [2015-06-07 11:39:34,023] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@7d373bcf
 DEBUG [2015-06-07 11:39:34,023] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d373bcf
 DEBUG [2015-06-07 11:39:34,023] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@51768776
 DEBUG [2015-06-07 11:39:34,023] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@51768776
 DEBUG [2015-06-07 11:39:34,023] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51768776
 DEBUG [2015-06-07 11:39:34,038] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@d1f74b8
 DEBUG [2015-06-07 11:39:34,038] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@d1f74b8
 DEBUG [2015-06-07 11:39:34,038] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@d1f74b8
 DEBUG [2015-06-07 11:39:34,038] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@3676ac27
 DEBUG [2015-06-07 11:39:34,038] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@3676ac27
 DEBUG [2015-06-07 11:39:34,038] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3676ac27
 DEBUG [2015-06-07 11:39:34,038] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@672f11c2
 DEBUG [2015-06-07 11:39:34,038] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@672f11c2
 DEBUG [2015-06-07 11:39:34,038] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@672f11c2
 DEBUG [2015-06-07 11:39:34,038] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@324c64cd
 DEBUG [2015-06-07 11:39:34,038] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@324c64cd
 DEBUG [2015-06-07 11:39:34,054] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@324c64cd
 DEBUG [2015-06-07 11:39:34,054] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@70e29e14
 DEBUG [2015-06-07 11:39:34,054] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@70e29e14
 DEBUG [2015-06-07 11:39:34,054] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5d8445d7
 DEBUG [2015-06-07 11:39:34,054] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5d8445d7
 DEBUG [2015-06-07 11:39:34,054] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@29ad44e3
 DEBUG [2015-06-07 11:39:34,054] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@29ad44e3
 DEBUG [2015-06-07 11:39:34,054] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@14bb2297
 DEBUG [2015-06-07 11:39:34,054] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@14bb2297
 DEBUG [2015-06-07 11:39:34,054] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@2db2cd5
 DEBUG [2015-06-07 11:39:34,054] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2db2cd5
 DEBUG [2015-06-07 11:39:34,069] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@1c25b8a7
 DEBUG [2015-06-07 11:39:34,069] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1c25b8a7
 DEBUG [2015-06-07 11:39:34,069] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@7957dc72
 DEBUG [2015-06-07 11:39:34,069] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7957dc72
 DEBUG [2015-06-07 11:39:34,069] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7957dc72
 DEBUG [2015-06-07 11:39:34,069] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@82c57b3
 DEBUG [2015-06-07 11:39:34,069] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@77b7ffa4
 DEBUG [2015-06-07 11:39:34,069] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77b7ffa4
 DEBUG [2015-06-07 11:39:34,069] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77b7ffa4
 DEBUG [2015-06-07 11:39:34,069] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@41382722
 DEBUG [2015-06-07 11:39:34,069] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@51684e4a
 DEBUG [2015-06-07 11:39:34,069] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51684e4a
 DEBUG [2015-06-07 11:39:34,069] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@31c269fd
 DEBUG [2015-06-07 11:39:34,085] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@31c269fd
 DEBUG [2015-06-07 11:39:34,085] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@20312893
 DEBUG [2015-06-07 11:39:34,085] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20312893
 DEBUG [2015-06-07 11:39:34,085] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@2a551a63
 DEBUG [2015-06-07 11:39:34,085] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2a551a63
 DEBUG [2015-06-07 11:39:34,085] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@49a64d82
 DEBUG [2015-06-07 11:39:34,085] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@49a64d82
 DEBUG [2015-06-07 11:39:34,085] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4d9d1b69
 DEBUG [2015-06-07 11:39:34,085] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@781e7326
 DEBUG [2015-06-07 11:39:34,101] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@1fc793c2
 DEBUG [2015-06-07 11:39:34,101] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@1fc793c2
 DEBUG [2015-06-07 11:39:34,101] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@1fc793c2
 DEBUG [2015-06-07 11:39:34,101] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@37d3d232
 DEBUG [2015-06-07 11:39:34,101] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@37d3d232
 DEBUG [2015-06-07 11:39:34,101] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@37d3d232
 DEBUG [2015-06-07 11:39:34,101] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@46cf05f7
 DEBUG [2015-06-07 11:39:34,101] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@3a80515c
 DEBUG [2015-06-07 11:39:34,101] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a80515c
 DEBUG [2015-06-07 11:39:34,101] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@3a80515c
 DEBUG [2015-06-07 11:39:34,101] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@588ab592
 DEBUG [2015-06-07 11:39:34,101] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@588ab592
 DEBUG [2015-06-07 11:39:34,101] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@588ab592
 DEBUG [2015-06-07 11:39:34,101] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@58a55449
 DEBUG [2015-06-07 11:39:34,116] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@2c444798
 DEBUG [2015-06-07 11:39:34,116] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2c444798
 DEBUG [2015-06-07 11:39:34,116] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4d157787
 DEBUG [2015-06-07 11:39:34,116] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@512d92b
 DEBUG [2015-06-07 11:39:34,116] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@512d92b
 DEBUG [2015-06-07 11:39:34,116] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@88d6f9b
 DEBUG [2015-06-07 11:39:34,116] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@7577b641
 DEBUG [2015-06-07 11:39:34,116] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@3fabf088
 DEBUG [2015-06-07 11:39:34,116] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3fabf088
 DEBUG [2015-06-07 11:39:34,116] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2c22a348
 DEBUG [2015-06-07 11:39:34,116] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7bd69e82
 DEBUG [2015-06-07 11:39:34,116] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@74d7184a
 DEBUG [2015-06-07 11:39:34,116] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@51b01960
 DEBUG [2015-06-07 11:39:34,116] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6831d8fd
 DEBUG [2015-06-07 11:39:34,116] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@27dc79f7
 DEBUG [2015-06-07 11:39:34,116] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6b85300e
 DEBUG [2015-06-07 11:39:34,116] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3aaf4f07
  INFO [2015-06-07 11:39:34,148] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:39:34,148] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:39:34,148] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:39:34,163] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:39:34,163] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:39:34,226] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:39:34,226] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:39:34,226] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:39:34,226] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:39:34,226] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:39:34,226] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:39:34,226] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:39:34,226] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:39:34,226] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:39:34,226] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:39:34,226] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:39:34,226] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:39:34,226] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:39:34,226] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:39:34,241] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:39:34,288] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:39:34,288] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:39:34,288] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:39:34,319] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:39:34,335] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:39:34,335] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:39:34,351] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:39:34,383] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:39:34,383] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:39:34,383] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:39:34,383] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:39:34,399] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:39:34,399] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:39:34,399] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:39:34,399] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:39:34,399] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:39:34,399] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:39:34,399] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:39:34,399] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:39:34,399] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:39:34,414] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:39:34,414] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:39:34,414] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:39:34,414] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:39:34,414] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:39:34,414] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:39:34,414] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:39:34,414] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:39:34,414] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:39:34,414] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:39:34,414] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:39:34,414] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:39:34,414] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:39:34,414] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:39:34,414] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:39:34,774] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:39:34,774] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:39:34,899] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:39:34,930] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:39:34,930] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:39:34,930] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:39:34,930] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:39:34,930] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:39:34,930] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:39:34,930] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:39:34,930] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:39:34,930] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:39:34,930] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:39:34,930] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:39:34,945] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:39:34,945] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:39:34,947] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:39:34,947] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:39:34,947] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:39:34,950] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:39:34,950] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:39:34,950] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:39:34,950] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:39:34,950] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:39:34,950] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:39:34,950] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:39:34,950] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:39:34,950] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:39:34,950] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:39:34,950] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:39:34,950] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:39:34,950] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:39:34,950] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:39:34,981] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:39:34,981] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:39:34,981] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:39:34,981] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14364 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:39:34,996] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:39:35,134] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:39:35,134] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:39:35,134] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:39:35,134] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:39:35,134] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:39:35,134] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:39:35,150] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:35,166] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:35,166] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:35,166] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:35,166] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:35,166] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:39:35,166] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:35,166] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:39:35,166] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:35,166] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:35,181] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:35,181] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:39:35,197] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:39:35,213] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: cf39c4b2-5519-4ea2-a9e2-2b86b3ef17ef (unnamed)
  INFO [2015-06-07 11:39:35,213] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:39:35,213] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:39:35,213] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:39:35,213] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:39:35,213] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:39:35,213] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:39:35,213] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:39:35,213] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:39:35,213] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:39:35,213] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:39:35,213] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:39:35,213] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:39:35,213] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:39:35,244] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:39:35,244] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:39:35,244] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:39:35,244] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:39:35,244] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:39:35,244] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:35,244] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:35,244] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:35,259] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:35,275] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:35,275] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:35,275] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:35,275] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:35,275] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:35,291] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:35,291] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:39:35,291] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:39:35,306] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@1ff55ff] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:39:35,306] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:35,306] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:35,306] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:35,306] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:35,306] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:39:35,306] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:39:35,306] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:35,306] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:35,306] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:35,306] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:35,306] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:39:35,306] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:39:35,306] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:35,306] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:35,306] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:39:35,306] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:35,306] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:39:35,306] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:35,306] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:35,306] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:39:35,306] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:39:35,322] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:39:35,322] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:39:35,322] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:35,322] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:39:35,322] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:39:35,322] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@43da41e]
 DEBUG [2015-06-07 11:39:35,322] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:39:35,322] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:35,322] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:35,338] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:39:35,338] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:39:35,338] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:39:35,338] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:35,338] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:39:35,338] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:35,338] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:39:35,338] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:39:35,338] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:39:35,338] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:39:35,353] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.mybatisTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:39:35,353] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@6295d394, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:35,353] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:35,353] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:35,353] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:35,353] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:35,353] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [mybatisTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:39:35,384] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:39:35,384] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:39:35,384] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:39:35,384] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@3db663d0 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:39:35,384] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@6295d394, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:39:35,384] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@6295d394, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@47fbc56]; rollback [true]
 DEBUG [2015-06-07 11:39:35,384] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-07 11:39:35,431] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336447753
 DEBUG [2015-06-07 11:39:35,431] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-07 11:39:35,431] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:39:35,431] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 88, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:39:35,448] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:39:35,448] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:35,448] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:39:35,464] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:39:35,464] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd49a4]
 DEBUG [2015-06-07 11:39:35,542] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:39:35,542] (Slf4jImpl.java[debug]:28) - ==> Parameters: 68(Integer)
 DEBUG [2015-06-07 11:39:35,542] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd49a4]
 DEBUG [2015-06-07 11:39:35,542] (Slf4jImpl.java[debug]:28) - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd49a4] from current transaction
 DEBUG [2015-06-07 11:39:35,542] (Slf4jImpl.java[debug]:28) - ==>  Executing: select * from types; 
 DEBUG [2015-06-07 11:39:35,542] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:39:35,557] (Slf4jImpl.java[debug]:28) - <==    Columns: typeId
 DEBUG [2015-06-07 11:39:35,557] (Slf4jImpl.java[debug]:28) - <==        Row: 19
 DEBUG [2015-06-07 11:39:35,557] (Slf4jImpl.java[debug]:28) - <==        Row: 68
 DEBUG [2015-06-07 11:39:35,557] (Slf4jImpl.java[debug]:28) - <==        Row: 73
 DEBUG [2015-06-07 11:39:35,557] (Slf4jImpl.java[debug]:28) - <==        Row: 96
 DEBUG [2015-06-07 11:39:35,557] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd49a4]
 DEBUG [2015-06-07 11:39:35,557] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@6295d394, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:35,557] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:39:35,557] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:35,573] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:39:35,573] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25cd49a4]
 DEBUG [2015-06-07 11:39:35,573] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:39:35,573] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:39:35,573] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@6295d394, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:35,573] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@6295d394, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:39:35,573] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:35,573] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:35,573] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@760245e1, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:39:35,573] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:35,573] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:39:35,573] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:35,573] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:39:35,573] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:39:35,573] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:35,573] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'] found for test context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@760245e1, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:35,573] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:35,573] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:35,573] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:35,573] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:35,589] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:35,589] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336447755
 DEBUG [2015-06-07 11:39:35,589] (HibernateTransactionManager.java[doBegin]:498) - Opened new Session [org.hibernate.impl.SessionImpl@70c53dbe] for Hibernate transaction
 DEBUG [2015-06-07 11:39:35,589] (HibernateTransactionManager.java[doBegin]:509) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@70c53dbe]
 DEBUG [2015-06-07 11:39:35,589] (JDBCTransaction.java[begin]:78) - begin
 DEBUG [2015-06-07 11:39:35,589] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:39:35,589] (JDBCTransaction.java[begin]:83) - current autocommit status: true
 DEBUG [2015-06-07 11:39:35,589] (JDBCTransaction.java[begin]:86) - disabling autocommit
 DEBUG [2015-06-07 11:39:35,589] (HibernateTransactionManager.java[doBegin]:574) - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:35,589] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@760245e1, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:39:35,589] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (2) for test context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@760245e1, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@7915bca3]; rollback [true]
 DEBUG [2015-06-07 11:39:35,589] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:39:35,589] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 61, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:39:35,589] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:39:35,589] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336447755
 DEBUG [2015-06-07 11:39:35,651] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:39:35,667] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 11:39:35,667] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:39:35,698] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 11:39:35,714] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 11:39:35,714] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 11:39:35,714] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 11:39:35,714] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 11:39:35,729] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 11:39:35,729] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 11:39:35,729] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 11:39:35,729] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:39:35,747] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:39:35,747] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 11:39:35,747] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:39:35,763] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 11:39:35,763] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:39:35,778] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 11:39:35,778] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 11:39:35,778] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:39:35,778] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:39:35,778] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:39:35,794] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 11:39:35,794] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 11:39:35,794] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:39:35,794] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:39:35,794] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:39:35,794] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:39:35,794] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:39:35,794] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:39:35,794] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 11:39:35,794] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:39:35,794] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:39:35,794] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@760245e1, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:35,794] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:39:35,794] (HibernateTransactionManager.java[doRollback]:677) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@70c53dbe]
 DEBUG [2015-06-07 11:39:35,794] (JDBCTransaction.java[rollback]:182) - rollback
 DEBUG [2015-06-07 11:39:35,794] (JDBCTransaction.java[toggleAutoCommit]:223) - re-enabling autocommit
 DEBUG [2015-06-07 11:39:35,794] (JDBCTransaction.java[rollback]:193) - rolled back JDBC Connection
 DEBUG [2015-06-07 11:39:35,794] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:39:35,794] (HibernateTransactionManager.java[doCleanupAfterCompletion]:740) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@70c53dbe] after transaction
 DEBUG [2015-06-07 11:39:35,794] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:39:35,794] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:39:35,794] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
  INFO [2015-06-07 11:39:35,794] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@760245e1, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:35,794] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@760245e1, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:39:35,794] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:35,794] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:35,809] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@350d3f4d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:39:35,809] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:35,809] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:39:35,809] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:39:35,809] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:39:35,809] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:39:35,809] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.deleteTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:39:35,809] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@350d3f4d, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:35,809] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:35,809] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:39:35,809] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:39:35,809] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:39:35,809] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [deleteTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:39:35,809] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:39:35,809] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:39:35,809] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@350d3f4d, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:39:35,809] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (3) for test context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@350d3f4d, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@47fbc56]; rollback [true]
 DEBUG [2015-06-07 11:39:35,809] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:35,809] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:39:35,809] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:39:35,809] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@748d2277]
 DEBUG [2015-06-07 11:39:35,809] (Slf4jImpl.java[debug]:28) - ==>  Executing: delete from types where 1=1 
 DEBUG [2015-06-07 11:39:35,809] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:39:35,809] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@748d2277]
 DEBUG [2015-06-07 11:39:35,809] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@350d3f4d, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:39:35,809] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:39:35,809] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:39:35,809] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@748d2277]
 DEBUG [2015-06-07 11:39:35,809] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:39:35,809] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:39:35,809] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@350d3f4d, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:39:35,809] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = com.spring.SpringTest@350d3f4d, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:39:35,809] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@143640d5 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@475e586c testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:39:35,825] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@4c15e7fd: startup date [Sun Jun 07 11:39:33 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:39:35,825] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:39:35,825] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:39:35,825] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:39:35,825] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2421cc4: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:39:35,825] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'hibernateDao': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:39:35,825] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:39:35,825] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:39:35,825] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:39:35,841] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 11:39:35,841] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:40:09,032] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:40:09,095] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@38364841 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:40:09,095] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:09,095] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:40:09,110] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:40:09,126] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:09,126] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:09,126] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:09,126] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:09,142] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:09,142] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:09,142] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:09,142] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:09,142] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:09,142] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:09,142] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:09,142] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:09,157] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:40:09,157] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:40:09,157] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:40:09,354] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:40:09,354] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:40:09,354] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:40:09,354] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:40:09,401] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:40:09,434] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:40:09,496] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:40:09,512] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:40:09,512] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:40:09,590] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:40:09,606] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:40:09,637] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:40:09,653] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:40:09,668] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:40:09,731] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:40:09,731] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:09,731] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:09,731] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:09,731] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:40:09,731] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:09,731] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:09,731] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:09,731] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:09,746] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:09,746] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:09,746] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:09,746] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:09,746] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:09,746] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:09,746] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:09,746] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:09,746] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:40:09,792] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:40:09,854] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:40:09,854] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:40:09,854] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:40:09,854] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:40:10,120] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao': replacing [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:40:10,120] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao2': replacing [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:40:10,120] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:40:10,120] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:40:10,135] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@2805c96b: startup date [Sun Jun 07 11:40:10 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:40:10,135] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@2805c96b: org.springframework.beans.factory.support.DefaultListableBeanFactory@54504ecd: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao]; root of factory hierarchy
 DEBUG [2015-06-07 11:40:10,182] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,182] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,214] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,229] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,292] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,292] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,292] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,292] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,292] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,292] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,292] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,292] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,292] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,292] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,292] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,292] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,292] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,292] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,307] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,307] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,307] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:40:10,307] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:40:10,307] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,307] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:40:10,307] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:40:10,307] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:40:10,307] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,307] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:40:10,307] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@b1712f3]
 DEBUG [2015-06-07 11:40:10,323] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2826f61]
 DEBUG [2015-06-07 11:40:10,323] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@54504ecd: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:40:10,323] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:40:10,323] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:40:10,339] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:40:10,354] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:40:10,354] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:40:10,354] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,370] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:40:10,370] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:40:10,370] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:40:10,401] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:10,401] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:10,417] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:40:10,417] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,432] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:40:10,432] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:40:10,589] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,620] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:40:10,620] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:10,807] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:40:10,807] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:40:10,807] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:10,823] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,839] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:40:10,839] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:40:10,854] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:10,854] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:10,854] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:10,854] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,854] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:40:10,854] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:40:10,854] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,854] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:40:10,854] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:10,885] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:40:10,885] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:40:10,885] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:10,885] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:10,885] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:40:10,885] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:40:10,885] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:40:10,885] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:40:10,885] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:10,885] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,885] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:40:10,885] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:40:10,885] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:40:10,885] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:40:10,885] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:40:10,885] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:40:10,885] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:40:10,885] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:40:10,885] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:40:10,885] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,901] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:40:10,901] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:40:10,901] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:40:10,901] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:10,901] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:10,901] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:10,901] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:40:10,901] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:40:10,901] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:40:10,901] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:40:10,901] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:40:10,901] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:40:10,901] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:40:10,901] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:40:10,901] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:40:10,901] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,901] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:40:10,901] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:40:10,901] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:40:10,901] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:40:10,901] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:40:10,917] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:40:10,917] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,917] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:40:10,917] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:40:10,917] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:40:10,917] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,932] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:40:10,932] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:40:10,932] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:40:10,932] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:40:10,932] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:40:10,932] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,932] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:40:10,932] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:40:10,932] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:40:10,932] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:40:10,932] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:40:10,932] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:40:10,932] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,932] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,932] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,932] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,932] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:40:10,932] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:40:10,932] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:40:10,932] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:40:10,948] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:40:10,948] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:40:10,948] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:40:10,949] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:10,965] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:40:10,965] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:40:11,011] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@1f130eaf
 DEBUG [2015-06-07 11:40:11,011] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@1f130eaf
 DEBUG [2015-06-07 11:40:11,011] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f130eaf
 DEBUG [2015-06-07 11:40:11,011] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@655a5d9c
 DEBUG [2015-06-07 11:40:11,011] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7d61eccf
 DEBUG [2015-06-07 11:40:11,011] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@1a6f2363
 DEBUG [2015-06-07 11:40:11,027] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4fbdc0f0
 DEBUG [2015-06-07 11:40:11,027] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4fbdc0f0
 DEBUG [2015-06-07 11:40:11,027] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4fbdc0f0
 DEBUG [2015-06-07 11:40:11,027] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@aec50a1
 DEBUG [2015-06-07 11:40:11,027] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@aec50a1
 DEBUG [2015-06-07 11:40:11,027] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@aec50a1
 DEBUG [2015-06-07 11:40:11,027] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@5a4bef8
 DEBUG [2015-06-07 11:40:11,027] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@5a4bef8
 DEBUG [2015-06-07 11:40:11,027] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a4bef8
 DEBUG [2015-06-07 11:40:11,027] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@384fc774
 DEBUG [2015-06-07 11:40:11,027] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@384fc774
 DEBUG [2015-06-07 11:40:11,027] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@384fc774
 DEBUG [2015-06-07 11:40:11,027] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@726386ed
 DEBUG [2015-06-07 11:40:11,027] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@726386ed
 DEBUG [2015-06-07 11:40:11,027] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@726386ed
 DEBUG [2015-06-07 11:40:11,043] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@c1fca1e
 DEBUG [2015-06-07 11:40:11,043] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@c1fca1e
 DEBUG [2015-06-07 11:40:11,043] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c1fca1e
 DEBUG [2015-06-07 11:40:11,043] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@48e64352
 DEBUG [2015-06-07 11:40:11,043] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@48e64352
 DEBUG [2015-06-07 11:40:11,043] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@48e64352
 DEBUG [2015-06-07 11:40:11,043] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7544a1e4
 DEBUG [2015-06-07 11:40:11,043] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7544a1e4
 DEBUG [2015-06-07 11:40:11,043] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5be82d43
 DEBUG [2015-06-07 11:40:11,043] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5be82d43
 DEBUG [2015-06-07 11:40:11,043] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@77b7ffa4
 DEBUG [2015-06-07 11:40:11,043] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@77b7ffa4
 DEBUG [2015-06-07 11:40:11,058] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@425357dd
 DEBUG [2015-06-07 11:40:11,058] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@425357dd
 DEBUG [2015-06-07 11:40:11,058] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@372b0d86
 DEBUG [2015-06-07 11:40:11,058] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@372b0d86
 DEBUG [2015-06-07 11:40:11,058] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@54ec8cc9
 DEBUG [2015-06-07 11:40:11,058] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@54ec8cc9
 DEBUG [2015-06-07 11:40:11,058] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@32f61a31
 DEBUG [2015-06-07 11:40:11,058] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@32f61a31
 DEBUG [2015-06-07 11:40:11,058] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@32f61a31
 DEBUG [2015-06-07 11:40:11,058] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5305c37d
 DEBUG [2015-06-07 11:40:11,058] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@4d9d1b69
 DEBUG [2015-06-07 11:40:11,058] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4d9d1b69
 DEBUG [2015-06-07 11:40:11,058] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4d9d1b69
 DEBUG [2015-06-07 11:40:11,074] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@52d10fb8
 DEBUG [2015-06-07 11:40:11,074] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@324dcd31
 DEBUG [2015-06-07 11:40:11,074] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@324dcd31
 DEBUG [2015-06-07 11:40:11,074] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@ecf9fb3
 DEBUG [2015-06-07 11:40:11,074] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@ecf9fb3
 DEBUG [2015-06-07 11:40:11,074] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@22db8f4
 DEBUG [2015-06-07 11:40:11,074] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@22db8f4
 DEBUG [2015-06-07 11:40:11,074] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@2f40a43
 DEBUG [2015-06-07 11:40:11,074] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f40a43
 DEBUG [2015-06-07 11:40:11,074] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4cc61eb1
 DEBUG [2015-06-07 11:40:11,074] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4cc61eb1
 DEBUG [2015-06-07 11:40:11,090] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c074c0c
 DEBUG [2015-06-07 11:40:11,090] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2d0566ba
 DEBUG [2015-06-07 11:40:11,090] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@2c444798
 DEBUG [2015-06-07 11:40:11,090] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@2c444798
 DEBUG [2015-06-07 11:40:11,090] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@2c444798
 DEBUG [2015-06-07 11:40:11,090] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3228d990
 DEBUG [2015-06-07 11:40:11,090] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3228d990
 DEBUG [2015-06-07 11:40:11,090] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3228d990
 DEBUG [2015-06-07 11:40:11,090] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@40e4ea87
 DEBUG [2015-06-07 11:40:11,090] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@88d6f9b
 DEBUG [2015-06-07 11:40:11,090] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@88d6f9b
 DEBUG [2015-06-07 11:40:11,090] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@88d6f9b
 DEBUG [2015-06-07 11:40:11,090] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2fa7ae9
 DEBUG [2015-06-07 11:40:11,090] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2fa7ae9
 DEBUG [2015-06-07 11:40:11,090] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2fa7ae9
 DEBUG [2015-06-07 11:40:11,105] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@10b3df93
 DEBUG [2015-06-07 11:40:11,105] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@1e392345
 DEBUG [2015-06-07 11:40:11,105] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1e392345
 DEBUG [2015-06-07 11:40:11,105] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7bd69e82
 DEBUG [2015-06-07 11:40:11,105] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@42deb43a
 DEBUG [2015-06-07 11:40:11,105] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42deb43a
 DEBUG [2015-06-07 11:40:11,105] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2b27cc70
 DEBUG [2015-06-07 11:40:11,105] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@7674a051
 DEBUG [2015-06-07 11:40:11,121] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@27a0a5a2
 DEBUG [2015-06-07 11:40:11,121] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@27a0a5a2
 DEBUG [2015-06-07 11:40:11,121] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@106faf11
 DEBUG [2015-06-07 11:40:11,121] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@70f43b45
 DEBUG [2015-06-07 11:40:11,121] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26d10f2e
 DEBUG [2015-06-07 11:40:11,121] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@10ad20cb
 DEBUG [2015-06-07 11:40:11,121] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7dd712e8
 DEBUG [2015-06-07 11:40:11,121] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2c282004
 DEBUG [2015-06-07 11:40:11,121] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@22ee2d0
 DEBUG [2015-06-07 11:40:11,121] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7bfc3126
  INFO [2015-06-07 11:40:11,139] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:40:11,155] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:40:11,155] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:40:11,155] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:40:11,155] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:40:11,218] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:40:11,218] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:40:11,218] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:40:11,218] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:40:11,218] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:40:11,218] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:40:11,218] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:40:11,218] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:40:11,233] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:40:11,233] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:40:11,233] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:40:11,233] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:40:11,233] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:40:11,233] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:40:11,233] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:40:11,280] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:40:11,280] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:40:11,280] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:40:11,311] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:40:11,311] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:40:11,327] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:40:11,327] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:40:11,358] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:40:11,358] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:40:11,374] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:40:11,374] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:40:11,374] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:40:11,374] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:40:11,374] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:40:11,374] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:40:11,374] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:40:11,374] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:40:11,374] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:40:11,374] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:40:11,391] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:40:11,391] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:40:11,391] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:40:11,391] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:40:11,391] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:40:11,391] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:40:11,391] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:40:11,391] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:40:11,391] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:40:11,391] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:40:11,391] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:40:11,391] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:40:11,391] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:40:11,407] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:40:11,407] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:40:11,407] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:40:11,777] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:40:11,777] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:40:11,886] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:40:11,918] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:40:11,918] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:40:11,918] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:40:11,918] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:40:11,918] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:40:11,918] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:40:11,918] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:40:11,918] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:40:11,918] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:40:11,918] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:40:11,918] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:40:11,918] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:40:11,918] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:40:11,918] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:40:11,918] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:40:11,918] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:40:11,918] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:40:11,918] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:40:11,933] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:40:11,933] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:40:11,933] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:40:11,933] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:40:11,933] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:40:11,933] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:40:11,933] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:40:11,933] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:40:11,933] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:40:11,933] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:40:11,933] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:40:11,933] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:40:11,965] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:40:11,965] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:40:11,965] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:40:11,965] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14376 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:40:11,981] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:40:12,137] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:40:12,137] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:40:12,137] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:40:12,137] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:40:12,137] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:40:12,137] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:40:12,153] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:40:12,153] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:40:12,153] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:40:12,153] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:40:12,153] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:40:12,153] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:40:12,153] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:40:12,153] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:40:12,153] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:40:12,153] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:40:12,169] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:40:12,169] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:40:12,200] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:40:12,200] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: 932b27a5-1d77-41e5-948e-41d16be4153c (unnamed)
  INFO [2015-06-07 11:40:12,200] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:40:12,200] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:40:12,200] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:40:12,200] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:40:12,200] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:40:12,200] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:40:12,200] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:40:12,215] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:40:12,215] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:40:12,215] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:40:12,215] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:40:12,215] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:40:12,215] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:40:12,231] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:40:12,231] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:40:12,231] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:40:12,231] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:40:12,231] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:40:12,231] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:40:12,231] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:40:12,231] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:40:12,247] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:12,278] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:40:12,278] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:40:12,278] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:40:12,278] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:40:12,278] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:40:12,278] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:12,294] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:40:12,294] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:40:12,309] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@5496c165] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:40:12,309] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:40:12,309] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:40:12,309] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:40:12,309] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:12,309] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:40:12,309] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:40:12,309] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:40:12,309] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:40:12,309] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:40:12,309] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:12,309] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:40:12,309] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:40:12,309] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:40:12,309] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:12,309] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:40:12,309] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:12,309] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:40:12,309] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:40:12,309] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:40:12,309] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:40:12,309] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:12,309] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:40:12,309] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:40:12,309] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:40:12,309] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:40:12,309] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:40:12,325] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@2009f9b0]
 DEBUG [2015-06-07 11:40:12,325] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:40:12,325] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:12,325] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:12,325] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:40:12,325] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:40:12,325] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:40:12,325] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:40:12,340] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:40:12,340] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:40:12,340] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:40:12,340] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:40:12,340] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:40:12,340] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:40:12,340] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.mybatisTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:40:12,340] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:40:12,340] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:40:12,340] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:40:12,340] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:40:12,340] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:40:12,356] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [mybatisTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:40:12,372] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:40:12,372] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:40:12,372] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:40:12,372] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@2de50ee4 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:40:12,387] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:40:12,387] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@10895b16]; rollback [true]
 DEBUG [2015-06-07 11:40:12,387] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-07 11:40:12,419] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336448123
 DEBUG [2015-06-07 11:40:12,419] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-07 11:40:12,419] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:40:12,434] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 31, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:40:12,434] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:40:12,434] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:40:12,450] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:40:12,450] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:40:12,450] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ae9d1e2]
 DEBUG [2015-06-07 11:40:12,575] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:40:12,575] (Slf4jImpl.java[debug]:28) - ==> Parameters: 99(Integer)
 DEBUG [2015-06-07 11:40:12,575] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ae9d1e2]
 DEBUG [2015-06-07 11:40:12,575] (Slf4jImpl.java[debug]:28) - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ae9d1e2] from current transaction
 DEBUG [2015-06-07 11:40:12,575] (Slf4jImpl.java[debug]:28) - ==>  Executing: select * from types; 
 DEBUG [2015-06-07 11:40:12,575] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:40:12,606] (Slf4jImpl.java[debug]:28) - <==    Columns: typeId
 DEBUG [2015-06-07 11:40:12,606] (Slf4jImpl.java[debug]:28) - <==        Row: 19
 DEBUG [2015-06-07 11:40:12,606] (Slf4jImpl.java[debug]:28) - <==        Row: 73
 DEBUG [2015-06-07 11:40:12,606] (Slf4jImpl.java[debug]:28) - <==        Row: 96
 DEBUG [2015-06-07 11:40:12,606] (Slf4jImpl.java[debug]:28) - <==        Row: 99
 DEBUG [2015-06-07 11:40:12,606] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ae9d1e2]
 DEBUG [2015-06-07 11:40:12,606] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:40:12,606] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:40:12,606] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:40:12,606] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:40:12,622] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ae9d1e2]
 DEBUG [2015-06-07 11:40:12,622] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:40:12,622] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:40:12,622] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:40:12,622] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:40:12,622] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:40:12,637] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@2805c96b: startup date [Sun Jun 07 11:40:10 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:40:12,637] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:12,637] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:12,637] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:40:12,637] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@54504ecd: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:40:12,637] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'hibernateDao': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:12,653] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:40:12,653] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:40:12,653] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:40:12,653] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 11:40:12,653] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:40:33,176] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:40:33,254] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@38364841 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:40:33,254] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:33,254] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:40:33,254] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:40:33,298] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:33,299] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:33,300] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:33,301] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:33,310] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:33,310] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:33,313] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:33,313] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:33,314] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:33,314] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:33,324] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@5762806e testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@17c386de testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
 DEBUG [2015-06-07 11:40:37,011] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:40:37,089] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@38364841 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:40:37,089] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:37,105] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:40:37,105] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:40:37,120] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:37,120] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:37,136] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:37,136] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:37,136] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:37,136] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:37,136] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:37,136] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:37,136] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:37,136] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:37,151] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:37,151] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:37,151] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:40:37,151] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:40:37,151] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:40:37,419] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:40:37,419] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:40:37,419] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:40:37,419] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:40:37,482] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:40:37,514] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:40:37,545] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:40:37,561] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:40:37,561] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:40:37,608] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:40:37,623] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:40:37,639] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:40:37,654] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:40:37,670] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:40:37,733] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:40:37,733] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:37,733] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:37,733] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:37,748] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:40:37,748] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:37,748] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:37,748] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:37,748] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:37,748] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:37,748] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:37,748] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:37,748] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:37,748] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:37,748] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:37,748] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:37,748] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:40:37,764] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:40:37,795] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:40:37,842] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:40:37,858] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:40:37,858] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:40:37,858] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:40:38,094] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao': replacing [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:40:38,094] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao2': replacing [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:40:38,094] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:40:38,094] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:40:38,109] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@5db250b4: startup date [Sun Jun 07 11:40:38 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:40:38,109] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@5db250b4: org.springframework.beans.factory.support.DefaultListableBeanFactory@49c66ade: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao]; root of factory hierarchy
 DEBUG [2015-06-07 11:40:38,172] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,172] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,203] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,203] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,281] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,281] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,281] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,281] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,281] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,281] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,281] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,281] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,281] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,281] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,301] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,301] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,302] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,302] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,305] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,306] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,306] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:40:38,306] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:40:38,307] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,307] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:40:38,307] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:40:38,308] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:40:38,308] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,308] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:40:38,315] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2da59753]
 DEBUG [2015-06-07 11:40:38,319] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@15dcfae7]
 DEBUG [2015-06-07 11:40:38,319] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@49c66ade: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:40:38,319] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:40:38,319] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:40:38,319] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:40:38,350] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:40:38,350] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:40:38,350] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,350] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:40:38,350] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:40:38,366] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:40:38,381] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:38,381] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:38,397] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:40:38,413] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,413] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:40:38,413] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:40:38,553] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,585] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:40:38,585] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:38,756] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:40:38,756] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:40:38,756] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:38,772] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,772] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:40:38,772] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:40:38,803] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:40:38,803] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:40:38,803] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:40:38,803] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:38,803] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:38,803] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,803] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:40:38,803] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:40:38,803] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,803] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:40:38,803] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:38,819] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:40:38,819] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:40:38,819] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:38,819] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,819] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:40:38,835] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:40:38,835] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:40:38,835] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:38,835] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:38,835] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:38,835] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:40:38,835] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:40:38,835] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:40:38,835] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:40:38,835] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:40:38,835] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:40:38,835] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:40:38,835] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,835] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:40:38,835] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:40:38,835] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:40:38,835] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:40:38,835] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:40:38,835] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:40:38,835] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:40:38,835] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:38,835] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:38,835] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:38,835] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:40:38,835] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:40:38,835] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:40:38,835] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:40:38,835] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:40:38,850] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,850] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:40:38,850] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:40:38,850] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:40:38,850] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:40:38,850] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:40:38,850] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:40:38,850] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,850] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:40:38,850] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:40:38,850] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:40:38,850] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,866] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:40:38,866] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:40:38,866] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:40:38,866] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:40:38,866] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:40:38,866] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,866] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:40:38,866] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:40:38,866] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:40:38,881] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:40:38,882] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:40:38,882] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:40:38,882] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,882] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,882] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,882] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,882] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:40:38,882] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:40:38,882] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:40:38,882] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:40:38,882] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:40:38,882] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:40:38,882] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:40:38,882] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:38,898] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:40:38,898] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:40:38,945] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@200a26bc
 DEBUG [2015-06-07 11:40:38,945] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@200a26bc
 DEBUG [2015-06-07 11:40:38,945] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@200a26bc
 DEBUG [2015-06-07 11:40:38,945] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4628b1d3
 DEBUG [2015-06-07 11:40:38,945] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1a6f2363
 DEBUG [2015-06-07 11:40:38,945] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@641856
 DEBUG [2015-06-07 11:40:38,945] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@5400db36
 DEBUG [2015-06-07 11:40:38,961] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@5400db36
 DEBUG [2015-06-07 11:40:38,961] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5400db36
 DEBUG [2015-06-07 11:40:38,961] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@702ed190
 DEBUG [2015-06-07 11:40:38,961] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@702ed190
 DEBUG [2015-06-07 11:40:38,961] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@702ed190
 DEBUG [2015-06-07 11:40:38,961] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@5d8445d7
 DEBUG [2015-06-07 11:40:38,961] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@5d8445d7
 DEBUG [2015-06-07 11:40:38,961] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5d8445d7
 DEBUG [2015-06-07 11:40:38,961] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@29ad44e3
 DEBUG [2015-06-07 11:40:38,961] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@29ad44e3
 DEBUG [2015-06-07 11:40:38,961] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29ad44e3
 DEBUG [2015-06-07 11:40:38,976] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@1a15b789
 DEBUG [2015-06-07 11:40:38,976] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@1a15b789
 DEBUG [2015-06-07 11:40:38,976] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a15b789
 DEBUG [2015-06-07 11:40:38,976] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@615f972
 DEBUG [2015-06-07 11:40:38,976] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@615f972
 DEBUG [2015-06-07 11:40:38,976] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@615f972
 DEBUG [2015-06-07 11:40:38,976] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@200606de
 DEBUG [2015-06-07 11:40:38,976] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@200606de
 DEBUG [2015-06-07 11:40:38,976] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@200606de
 DEBUG [2015-06-07 11:40:38,976] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4fdfa676
 DEBUG [2015-06-07 11:40:38,976] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4fdfa676
 DEBUG [2015-06-07 11:40:38,976] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@473b3b7a
 DEBUG [2015-06-07 11:40:38,976] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@473b3b7a
 DEBUG [2015-06-07 11:40:38,976] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@41382722
 DEBUG [2015-06-07 11:40:38,976] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@41382722
 DEBUG [2015-06-07 11:40:38,992] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@51684e4a
 DEBUG [2015-06-07 11:40:38,992] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@51684e4a
 DEBUG [2015-06-07 11:40:38,992] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@2a7b6f69
 DEBUG [2015-06-07 11:40:38,992] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a7b6f69
 DEBUG [2015-06-07 11:40:38,992] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@1edb61b1
 DEBUG [2015-06-07 11:40:38,992] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1edb61b1
 DEBUG [2015-06-07 11:40:38,992] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@3dddbe65
 DEBUG [2015-06-07 11:40:38,992] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3dddbe65
 DEBUG [2015-06-07 11:40:38,992] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3dddbe65
 DEBUG [2015-06-07 11:40:38,992] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@66d23e4a
 DEBUG [2015-06-07 11:40:39,007] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@41c07648
 DEBUG [2015-06-07 11:40:39,007] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41c07648
 DEBUG [2015-06-07 11:40:39,007] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41c07648
 DEBUG [2015-06-07 11:40:39,007] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60d84f61
 DEBUG [2015-06-07 11:40:39,007] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@2575f671
 DEBUG [2015-06-07 11:40:39,007] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2575f671
 DEBUG [2015-06-07 11:40:39,007] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@30c0ccff
 DEBUG [2015-06-07 11:40:39,007] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@30c0ccff
 DEBUG [2015-06-07 11:40:39,007] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5851bd4f
 DEBUG [2015-06-07 11:40:39,007] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5851bd4f
 DEBUG [2015-06-07 11:40:39,007] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@547e29a4
 DEBUG [2015-06-07 11:40:39,007] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@547e29a4
 DEBUG [2015-06-07 11:40:39,007] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@58a55449
 DEBUG [2015-06-07 11:40:39,007] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@58a55449
 DEBUG [2015-06-07 11:40:39,023] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2a2bb0eb
 DEBUG [2015-06-07 11:40:39,023] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1cfd1875
 DEBUG [2015-06-07 11:40:39,023] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@68ed96ca
 DEBUG [2015-06-07 11:40:39,023] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@68ed96ca
 DEBUG [2015-06-07 11:40:39,023] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@68ed96ca
 DEBUG [2015-06-07 11:40:39,023] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c8bdd5b
 DEBUG [2015-06-07 11:40:39,023] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c8bdd5b
 DEBUG [2015-06-07 11:40:39,023] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c8bdd5b
 DEBUG [2015-06-07 11:40:39,023] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@7bdf6bb7
 DEBUG [2015-06-07 11:40:39,023] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@182b435b
 DEBUG [2015-06-07 11:40:39,023] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@182b435b
 DEBUG [2015-06-07 11:40:39,023] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@182b435b
 DEBUG [2015-06-07 11:40:39,023] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@28a2a3e7
 DEBUG [2015-06-07 11:40:39,023] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@28a2a3e7
 DEBUG [2015-06-07 11:40:39,023] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@28a2a3e7
 DEBUG [2015-06-07 11:40:39,023] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@1dfd5f51
 DEBUG [2015-06-07 11:40:39,039] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@74d7184a
 DEBUG [2015-06-07 11:40:39,039] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@74d7184a
 DEBUG [2015-06-07 11:40:39,039] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b85300e
 DEBUG [2015-06-07 11:40:39,039] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@6f6a7463
 DEBUG [2015-06-07 11:40:39,039] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f6a7463
 DEBUG [2015-06-07 11:40:39,039] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@50d68830
 DEBUG [2015-06-07 11:40:39,039] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@a23a01d
 DEBUG [2015-06-07 11:40:39,039] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@70f43b45
 DEBUG [2015-06-07 11:40:39,039] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@70f43b45
 DEBUG [2015-06-07 11:40:39,039] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2c282004
 DEBUG [2015-06-07 11:40:39,039] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@22ee2d0
 DEBUG [2015-06-07 11:40:39,039] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7bfc3126
 DEBUG [2015-06-07 11:40:39,039] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e792ce3
 DEBUG [2015-06-07 11:40:39,039] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53bc1328
 DEBUG [2015-06-07 11:40:39,039] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26f143ed
 DEBUG [2015-06-07 11:40:39,039] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3c1e3314
 DEBUG [2015-06-07 11:40:39,039] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b770e40
  INFO [2015-06-07 11:40:39,070] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:40:39,070] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:40:39,086] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:40:39,086] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:40:39,086] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:40:39,148] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:40:39,148] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:40:39,148] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:40:39,148] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:40:39,148] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:40:39,164] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:40:39,164] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:40:39,164] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:40:39,164] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:40:39,164] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:40:39,164] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:40:39,164] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:40:39,164] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:40:39,164] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:40:39,164] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:40:39,211] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:40:39,211] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:40:39,226] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:40:39,257] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:40:39,257] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:40:39,273] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:40:39,273] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:40:39,320] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:40:39,320] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:40:39,320] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:40:39,320] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:40:39,336] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:40:39,336] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:40:39,336] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:40:39,336] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:40:39,336] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:40:39,336] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:40:39,336] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:40:39,336] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:40:39,351] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:40:39,351] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:40:39,351] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:40:39,351] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:40:39,351] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:40:39,351] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:40:39,351] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:40:39,351] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:40:39,351] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:40:39,351] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:40:39,351] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:40:39,351] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:40:39,351] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:40:39,351] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:40:39,351] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:40:39,367] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:40:39,711] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:40:39,711] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:40:39,820] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:40:39,851] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:40:39,851] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:40:39,851] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:40:39,851] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:40:39,851] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:40:39,851] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:40:39,851] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:40:39,851] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:40:39,851] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:40:39,851] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:40:39,851] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:40:39,851] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:40:39,851] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:40:39,851] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:40:39,851] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:40:39,851] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:40:39,867] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:40:39,867] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:40:39,867] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:40:39,867] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:40:39,867] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:40:39,867] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:40:39,867] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:40:39,867] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:40:39,867] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:40:39,867] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:40:39,867] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:40:39,867] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:40:39,867] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:40:39,867] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:40:39,899] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:40:39,899] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:40:39,899] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:40:39,899] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14394 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:40:39,915] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:40:40,055] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:40:40,055] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:40:40,055] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:40:40,055] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:40:40,055] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:40:40,055] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:40:40,086] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:40:40,086] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:40:40,086] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:40:40,086] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:40:40,086] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:40:40,086] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:40:40,086] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:40:40,086] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:40:40,086] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:40:40,086] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:40:40,102] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:40:40,102] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:40:40,133] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:40:40,133] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: 1c68b284-47b2-49a8-8ce4-8aa0b1e6fc06 (unnamed)
  INFO [2015-06-07 11:40:40,133] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:40:40,133] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:40:40,133] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:40:40,133] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:40:40,133] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:40:40,133] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:40:40,133] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:40:40,133] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:40:40,133] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:40:40,133] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:40:40,133] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:40:40,133] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:40:40,133] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:40:40,164] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:40:40,164] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:40:40,164] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:40:40,164] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:40:40,164] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:40:40,164] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:40:40,164] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:40:40,164] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:40:40,180] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:40,211] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:40:40,211] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:40:40,211] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:40:40,211] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:40:40,211] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:40:40,227] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:40,227] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:40:40,227] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:40:40,242] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@43da41e] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:40:40,242] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:40:40,242] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:40:40,242] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:40:40,242] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:40,242] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:40:40,242] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:40:40,242] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:40:40,242] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:40:40,242] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:40:40,242] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:40,242] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:40:40,242] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:40:40,242] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:40:40,242] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:40,258] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:40:40,258] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:40,258] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:40:40,258] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:40:40,258] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:40:40,258] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:40:40,258] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:40:40,258] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:40:40,258] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:40:40,258] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:40:40,258] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:40:40,258] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:40:40,258] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@211febf3]
 DEBUG [2015-06-07 11:40:40,258] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:40:40,273] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:40,273] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:40,273] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:40:40,273] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:40:40,273] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:40:40,273] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:40:40,273] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:40:40,273] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:40:40,273] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:40:40,273] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:40:40,273] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:40:40,273] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:40:40,289] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:40:40,289] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'] found for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:40:40,289] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:40:40,289] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:40:40,289] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:40:40,289] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:40:40,305] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:40:40,336] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336448403
 DEBUG [2015-06-07 11:40:40,336] (HibernateTransactionManager.java[doBegin]:498) - Opened new Session [org.hibernate.impl.SessionImpl@3baf6936] for Hibernate transaction
 DEBUG [2015-06-07 11:40:40,336] (HibernateTransactionManager.java[doBegin]:509) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3baf6936]
 DEBUG [2015-06-07 11:40:40,352] (JDBCTransaction.java[begin]:78) - begin
 DEBUG [2015-06-07 11:40:40,352] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:40:40,352] (JDBCTransaction.java[begin]:83) - current autocommit status: true
 DEBUG [2015-06-07 11:40:40,352] (JDBCTransaction.java[begin]:86) - disabling autocommit
 DEBUG [2015-06-07 11:40:40,352] (HibernateTransactionManager.java[doBegin]:574) - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:40:40,352] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:40:40,352] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@671facee transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:40:40,352] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:40:40,352] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@20e3c449]; rollback [true]
 DEBUG [2015-06-07 11:40:40,352] (DataSourceUtils.java[doGetConnection]:110) - Fetching JDBC Connection from DataSource
 DEBUG [2015-06-07 11:40:40,383] (DataSourceUtils.java[doGetConnection]:114) - Registering transaction synchronization for JDBC Connection
 DEBUG [2015-06-07 11:40:40,383] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:40:40,383] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:40:40,398] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:40:40,398] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8ea697]
 DEBUG [2015-06-07 11:40:40,492] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:40:40,492] (Slf4jImpl.java[debug]:28) - ==> Parameters: 81(Integer)
 DEBUG [2015-06-07 11:40:40,492] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8ea697]
 DEBUG [2015-06-07 11:40:40,492] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:40:40,508] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 93, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:40:40,508] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:40:40,508] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336448405
 DEBUG [2015-06-07 11:40:40,555] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:40:40,570] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 11:40:40,570] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:40:40,602] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 11:40:40,617] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 11:40:40,617] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 11:40:40,617] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 11:40:40,617] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 11:40:40,633] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 11:40:40,633] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 11:40:40,633] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 11:40:40,633] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:40:40,649] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:40:40,649] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 11:40:40,649] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:40:40,649] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 11:40:40,649] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:40:40,664] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 11:40:40,664] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 11:40:40,680] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:40:40,680] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:40:40,680] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:40:40,680] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:40:40,680] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 11:40:40,680] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 11:40:40,680] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:40:40,680] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:40:40,680] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:40:40,680] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:40:40,680] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:40:40,680] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:40:40,680] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:40:40,680] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:40:40,680] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 11:40:40,695] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:40:40,695] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:40:40,695] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:40:40,695] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:40:40,695] (HibernateTransactionManager.java[doRollback]:677) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3baf6936]
 DEBUG [2015-06-07 11:40:40,695] (JDBCTransaction.java[rollback]:182) - rollback
 DEBUG [2015-06-07 11:40:40,695] (JDBCTransaction.java[toggleAutoCommit]:223) - re-enabling autocommit
 DEBUG [2015-06-07 11:40:40,695] (JDBCTransaction.java[rollback]:193) - rolled back JDBC Connection
 DEBUG [2015-06-07 11:40:40,695] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:40:40,695] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8ea697]
 DEBUG [2015-06-07 11:40:40,695] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
 DEBUG [2015-06-07 11:40:40,695] (HibernateTransactionManager.java[doCleanupAfterCompletion]:740) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3baf6936] after transaction
 DEBUG [2015-06-07 11:40:40,695] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:40:40,695] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:40:40,695] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
  INFO [2015-06-07 11:40:40,695] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:40:40,695] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:40:40,695] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:40:40,711] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@5db250b4: startup date [Sun Jun 07 11:40:38 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:40:40,711] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:40:40,711] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:40:40,711] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:40:40,711] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@49c66ade: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:40:40,711] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'hibernateDao': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:40:40,711] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:40:40,711] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:40:40,711] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:40:40,711] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 11:40:40,711] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:41:00,359] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:41:00,437] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@38364841 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:41:00,437] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:00,453] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:41:00,453] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:41:00,468] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:00,468] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:00,468] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:00,468] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:00,484] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:00,484] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:00,484] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:00,484] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:00,484] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:00,484] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:00,484] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:00,484] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:00,499] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:41:00,499] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:41:00,499] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:41:00,765] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:41:00,781] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:41:00,781] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:41:00,781] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:41:00,828] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:41:00,875] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:41:00,954] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:41:00,969] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:41:00,969] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:41:01,032] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:41:01,047] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:41:01,063] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:41:01,079] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:41:01,094] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:41:01,141] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:41:01,157] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:01,157] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:01,157] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:01,157] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:41:01,157] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:01,157] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:01,157] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:01,157] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:01,172] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:01,172] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:01,172] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:01,172] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:01,172] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:01,172] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:01,172] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:01,172] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:01,172] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:41:01,204] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:41:01,266] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:41:01,266] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:41:01,266] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:41:01,266] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:41:01,506] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao': replacing [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:41:01,506] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao2': replacing [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:41:01,506] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:41:01,506] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:41:01,506] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@5db250b4: startup date [Sun Jun 07 11:41:01 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:41:01,506] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@5db250b4: org.springframework.beans.factory.support.DefaultListableBeanFactory@49c66ade: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao]; root of factory hierarchy
 DEBUG [2015-06-07 11:41:01,631] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:41:01,631] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:41:01,678] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:01,678] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:41:01,811] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:01,811] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:01,813] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:01,813] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:01,814] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:01,814] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:01,816] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:01,816] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:01,816] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:41:01,818] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:41:01,827] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:01,827] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:41:01,827] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:41:01,829] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:41:01,833] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:01,833] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:41:01,837] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:41:01,837] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:41:01,840] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:01,841] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:41:01,842] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:41:01,842] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:41:01,842] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:01,843] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:41:01,851] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2da59753]
 DEBUG [2015-06-07 11:41:01,855] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@15dcfae7]
 DEBUG [2015-06-07 11:41:01,865] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@49c66ade: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:41:01,865] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:41:01,866] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:41:01,884] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:41:01,904] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:41:01,904] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:41:01,904] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:01,910] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:41:01,910] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:01,910] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:01,941] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:01,941] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:01,957] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:41:01,972] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:01,989] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:41:01,990] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:41:02,198] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:02,230] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:41:02,230] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:02,448] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:41:02,448] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:41:02,448] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:02,464] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:02,480] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:02,480] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:41:02,495] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:02,495] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:02,495] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:02,511] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:02,511] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:41:02,511] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:41:02,511] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:02,511] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:41:02,511] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:02,542] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:41:02,542] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:41:02,542] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:02,542] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:02,542] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:41:02,542] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:02,542] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:02,542] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:02,542] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:02,542] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:02,542] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:02,542] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:02,542] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:41:02,542] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:41:02,542] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:41:02,542] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:41:02,542] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:41:02,542] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:41:02,542] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:41:02,542] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:02,558] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:41:02,558] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:02,558] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:41:02,558] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:02,558] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:02,558] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:02,558] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:41:02,558] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:02,558] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:02,558] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:02,558] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:41:02,558] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:41:02,558] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:41:02,558] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:41:02,558] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:41:02,558] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:02,573] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:41:02,573] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:41:02,573] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:41:02,573] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:41:02,573] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:41:02,573] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:41:02,573] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:02,573] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:41:02,573] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:41:02,573] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:41:02,573] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:02,589] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:41:02,589] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:41:02,589] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:41:02,589] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:41:02,589] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:41:02,589] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:02,612] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:41:02,612] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:41:02,613] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:41:02,614] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:41:02,614] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:41:02,617] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:41:02,617] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:41:02,617] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:02,617] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:02,617] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:41:02,617] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:41:02,617] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:41:02,617] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:41:02,617] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:41:02,617] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:41:02,617] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:02,617] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:02,617] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:02,648] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:41:02,663] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:02,710] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@200a26bc
 DEBUG [2015-06-07 11:41:02,710] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@200a26bc
 DEBUG [2015-06-07 11:41:02,710] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@200a26bc
 DEBUG [2015-06-07 11:41:02,710] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4628b1d3
 DEBUG [2015-06-07 11:41:02,726] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1a6f2363
 DEBUG [2015-06-07 11:41:02,726] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@641856
 DEBUG [2015-06-07 11:41:02,726] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@5400db36
 DEBUG [2015-06-07 11:41:02,726] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@5400db36
 DEBUG [2015-06-07 11:41:02,742] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5400db36
 DEBUG [2015-06-07 11:41:02,742] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@702ed190
 DEBUG [2015-06-07 11:41:02,742] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@702ed190
 DEBUG [2015-06-07 11:41:02,742] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@702ed190
 DEBUG [2015-06-07 11:41:02,742] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@5d8445d7
 DEBUG [2015-06-07 11:41:02,742] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@5d8445d7
 DEBUG [2015-06-07 11:41:02,742] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5d8445d7
 DEBUG [2015-06-07 11:41:02,742] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@29ad44e3
 DEBUG [2015-06-07 11:41:02,742] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@29ad44e3
 DEBUG [2015-06-07 11:41:02,742] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29ad44e3
 DEBUG [2015-06-07 11:41:02,757] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@1a15b789
 DEBUG [2015-06-07 11:41:02,757] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@1a15b789
 DEBUG [2015-06-07 11:41:02,757] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a15b789
 DEBUG [2015-06-07 11:41:02,757] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@615f972
 DEBUG [2015-06-07 11:41:02,757] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@615f972
 DEBUG [2015-06-07 11:41:02,757] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@615f972
 DEBUG [2015-06-07 11:41:02,757] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@200606de
 DEBUG [2015-06-07 11:41:02,757] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@200606de
 DEBUG [2015-06-07 11:41:02,757] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@200606de
 DEBUG [2015-06-07 11:41:02,757] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4fdfa676
 DEBUG [2015-06-07 11:41:02,757] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4fdfa676
 DEBUG [2015-06-07 11:41:02,773] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@473b3b7a
 DEBUG [2015-06-07 11:41:02,773] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@473b3b7a
 DEBUG [2015-06-07 11:41:02,773] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@41382722
 DEBUG [2015-06-07 11:41:02,773] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@41382722
 DEBUG [2015-06-07 11:41:02,773] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@51684e4a
 DEBUG [2015-06-07 11:41:02,773] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@51684e4a
 DEBUG [2015-06-07 11:41:02,773] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@2a7b6f69
 DEBUG [2015-06-07 11:41:02,773] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a7b6f69
 DEBUG [2015-06-07 11:41:02,788] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@1edb61b1
 DEBUG [2015-06-07 11:41:02,788] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1edb61b1
 DEBUG [2015-06-07 11:41:02,788] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@3dddbe65
 DEBUG [2015-06-07 11:41:02,788] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3dddbe65
 DEBUG [2015-06-07 11:41:02,788] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3dddbe65
 DEBUG [2015-06-07 11:41:02,788] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@66d23e4a
 DEBUG [2015-06-07 11:41:02,788] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@41c07648
 DEBUG [2015-06-07 11:41:02,788] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41c07648
 DEBUG [2015-06-07 11:41:02,788] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41c07648
 DEBUG [2015-06-07 11:41:02,788] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60d84f61
 DEBUG [2015-06-07 11:41:02,788] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@2575f671
 DEBUG [2015-06-07 11:41:02,804] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2575f671
 DEBUG [2015-06-07 11:41:02,804] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@30c0ccff
 DEBUG [2015-06-07 11:41:02,804] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@30c0ccff
 DEBUG [2015-06-07 11:41:02,804] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5851bd4f
 DEBUG [2015-06-07 11:41:02,804] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5851bd4f
 DEBUG [2015-06-07 11:41:02,804] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@547e29a4
 DEBUG [2015-06-07 11:41:02,804] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@547e29a4
 DEBUG [2015-06-07 11:41:02,804] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@58a55449
 DEBUG [2015-06-07 11:41:02,804] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@58a55449
 DEBUG [2015-06-07 11:41:02,820] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2a2bb0eb
 DEBUG [2015-06-07 11:41:02,820] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1cfd1875
 DEBUG [2015-06-07 11:41:02,820] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@68ed96ca
 DEBUG [2015-06-07 11:41:02,820] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@68ed96ca
 DEBUG [2015-06-07 11:41:02,820] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@68ed96ca
 DEBUG [2015-06-07 11:41:02,820] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c8bdd5b
 DEBUG [2015-06-07 11:41:02,820] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c8bdd5b
 DEBUG [2015-06-07 11:41:02,820] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c8bdd5b
 DEBUG [2015-06-07 11:41:02,820] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@7bdf6bb7
 DEBUG [2015-06-07 11:41:02,835] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@182b435b
 DEBUG [2015-06-07 11:41:02,835] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@182b435b
 DEBUG [2015-06-07 11:41:02,835] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@182b435b
 DEBUG [2015-06-07 11:41:02,835] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@28a2a3e7
 DEBUG [2015-06-07 11:41:02,835] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@28a2a3e7
 DEBUG [2015-06-07 11:41:02,835] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@28a2a3e7
 DEBUG [2015-06-07 11:41:02,835] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@1dfd5f51
 DEBUG [2015-06-07 11:41:02,835] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@74d7184a
 DEBUG [2015-06-07 11:41:02,835] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@74d7184a
 DEBUG [2015-06-07 11:41:02,835] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b85300e
 DEBUG [2015-06-07 11:41:02,851] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@6f6a7463
 DEBUG [2015-06-07 11:41:02,851] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f6a7463
 DEBUG [2015-06-07 11:41:02,851] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@50d68830
 DEBUG [2015-06-07 11:41:02,851] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@a23a01d
 DEBUG [2015-06-07 11:41:02,851] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@70f43b45
 DEBUG [2015-06-07 11:41:02,851] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@70f43b45
 DEBUG [2015-06-07 11:41:02,851] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2c282004
 DEBUG [2015-06-07 11:41:02,851] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@22ee2d0
 DEBUG [2015-06-07 11:41:02,851] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7bfc3126
 DEBUG [2015-06-07 11:41:02,851] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e792ce3
 DEBUG [2015-06-07 11:41:02,851] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53bc1328
 DEBUG [2015-06-07 11:41:02,851] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26f143ed
 DEBUG [2015-06-07 11:41:02,851] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3c1e3314
 DEBUG [2015-06-07 11:41:02,851] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b770e40
  INFO [2015-06-07 11:41:02,882] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:41:02,898] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:41:02,898] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:41:02,898] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:41:02,913] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:41:02,992] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:41:02,992] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:41:02,992] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:41:02,992] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:41:02,992] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:41:03,007] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:41:03,007] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:41:03,007] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:41:03,007] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:41:03,007] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:41:03,007] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:41:03,007] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:41:03,007] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:41:03,007] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:41:03,007] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:41:03,054] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:41:03,054] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:41:03,070] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:41:03,085] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:41:03,101] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:41:03,101] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:41:03,101] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:41:03,148] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:41:03,148] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:41:03,148] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:41:03,148] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:41:03,163] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:41:03,163] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:41:03,163] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:41:03,163] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:41:03,163] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:41:03,163] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:41:03,163] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:41:03,163] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:41:03,179] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:41:03,179] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:41:03,179] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:41:03,179] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:41:03,179] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:41:03,179] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:41:03,179] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:41:03,179] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:41:03,179] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:41:03,179] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:41:03,179] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:41:03,179] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:41:03,179] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:41:03,179] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:41:03,179] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:41:03,195] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:41:03,556] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:41:03,556] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:41:03,698] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:41:03,730] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:41:03,730] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:41:03,730] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:41:03,730] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:41:03,730] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:41:03,730] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:41:03,730] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:41:03,730] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:41:03,730] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:41:03,730] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:41:03,746] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:41:03,746] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:41:03,746] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:41:03,746] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:41:03,746] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:41:03,746] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:41:03,746] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:41:03,746] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:41:03,746] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:41:03,746] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:41:03,746] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:41:03,746] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:41:03,746] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:41:03,746] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:41:03,761] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:41:03,761] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:41:03,761] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:41:03,761] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:41:03,761] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:41:03,761] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:41:03,777] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:41:03,793] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:41:03,793] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:41:03,793] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14413 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:41:03,808] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:41:03,950] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:41:03,950] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:41:03,950] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:41:03,950] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:41:03,950] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:41:03,950] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:41:03,992] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:03,992] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:03,992] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:41:03,992] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:41:03,992] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:41:03,992] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:41:03,992] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:41:03,992] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:41:03,992] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:03,992] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:04,008] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:04,008] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:04,023] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:41:04,039] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: 9cbfb80a-d49b-46d0-8f6d-dd645339f63e (unnamed)
  INFO [2015-06-07 11:41:04,039] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:41:04,039] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:41:04,039] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:41:04,039] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:41:04,039] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:41:04,039] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:41:04,039] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:41:04,039] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:41:04,039] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:41:04,039] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:41:04,039] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:41:04,039] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:41:04,039] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:41:04,070] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:41:04,070] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:41:04,070] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:41:04,070] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:41:04,070] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:41:04,070] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:04,070] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:41:04,070] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:41:04,086] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:04,102] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:04,102] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:41:04,102] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:41:04,102] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:41:04,102] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:41:04,117] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:04,133] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:04,133] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:41:04,133] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@43da41e] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:41:04,133] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:41:04,133] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:41:04,133] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:41:04,148] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:04,148] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:41:04,148] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:41:04,148] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:41:04,148] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:41:04,148] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:41:04,148] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:04,148] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:41:04,148] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:41:04,148] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:41:04,148] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:04,148] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:04,148] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:04,148] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:04,148] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:41:04,148] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:41:04,148] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:41:04,148] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:04,148] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:41:04,148] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:41:04,148] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:41:04,148] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:41:04,148] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:41:04,148] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@211febf3]
 DEBUG [2015-06-07 11:41:04,148] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:41:04,164] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:04,164] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:04,164] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:41:04,164] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:41:04,164] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:41:04,164] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:41:04,164] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:41:04,164] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:41:04,164] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:41:04,164] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:41:04,164] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:41:04,164] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:41:04,180] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager1'
 DEBUG [2015-06-07 11:41:04,180] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager1'] found for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:41:04,180] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:41:04,180] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:41:04,180] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:41:04,180] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:41:04,180] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager1'
 DEBUG [2015-06-07 11:41:04,180] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:41:04,195] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:41:04,195] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:41:04,195] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@33d53216 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:41:04,195] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:41:04,195] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@62d73ead]; rollback [true]
 DEBUG [2015-06-07 11:41:04,195] (DataSourceUtils.java[doGetConnection]:110) - Fetching JDBC Connection from DataSource
 DEBUG [2015-06-07 11:41:04,211] (DataSourceUtils.java[doGetConnection]:114) - Registering transaction synchronization for JDBC Connection
 DEBUG [2015-06-07 11:41:04,227] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:41:04,227] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:41:04,227] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:41:04,227] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 11:41:04,305] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:41:04,305] (Slf4jImpl.java[debug]:28) - ==> Parameters: 5(Integer)
 DEBUG [2015-06-07 11:41:04,320] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 11:41:04,320] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-07 11:41:04,367] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336448643
 DEBUG [2015-06-07 11:41:04,367] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-07 11:41:04,367] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:41:04,383] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 13, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:41:04,398] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:41:04,398] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336448643
 DEBUG [2015-06-07 11:41:04,445] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:41:04,445] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 11:41:04,445] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:41:04,492] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 11:41:04,508] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 11:41:04,508] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 11:41:04,508] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 11:41:04,508] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 11:41:04,508] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 11:41:04,508] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 11:41:04,523] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 11:41:04,523] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:41:04,523] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:41:04,523] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 11:41:04,523] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:41:04,539] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 11:41:04,539] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:41:04,555] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 11:41:04,555] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 11:41:04,555] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:41:04,570] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:41:04,570] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:41:04,570] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:41:04,570] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:41:04,570] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 11:41:04,570] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 11:41:04,570] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:41:04,570] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:41:04,570] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:41:04,570] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:41:04,570] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:41:04,570] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:41:04,570] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:41:04,570] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:41:04,570] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:41:04,570] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:41:04,570] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 11:41:04,570] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:41:04,570] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:41:04,570] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:41:04,570] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:41:04,570] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:41:04,570] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:41:04,570] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 11:41:04,570] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
 DEBUG [2015-06-07 11:41:04,570] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:41:04,570] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:41:04,570] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:41:04,570] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:41:04,586] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:41:04,586] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@5db250b4: startup date [Sun Jun 07 11:41:01 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:41:04,586] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:04,586] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:04,586] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:41:04,586] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@49c66ade: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:41:04,586] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'hibernateDao': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:04,586] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:41:04,586] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:41:04,586] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:41:04,586] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 11:41:04,602] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:41:16,140] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:41:16,203] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@38364841 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:41:16,203] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:16,219] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:41:16,219] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:41:16,234] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:16,234] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:16,251] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:16,251] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:16,257] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:16,257] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:16,259] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:16,259] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:16,261] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:16,261] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:16,261] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:16,261] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:16,261] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:41:16,261] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:41:16,261] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:41:16,487] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:41:16,487] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:41:16,487] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:41:16,487] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:41:16,549] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:41:16,581] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:41:16,644] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:41:16,660] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:41:16,660] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:41:16,722] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:41:16,738] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:41:16,738] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:41:16,753] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:41:16,785] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:41:16,835] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:41:16,835] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:16,835] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:16,851] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:16,851] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:41:16,851] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:16,851] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:16,851] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:16,851] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:16,851] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:16,851] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:16,851] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:16,851] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:16,851] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:16,851] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:16,851] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:16,867] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:16,867] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:41:16,929] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:41:17,007] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:41:17,007] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:41:17,023] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:41:17,023] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:41:17,289] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao': replacing [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:41:17,289] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao2': replacing [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:41:17,289] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:41:17,289] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:41:17,304] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@5db250b4: startup date [Sun Jun 07 11:41:17 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:41:17,304] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@5db250b4: org.springframework.beans.factory.support.DefaultListableBeanFactory@49c66ade: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao]; root of factory hierarchy
 DEBUG [2015-06-07 11:41:17,335] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:41:17,335] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:41:17,367] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:17,367] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:41:17,460] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:17,460] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:17,460] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:17,460] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:17,460] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:17,460] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:17,460] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:17,460] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:17,460] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:41:17,460] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:41:17,460] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:17,460] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:41:17,460] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:41:17,460] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:41:17,476] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:17,476] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:41:17,476] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:41:17,476] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:41:17,476] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:17,476] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:41:17,476] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:41:17,476] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:41:17,476] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:17,476] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:41:17,476] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@4ce7fffa]
 DEBUG [2015-06-07 11:41:17,476] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@7a1a3478]
 DEBUG [2015-06-07 11:41:17,476] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@49c66ade: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:41:17,492] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:41:17,492] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:41:17,507] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:41:17,523] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:41:17,523] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:41:17,541] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:17,557] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:41:17,557] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:17,557] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:17,588] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:17,588] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:17,620] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:41:17,635] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:17,635] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:41:17,635] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:41:17,776] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:17,792] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:41:17,807] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:17,995] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:41:17,995] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:41:17,995] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:18,010] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:18,042] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:18,042] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:41:18,057] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:18,057] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:18,057] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:18,057] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:18,057] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:41:18,057] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:41:18,057] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:18,057] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:41:18,057] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:18,088] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:41:18,088] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:41:18,088] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:18,088] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:18,088] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:41:18,088] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:18,088] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:18,088] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:18,088] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:18,088] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:18,088] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:18,088] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:18,088] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:41:18,088] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:41:18,088] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:41:18,088] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:41:18,088] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:41:18,104] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:41:18,104] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:41:18,104] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:18,104] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:41:18,104] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:18,104] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:41:18,104] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:18,104] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:18,104] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:18,104] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:41:18,104] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:18,104] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:18,104] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:18,104] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:41:18,104] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:41:18,104] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:41:18,104] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:41:18,104] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:41:18,104] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:18,120] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:41:18,120] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:41:18,120] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:41:18,120] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:41:18,120] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:41:18,120] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:41:18,120] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:18,120] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:41:18,120] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:41:18,120] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:41:18,120] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:18,135] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:41:18,135] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:41:18,135] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:41:18,135] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:41:18,135] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:41:18,135] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:18,135] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:41:18,135] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:41:18,135] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:41:18,135] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:41:18,135] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:41:18,152] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:41:18,152] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:41:18,152] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:18,152] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:18,152] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:41:18,152] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:41:18,152] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:41:18,152] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:41:18,152] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:41:18,152] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:41:18,152] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:18,152] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:18,152] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:18,168] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:41:18,168] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:18,214] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
 DEBUG [2015-06-07 11:41:18,214] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
 DEBUG [2015-06-07 11:41:18,214] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52350abb
 DEBUG [2015-06-07 11:41:18,214] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b58ff9e
 DEBUG [2015-06-07 11:41:18,214] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5400db36
 DEBUG [2015-06-07 11:41:18,214] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@5aa0dbf4
 DEBUG [2015-06-07 11:41:18,214] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
 DEBUG [2015-06-07 11:41:18,214] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
 DEBUG [2015-06-07 11:41:18,214] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1051817b
 DEBUG [2015-06-07 11:41:18,214] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@41beb473
 DEBUG [2015-06-07 11:41:18,214] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@41beb473
 DEBUG [2015-06-07 11:41:18,214] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@41beb473
 DEBUG [2015-06-07 11:41:18,230] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@fff25f1
 DEBUG [2015-06-07 11:41:18,230] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@fff25f1
 DEBUG [2015-06-07 11:41:18,230] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@fff25f1
 DEBUG [2015-06-07 11:41:18,230] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@b93aad
 DEBUG [2015-06-07 11:41:18,230] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@b93aad
 DEBUG [2015-06-07 11:41:18,230] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@b93aad
 DEBUG [2015-06-07 11:41:18,230] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@5c77053b
 DEBUG [2015-06-07 11:41:18,230] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@5c77053b
 DEBUG [2015-06-07 11:41:18,230] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c77053b
 DEBUG [2015-06-07 11:41:18,230] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@327120c8
 DEBUG [2015-06-07 11:41:18,230] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@327120c8
 DEBUG [2015-06-07 11:41:18,230] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@327120c8
 DEBUG [2015-06-07 11:41:18,230] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@41200e0c
 DEBUG [2015-06-07 11:41:18,230] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@41200e0c
 DEBUG [2015-06-07 11:41:18,230] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@41200e0c
 DEBUG [2015-06-07 11:41:18,230] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7a0e1b5e
 DEBUG [2015-06-07 11:41:18,246] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7a0e1b5e
 DEBUG [2015-06-07 11:41:18,246] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5a4bef8
 DEBUG [2015-06-07 11:41:18,246] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5a4bef8
 DEBUG [2015-06-07 11:41:18,246] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@384fc774
 DEBUG [2015-06-07 11:41:18,246] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@384fc774
 DEBUG [2015-06-07 11:41:18,246] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@5af9926a
 DEBUG [2015-06-07 11:41:18,246] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5af9926a
 DEBUG [2015-06-07 11:41:18,246] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@499b2a5c
 DEBUG [2015-06-07 11:41:18,246] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@499b2a5c
 DEBUG [2015-06-07 11:41:18,246] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@1827a871
 DEBUG [2015-06-07 11:41:18,246] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1827a871
 DEBUG [2015-06-07 11:41:18,246] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@24f43aa3
 DEBUG [2015-06-07 11:41:18,246] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@24f43aa3
 DEBUG [2015-06-07 11:41:18,246] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@24f43aa3
 DEBUG [2015-06-07 11:41:18,261] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@70e0accd
 DEBUG [2015-06-07 11:41:18,261] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@345e5a17
 DEBUG [2015-06-07 11:41:18,261] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@345e5a17
 DEBUG [2015-06-07 11:41:18,261] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@345e5a17
 DEBUG [2015-06-07 11:41:18,261] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@77b7ffa4
 DEBUG [2015-06-07 11:41:18,261] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@425357dd
 DEBUG [2015-06-07 11:41:18,261] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@425357dd
 DEBUG [2015-06-07 11:41:18,261] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@38875e7d
 DEBUG [2015-06-07 11:41:18,261] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@38875e7d
 DEBUG [2015-06-07 11:41:18,261] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@47747fb9
 DEBUG [2015-06-07 11:41:18,261] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@47747fb9
 DEBUG [2015-06-07 11:41:18,277] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@c41709a
 DEBUG [2015-06-07 11:41:18,277] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c41709a
 DEBUG [2015-06-07 11:41:18,281] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@f5c79a6
 DEBUG [2015-06-07 11:41:18,282] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@f5c79a6
 DEBUG [2015-06-07 11:41:18,283] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3dddbe65
 DEBUG [2015-06-07 11:41:18,284] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@251f7d26
 DEBUG [2015-06-07 11:41:18,284] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@39c11e6c
 DEBUG [2015-06-07 11:41:18,284] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@39c11e6c
 DEBUG [2015-06-07 11:41:18,284] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@39c11e6c
 DEBUG [2015-06-07 11:41:18,284] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@329a1243
 DEBUG [2015-06-07 11:41:18,284] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@329a1243
 DEBUG [2015-06-07 11:41:18,284] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@329a1243
 DEBUG [2015-06-07 11:41:18,284] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@581d969c
 DEBUG [2015-06-07 11:41:18,284] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@7cd1ac19
 DEBUG [2015-06-07 11:41:18,284] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@7cd1ac19
 DEBUG [2015-06-07 11:41:18,284] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@7cd1ac19
 DEBUG [2015-06-07 11:41:18,284] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1c807b1d
 DEBUG [2015-06-07 11:41:18,284] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1c807b1d
 DEBUG [2015-06-07 11:41:18,284] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1c807b1d
 DEBUG [2015-06-07 11:41:18,284] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@4cc61eb1
 DEBUG [2015-06-07 11:41:18,300] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@7728643a
 DEBUG [2015-06-07 11:41:18,300] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7728643a
 DEBUG [2015-06-07 11:41:18,300] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@28c0b664
 DEBUG [2015-06-07 11:41:18,300] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@3c8bdd5b
 DEBUG [2015-06-07 11:41:18,300] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c8bdd5b
 DEBUG [2015-06-07 11:41:18,300] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a7b503d
 DEBUG [2015-06-07 11:41:18,300] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@751e664e
 DEBUG [2015-06-07 11:41:18,300] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@24855019
 DEBUG [2015-06-07 11:41:18,300] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@24855019
 DEBUG [2015-06-07 11:41:18,315] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6f0628de
 DEBUG [2015-06-07 11:41:18,315] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3fabf088
 DEBUG [2015-06-07 11:41:18,315] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1e392345
 DEBUG [2015-06-07 11:41:18,315] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@12f3afb5
 DEBUG [2015-06-07 11:41:18,315] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4ced35ed
 DEBUG [2015-06-07 11:41:18,315] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2c22a348
 DEBUG [2015-06-07 11:41:18,315] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7bd69e82
 DEBUG [2015-06-07 11:41:18,315] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@74d7184a
  INFO [2015-06-07 11:41:18,331] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:41:18,347] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:41:18,347] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:41:18,347] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:41:18,347] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:41:18,409] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:41:18,409] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:41:18,409] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:41:18,409] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:41:18,409] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:41:18,425] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:41:18,425] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:41:18,425] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:41:18,425] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:41:18,425] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:41:18,425] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:41:18,425] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:41:18,425] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:41:18,425] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:41:18,425] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:41:18,472] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:41:18,472] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:41:18,472] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:41:18,503] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:41:18,503] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:41:18,518] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:41:18,518] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:41:18,550] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:41:18,573] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:41:18,575] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:41:18,575] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:41:18,575] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:41:18,575] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:41:18,575] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:41:18,575] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:41:18,575] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:41:18,575] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:41:18,575] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:41:18,575] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:41:18,591] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:41:18,591] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:41:18,591] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:41:18,591] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:41:18,591] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:41:18,591] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:41:18,591] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:41:18,591] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:41:18,591] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:41:18,591] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:41:18,591] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:41:18,591] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:41:18,591] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:41:18,591] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:41:18,591] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:41:18,609] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:41:18,956] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:41:18,956] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:41:19,050] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:41:19,081] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:41:19,081] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:41:19,081] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:41:19,081] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:41:19,081] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:41:19,081] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:41:19,081] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:41:19,081] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:41:19,081] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:41:19,081] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:41:19,081] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:41:19,081] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:41:19,081] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:41:19,081] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:41:19,081] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:41:19,081] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:41:19,097] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:41:19,097] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:41:19,097] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:41:19,097] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:41:19,097] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:41:19,097] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:41:19,097] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:41:19,097] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:41:19,097] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:41:19,097] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:41:19,097] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:41:19,097] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:41:19,097] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:41:19,097] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:41:19,128] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:41:19,128] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:41:19,144] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:41:19,144] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14433 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:41:19,144] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:41:19,299] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:41:19,299] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:41:19,299] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:41:19,300] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:41:19,300] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:41:19,300] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:41:19,326] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:19,326] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:19,326] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:41:19,326] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:41:19,326] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:41:19,326] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:41:19,326] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:41:19,326] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:41:19,326] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:19,326] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:19,341] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:19,341] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:19,372] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:41:19,372] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: e4f29f56-6320-4022-8e0c-60f0dc2b79a5 (unnamed)
  INFO [2015-06-07 11:41:19,372] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:41:19,372] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:41:19,372] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:41:19,372] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:41:19,372] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:41:19,372] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:41:19,372] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:41:19,372] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:41:19,372] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:41:19,372] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:41:19,372] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:41:19,372] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:41:19,372] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:41:19,405] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:41:19,405] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:41:19,405] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:41:19,405] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:41:19,405] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:41:19,405] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:19,405] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:41:19,405] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:41:19,420] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:19,436] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:19,436] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:41:19,436] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:41:19,436] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:41:19,436] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:41:19,452] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:19,467] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:19,467] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:41:19,467] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@43da41e] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:41:19,467] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:41:19,467] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:41:19,467] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:41:19,467] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:19,483] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:41:19,483] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:41:19,483] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:41:19,483] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:41:19,483] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:41:19,483] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:19,483] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:41:19,483] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:41:19,483] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:41:19,483] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:19,483] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:19,483] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:19,483] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:19,483] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:41:19,483] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:41:19,483] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:41:19,483] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:19,483] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:41:19,483] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:41:19,483] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:41:19,483] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:41:19,483] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:41:19,483] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@211febf3]
 DEBUG [2015-06-07 11:41:19,483] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:41:19,498] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:19,498] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:19,498] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:41:19,498] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:41:19,498] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:41:19,498] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:41:19,498] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:41:19,498] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:41:19,498] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:41:19,498] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:41:19,498] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:41:19,498] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:41:19,514] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:41:19,514] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:41:19,514] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:41:19,514] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:41:19,514] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:41:19,514] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:41:19,514] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:41:19,545] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:41:19,545] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:41:19,545] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:41:19,545] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@10895b16 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:41:19,545] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:41:19,545] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@149c3204]; rollback [true]
 DEBUG [2015-06-07 11:41:19,545] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:41:19,561] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:41:19,561] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:41:19,561] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53a665ad]
 DEBUG [2015-06-07 11:41:19,647] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:41:19,647] (Slf4jImpl.java[debug]:28) - ==> Parameters: 81(Integer)
 DEBUG [2015-06-07 11:41:19,663] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:41:19,663] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:41:19,663] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:41:19,663] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:41:19,663] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
 DEBUG [2015-06-07 11:41:19,678] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:41:19,678] (BeansDtdResolver.java[resolveEntity]:74) - Found beans DTD [http://www.springframework.org/dtd/spring-beans-2.0.dtd] in classpath: spring-beans-2.0.dtd
 DEBUG [2015-06-07 11:41:19,678] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:41:19,694] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'DB2'
 DEBUG [2015-06-07 11:41:19,694] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'DB2'
 DEBUG [2015-06-07 11:41:19,694] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'DB2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:19,710] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'DB2'
 DEBUG [2015-06-07 11:41:19,710] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'Derby'
 DEBUG [2015-06-07 11:41:19,710] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'Derby'
 DEBUG [2015-06-07 11:41:19,710] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'Derby' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'Derby'
 DEBUG [2015-06-07 11:41:19,725] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'H2'
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'H2'
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'H2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'H2'
 DEBUG [2015-06-07 11:41:19,725] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'HSQL'
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'HSQL'
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'HSQL' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'HSQL'
 DEBUG [2015-06-07 11:41:19,725] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'Informix'
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'Informix'
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'Informix' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'Informix'
 DEBUG [2015-06-07 11:41:19,725] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'MS-SQL'
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'MS-SQL'
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'MS-SQL' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'MS-SQL'
 DEBUG [2015-06-07 11:41:19,725] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'MySQL'
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'MySQL'
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'MySQL' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'MySQL'
 DEBUG [2015-06-07 11:41:19,725] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'Oracle'
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'Oracle'
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'Oracle' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'Oracle'
 DEBUG [2015-06-07 11:41:19,725] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'PostgreSQL'
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'PostgreSQL'
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'PostgreSQL' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'PostgreSQL'
 DEBUG [2015-06-07 11:41:19,725] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'Sybase'
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'Sybase'
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'Sybase' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:19,725] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'Sybase'
  INFO [2015-06-07 11:41:19,741] (SQLErrorCodesFactory.java[<init>]:126) - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
 DEBUG [2015-06-07 11:41:19,741] (SQLErrorCodesFactory.java[getErrorCodes]:199) - Looking up default SQLErrorCodes for DataSource [org.apache.commons.dbcp.BasicDataSource@2de50ee4]
 DEBUG [2015-06-07 11:41:19,741] (SQLErrorCodesFactory.java[getErrorCodes]:217) - Database product name cached for DataSource [org.apache.commons.dbcp.BasicDataSource@2de50ee4]: name is 'MySQL'
 DEBUG [2015-06-07 11:41:19,741] (SQLErrorCodesFactory.java[getErrorCodes]:175) - SQL error codes for 'MySQL' found
 DEBUG [2015-06-07 11:41:19,741] (SQLErrorCodeSQLExceptionTranslator.java[logTranslation]:397) - Translating SQLException with SQL state '23000', error code '1062', message [Duplicate entry '81' for key 'PRIMARY']; SQL was [] for task [
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '81' for key 'PRIMARY'
### The error may involve sql.resources.mapper.insert-Inline
### The error occurred while setting parameters
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '81' for key 'PRIMARY'
]
 DEBUG [2015-06-07 11:41:19,741] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53a665ad]
 DEBUG [2015-06-07 11:41:19,741] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '81' for key 'PRIMARY'
### The error may involve sql.resources.mapper.insert-Inline
### The error occurred while setting parameters
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '81' for key 'PRIMARY'
; SQL []; Duplicate entry '81' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '81' for key 'PRIMARY', mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:41:19,741] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:41:19,741] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:41:19,741] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53a665ad]
 DEBUG [2015-06-07 11:41:19,741] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:41:19,741] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:41:19,741] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '81' for key 'PRIMARY'
### The error may involve sql.resources.mapper.insert-Inline
### The error occurred while setting parameters
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '81' for key 'PRIMARY'
; SQL []; Duplicate entry '81' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '81' for key 'PRIMARY', mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:41:19,741] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '81' for key 'PRIMARY'
### The error may involve sql.resources.mapper.insert-Inline
### The error occurred while setting parameters
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '81' for key 'PRIMARY'
; SQL []; Duplicate entry '81' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '81' for key 'PRIMARY', mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:41:19,756] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:41:19,756] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@5db250b4: startup date [Sun Jun 07 11:41:17 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:41:19,756] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:19,756] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:19,756] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:41:19,756] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@49c66ade: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:41:19,756] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'hibernateDao': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:19,772] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:41:19,772] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:41:19,772] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:41:19,788] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 11:41:19,788] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:41:25,476] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:41:25,538] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@38364841 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:41:25,538] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:25,538] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:41:25,554] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:41:25,570] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:25,570] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:25,570] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:25,570] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:25,570] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:25,570] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:25,585] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:25,585] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:25,585] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:25,585] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:25,585] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:25,585] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:25,601] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:41:25,601] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:41:25,601] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:41:25,789] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:41:25,789] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:41:25,805] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:41:25,805] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:41:25,836] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:41:25,883] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:41:25,930] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:41:25,946] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:41:25,946] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:41:26,024] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:41:26,039] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:41:26,071] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:41:26,102] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:41:26,149] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:41:26,227] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:41:26,227] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:26,242] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:26,242] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:26,242] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:41:26,242] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:26,242] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:26,242] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:26,242] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:26,242] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:26,242] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:26,258] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:26,259] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:26,260] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:26,261] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:26,262] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:26,263] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:41:26,263] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:41:26,294] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:41:26,357] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:41:26,357] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:41:26,357] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:41:26,372] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:41:26,725] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao': replacing [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:41:26,726] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao2': replacing [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:41:26,729] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:41:26,730] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:41:26,739] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@5db250b4: startup date [Sun Jun 07 11:41:26 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:41:26,740] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@5db250b4: org.springframework.beans.factory.support.DefaultListableBeanFactory@49c66ade: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao]; root of factory hierarchy
 DEBUG [2015-06-07 11:41:26,803] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:41:26,803] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:41:26,850] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:26,850] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:41:26,938] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:26,938] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:26,938] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:26,938] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:26,938] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:26,938] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:26,938] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:26,954] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:26,954] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:41:26,954] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:41:26,954] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:26,954] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:41:26,954] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:41:26,954] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:41:26,969] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:26,969] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:41:26,969] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:41:26,969] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:41:26,969] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:26,969] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:41:26,969] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:41:26,969] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:41:26,969] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:26,969] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:41:26,969] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2da59753]
 DEBUG [2015-06-07 11:41:26,985] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@15dcfae7]
 DEBUG [2015-06-07 11:41:26,985] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@49c66ade: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:41:26,985] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:41:26,985] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:41:27,000] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:41:27,016] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:41:27,016] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:41:27,016] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:27,032] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:41:27,032] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:27,032] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:27,063] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:27,063] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:27,079] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:41:27,094] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:27,094] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:41:27,094] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:41:27,266] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:27,304] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:41:27,309] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:27,520] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:41:27,521] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:41:27,524] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:27,542] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:27,552] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:27,553] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:41:27,578] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:27,579] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:27,579] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:27,580] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:27,580] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:41:27,581] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:41:27,582] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:27,583] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:41:27,583] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:27,609] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:41:27,613] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:41:27,613] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:27,615] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:27,615] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:41:27,616] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:27,617] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:27,617] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:27,618] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:27,619] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:27,619] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:27,619] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:27,620] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:41:27,620] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:41:27,620] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:41:27,620] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:41:27,622] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:41:27,623] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:41:27,623] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:41:27,623] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:27,628] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:41:27,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:27,628] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:41:27,629] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:27,629] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:27,630] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:27,630] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:41:27,631] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:27,631] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:27,631] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:27,632] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:41:27,632] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:41:27,632] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:41:27,632] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:41:27,633] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:41:27,634] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:27,639] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:41:27,640] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:41:27,640] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:41:27,640] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:41:27,640] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:41:27,643] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:41:27,643] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:27,647] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:41:27,649] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:41:27,650] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:41:27,650] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:27,671] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:41:27,671] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:41:27,671] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:41:27,671] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:41:27,671] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:41:27,671] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:27,671] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:41:27,671] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:41:27,687] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:41:27,687] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:41:27,687] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:41:27,687] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:41:27,687] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:41:27,687] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:27,687] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:41:27,687] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:41:27,687] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:41:27,687] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:41:27,687] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:41:27,687] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:41:27,687] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:41:27,687] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:27,687] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:27,687] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:27,733] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:41:27,749] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:27,812] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@200a26bc
 DEBUG [2015-06-07 11:41:27,812] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@200a26bc
 DEBUG [2015-06-07 11:41:27,812] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@200a26bc
 DEBUG [2015-06-07 11:41:27,812] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4628b1d3
 DEBUG [2015-06-07 11:41:27,812] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1a6f2363
 DEBUG [2015-06-07 11:41:27,812] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@641856
 DEBUG [2015-06-07 11:41:27,812] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@5400db36
 DEBUG [2015-06-07 11:41:27,812] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@5400db36
 DEBUG [2015-06-07 11:41:27,827] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5400db36
 DEBUG [2015-06-07 11:41:27,827] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@7a0e1b5e
 DEBUG [2015-06-07 11:41:27,827] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@7a0e1b5e
 DEBUG [2015-06-07 11:41:27,827] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a0e1b5e
 DEBUG [2015-06-07 11:41:27,827] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@62da83ed
 DEBUG [2015-06-07 11:41:27,827] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@62da83ed
 DEBUG [2015-06-07 11:41:27,827] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62da83ed
 DEBUG [2015-06-07 11:41:27,827] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@408b35bf
 DEBUG [2015-06-07 11:41:27,827] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@408b35bf
 DEBUG [2015-06-07 11:41:27,827] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@408b35bf
 DEBUG [2015-06-07 11:41:27,827] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@797501a
 DEBUG [2015-06-07 11:41:27,843] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@797501a
 DEBUG [2015-06-07 11:41:27,843] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@797501a
 DEBUG [2015-06-07 11:41:27,843] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@70e659aa
 DEBUG [2015-06-07 11:41:27,843] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@70e659aa
 DEBUG [2015-06-07 11:41:27,843] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@70e659aa
 DEBUG [2015-06-07 11:41:27,843] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@1c25b8a7
 DEBUG [2015-06-07 11:41:27,843] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@1c25b8a7
 DEBUG [2015-06-07 11:41:27,843] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c25b8a7
 DEBUG [2015-06-07 11:41:27,843] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3aacf32a
 DEBUG [2015-06-07 11:41:27,843] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3aacf32a
 DEBUG [2015-06-07 11:41:27,858] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@443dbe42
 DEBUG [2015-06-07 11:41:27,858] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@443dbe42
 DEBUG [2015-06-07 11:41:27,858] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@133e019b
 DEBUG [2015-06-07 11:41:27,858] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@133e019b
 DEBUG [2015-06-07 11:41:27,858] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@65f87a2c
 DEBUG [2015-06-07 11:41:27,858] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@65f87a2c
 DEBUG [2015-06-07 11:41:27,858] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@4e9658b5
 DEBUG [2015-06-07 11:41:27,858] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4e9658b5
 DEBUG [2015-06-07 11:41:27,874] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@1a6f5124
 DEBUG [2015-06-07 11:41:27,874] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1a6f5124
 DEBUG [2015-06-07 11:41:27,874] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@51a06cbe
 DEBUG [2015-06-07 11:41:27,874] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@51a06cbe
 DEBUG [2015-06-07 11:41:27,874] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@51a06cbe
 DEBUG [2015-06-07 11:41:27,874] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@344561e0
 DEBUG [2015-06-07 11:41:27,874] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@52d10fb8
 DEBUG [2015-06-07 11:41:27,874] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52d10fb8
 DEBUG [2015-06-07 11:41:27,874] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52d10fb8
 DEBUG [2015-06-07 11:41:27,874] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@22680f52
 DEBUG [2015-06-07 11:41:27,874] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@1fc793c2
 DEBUG [2015-06-07 11:41:27,874] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1fc793c2
 DEBUG [2015-06-07 11:41:27,874] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@37d3d232
 DEBUG [2015-06-07 11:41:27,874] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@37d3d232
 DEBUG [2015-06-07 11:41:27,890] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@46cf05f7
 DEBUG [2015-06-07 11:41:27,890] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@46cf05f7
 DEBUG [2015-06-07 11:41:27,890] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@3a80515c
 DEBUG [2015-06-07 11:41:27,890] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3a80515c
 DEBUG [2015-06-07 11:41:27,890] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c074c0c
 DEBUG [2015-06-07 11:41:27,890] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c074c0c
 DEBUG [2015-06-07 11:41:27,890] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58dea0a5
 DEBUG [2015-06-07 11:41:27,905] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5167268
 DEBUG [2015-06-07 11:41:27,905] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@4d157787
 DEBUG [2015-06-07 11:41:27,905] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@4d157787
 DEBUG [2015-06-07 11:41:27,905] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@4d157787
 DEBUG [2015-06-07 11:41:27,905] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@51c929ae
 DEBUG [2015-06-07 11:41:27,905] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@51c929ae
 DEBUG [2015-06-07 11:41:27,905] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@51c929ae
 DEBUG [2015-06-07 11:41:27,905] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@62c5bbdc
 DEBUG [2015-06-07 11:41:27,905] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@160c3ec1
 DEBUG [2015-06-07 11:41:27,905] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@160c3ec1
 DEBUG [2015-06-07 11:41:27,905] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@160c3ec1
 DEBUG [2015-06-07 11:41:27,905] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60afd40d
 DEBUG [2015-06-07 11:41:27,905] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60afd40d
 DEBUG [2015-06-07 11:41:27,905] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60afd40d
 DEBUG [2015-06-07 11:41:27,905] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@33c2bd
 DEBUG [2015-06-07 11:41:27,905] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@7bd69e82
 DEBUG [2015-06-07 11:41:27,905] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7bd69e82
 DEBUG [2015-06-07 11:41:27,921] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@27dc79f7
 DEBUG [2015-06-07 11:41:27,921] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@2b27cc70
 DEBUG [2015-06-07 11:41:27,921] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2b27cc70
 DEBUG [2015-06-07 11:41:27,921] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6ca320ab
 DEBUG [2015-06-07 11:41:27,921] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@323e8306
 DEBUG [2015-06-07 11:41:27,921] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@106faf11
 DEBUG [2015-06-07 11:41:27,921] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@106faf11
 DEBUG [2015-06-07 11:41:27,921] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7dd712e8
 DEBUG [2015-06-07 11:41:27,921] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2c282004
 DEBUG [2015-06-07 11:41:27,921] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ee2d0
 DEBUG [2015-06-07 11:41:27,921] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7bfc3126
 DEBUG [2015-06-07 11:41:27,921] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3e792ce3
 DEBUG [2015-06-07 11:41:27,921] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53bc1328
 DEBUG [2015-06-07 11:41:27,921] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@26f143ed
 DEBUG [2015-06-07 11:41:27,921] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c1e3314
  INFO [2015-06-07 11:41:27,952] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:41:27,952] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:41:27,952] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:41:27,952] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:41:27,969] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:41:28,031] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:41:28,031] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:41:28,031] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:41:28,031] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:41:28,031] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:41:28,031] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:41:28,031] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:41:28,031] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:41:28,031] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:41:28,031] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:41:28,031] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:41:28,031] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:41:28,047] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:41:28,047] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:41:28,047] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:41:28,094] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:41:28,094] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:41:28,094] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:41:28,125] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:41:28,141] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:41:28,141] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:41:28,156] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:41:28,188] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:41:28,203] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:41:28,203] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:41:28,203] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:41:28,203] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:41:28,219] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:41:28,219] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:41:28,219] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:41:28,219] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:41:28,219] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:41:28,219] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:41:28,219] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:41:28,219] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:41:28,219] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:41:28,219] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:41:28,219] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:41:28,219] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:41:28,219] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:41:28,219] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:41:28,219] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:41:28,219] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:41:28,219] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:41:28,219] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:41:28,219] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:41:28,234] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:41:28,234] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:41:28,234] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:41:28,250] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:41:28,609] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:41:28,609] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:41:28,750] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:41:28,766] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:41:28,766] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:41:28,766] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:41:28,766] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:41:28,766] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:41:28,766] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:41:28,766] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:41:28,766] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:41:28,766] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:41:28,766] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:41:28,766] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:41:28,766] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:41:28,766] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:41:28,766] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:41:28,766] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:41:28,766] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:41:28,781] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:41:28,781] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:41:28,781] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:41:28,781] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:41:28,781] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:41:28,781] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:41:28,781] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:41:28,781] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:41:28,781] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:41:28,781] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:41:28,781] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:41:28,781] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:41:28,781] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:41:28,781] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:41:28,813] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:41:28,813] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:41:28,813] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:41:28,813] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14441 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:41:28,828] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:41:28,969] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:41:28,969] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:41:28,969] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:41:28,969] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:41:28,969] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:41:28,969] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:41:28,984] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:28,984] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:28,984] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:41:28,984] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:41:28,984] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:41:28,984] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:41:28,984] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:41:28,984] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:41:28,984] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:28,984] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:29,000] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:29,000] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:41:29,031] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:41:29,031] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: bbc6e4be-3d56-4c13-a263-1b2666fd8db7 (unnamed)
  INFO [2015-06-07 11:41:29,031] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:41:29,031] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:41:29,031] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:41:29,031] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:41:29,031] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:41:29,031] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:41:29,031] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:41:29,031] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:41:29,031] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:41:29,031] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:41:29,031] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:41:29,031] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:41:29,031] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:41:29,064] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:41:29,064] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:41:29,064] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:41:29,079] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:41:29,079] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:41:29,079] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:29,079] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:41:29,079] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:41:29,095] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:29,110] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:29,126] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:41:29,126] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:41:29,126] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:41:29,126] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:41:29,142] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:29,142] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:41:29,142] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:41:29,157] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@6642dc5a] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:41:29,157] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:41:29,157] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:41:29,157] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:41:29,157] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:29,157] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:41:29,157] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:41:29,157] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:41:29,157] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:41:29,157] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:41:29,173] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:29,173] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:41:29,173] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:41:29,173] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:41:29,173] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:29,173] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:41:29,173] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:29,173] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:41:29,173] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:41:29,173] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:41:29,173] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:41:29,173] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:41:29,173] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:41:29,173] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:41:29,173] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:41:29,173] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:41:29,173] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:41:29,173] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@4eb45fec]
 DEBUG [2015-06-07 11:41:29,173] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:41:29,189] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:29,189] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:29,189] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:41:29,189] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:41:29,189] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:41:29,189] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:41:29,189] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:41:29,189] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:41:29,189] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:41:29,189] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:41:29,189] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:41:29,189] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:41:29,204] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:41:29,204] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:41:29,204] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:41:29,204] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:41:29,204] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:41:29,204] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:41:29,220] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:41:29,235] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:41:29,235] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:41:29,251] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:41:29,251] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@151ef57f transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:41:29,251] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:41:29,251] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4e17913b]; rollback [true]
 DEBUG [2015-06-07 11:41:29,251] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:41:29,251] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:41:29,251] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:41:29,267] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4893b344]
 DEBUG [2015-06-07 11:41:29,390] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:41:29,392] (Slf4jImpl.java[debug]:28) - ==> Parameters: 10(Integer)
 DEBUG [2015-06-07 11:41:29,395] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4893b344]
 DEBUG [2015-06-07 11:41:29,396] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-07 11:41:29,433] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336448893
 DEBUG [2015-06-07 11:41:29,433] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-07 11:41:29,449] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:41:29,449] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 7, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:41:29,465] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:41:29,465] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336448894
 DEBUG [2015-06-07 11:41:29,496] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:41:29,511] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 11:41:29,511] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:41:29,543] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 11:41:29,558] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 11:41:29,558] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 11:41:29,558] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 11:41:29,574] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 11:41:29,574] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 11:41:29,574] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 11:41:29,574] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 11:41:29,574] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:41:29,590] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:41:29,590] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 11:41:29,590] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:41:29,605] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 11:41:29,605] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:41:29,605] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 11:41:29,605] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 11:41:29,605] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:41:29,605] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:41:29,605] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:41:29,605] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:41:29,605] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:41:29,605] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 11:41:29,605] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 11:41:29,621] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:41:29,621] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:41:29,621] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:41:29,621] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:41:29,621] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:41:29,621] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:41:29,621] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:41:29,621] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:41:29,621] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:41:29,621] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:41:29,621] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 11:41:29,621] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:41:29,621] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:41:29,621] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:41:29,621] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:41:29,621] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:41:29,621] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:41:29,621] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4893b344]
 DEBUG [2015-06-07 11:41:29,621] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:41:29,621] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:41:29,621] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:41:29,621] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:41:29,636] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:41:29,636] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@5db250b4: startup date [Sun Jun 07 11:41:26 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:41:29,636] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:41:29,636] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:41:29,636] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:41:29,636] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@49c66ade: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:41:29,636] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'hibernateDao': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:41:29,636] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:41:29,636] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:41:29,636] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:41:29,636] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 11:41:29,652] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:42:23,459] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:42:23,553] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@58fdd99 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:42:23,553] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:23,568] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:42:23,568] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:42:23,584] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:23,584] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:23,584] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:23,584] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:23,600] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:23,600] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:23,600] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:23,600] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:23,600] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:23,600] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:23,600] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:23,600] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:23,615] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@657c8ad9 testClass = SpringTest, testInstance = com.spring.SpringTest@436a4e4b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@f2f2cc1 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:42:23,615] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@f2f2cc1 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:42:23,615] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@f2f2cc1 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:42:23,834] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:42:23,834] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:42:23,850] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:42:23,850] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:42:23,881] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:42:23,930] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:42:23,977] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:42:23,992] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:42:24,008] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:42:24,086] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:42:24,086] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:42:24,102] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:42:24,117] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:42:24,149] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:42:24,196] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:42:24,196] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:24,196] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:24,196] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:24,212] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:42:24,212] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:24,212] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:24,212] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:24,212] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:24,243] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:24,243] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:24,243] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:24,243] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:24,243] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:24,243] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:24,243] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:24,259] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:24,259] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:42:24,290] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:42:24,337] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:42:24,337] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:42:24,337] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:42:24,337] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:42:24,618] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao': replacing [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:42:24,634] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao2': replacing [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:42:24,634] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:42:24,634] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:42:24,634] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@1d082e88: startup date [Sun Jun 07 11:42:24 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:42:24,634] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@1d082e88: org.springframework.beans.factory.support.DefaultListableBeanFactory@b4711e2: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao]; root of factory hierarchy
 DEBUG [2015-06-07 11:42:24,712] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:42:24,712] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:42:24,790] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:24,806] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:42:24,925] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:42:24,925] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:42:24,927] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:24,927] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:42:24,927] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:42:24,927] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:42:24,927] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:24,927] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:42:24,927] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:42:24,927] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:42:24,927] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:24,927] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:42:24,927] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:42:24,927] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:42:24,942] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:24,942] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:42:24,942] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:42:24,942] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:42:24,942] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:24,942] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:42:24,942] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:42:24,942] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:42:24,942] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:24,942] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:42:24,942] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2e2ff723]
 DEBUG [2015-06-07 11:42:24,958] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@5674e1f2]
 DEBUG [2015-06-07 11:42:24,958] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@b4711e2: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:42:24,958] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:42:24,958] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:42:24,973] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:42:25,005] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:42:25,005] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:42:25,005] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:25,020] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:42:25,020] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:42:25,020] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:42:25,052] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:25,052] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:25,067] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:42:25,083] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:25,098] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:42:25,098] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:42:25,239] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:25,263] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:42:25,263] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:25,471] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:42:25,471] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:42:25,471] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:25,502] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:25,518] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:42:25,518] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:42:25,533] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:25,533] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:25,533] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:25,533] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:25,533] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:42:25,533] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:42:25,533] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:25,533] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:42:25,533] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:25,565] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:42:25,565] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:42:25,565] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:25,565] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:25,565] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:42:25,565] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:42:25,565] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:42:25,565] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:42:25,565] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:25,580] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:25,580] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:42:25,580] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:42:25,580] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:42:25,580] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:42:25,580] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:42:25,580] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:42:25,580] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:42:25,580] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:42:25,580] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:42:25,580] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:25,580] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:42:25,580] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:42:25,580] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:42:25,580] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:25,580] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:25,580] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:25,580] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:42:25,580] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:42:25,580] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:42:25,580] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:42:25,580] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:42:25,580] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:42:25,580] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:42:25,580] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:42:25,580] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:42:25,580] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:25,596] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:42:25,596] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:42:25,596] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:42:25,596] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:42:25,596] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:42:25,596] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:42:25,596] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:25,596] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:42:25,596] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:42:25,596] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:42:25,596] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:25,612] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:42:25,612] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:42:25,612] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:42:25,612] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:42:25,612] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:42:25,612] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:25,627] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:42:25,627] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:42:25,628] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:42:25,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:42:25,628] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:42:25,628] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:42:25,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:42:25,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:42:25,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:42:25,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:42:25,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:42:25,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:42:25,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:42:25,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:42:25,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:42:25,628] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:42:25,628] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:42:25,628] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:25,644] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:42:25,644] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:42:25,696] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@76318a7d
 DEBUG [2015-06-07 11:42:25,696] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@76318a7d
 DEBUG [2015-06-07 11:42:25,696] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@76318a7d
 DEBUG [2015-06-07 11:42:25,696] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5400db36
 DEBUG [2015-06-07 11:42:25,696] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@f713686
 DEBUG [2015-06-07 11:42:25,696] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@5a62b2a4
 DEBUG [2015-06-07 11:42:25,696] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@37fbe4a8
 DEBUG [2015-06-07 11:42:25,696] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@37fbe4a8
 DEBUG [2015-06-07 11:42:25,696] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@37fbe4a8
 DEBUG [2015-06-07 11:42:25,696] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@677dbd89
 DEBUG [2015-06-07 11:42:25,696] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@677dbd89
 DEBUG [2015-06-07 11:42:25,696] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@677dbd89
 DEBUG [2015-06-07 11:42:25,696] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@2e8ab815
 DEBUG [2015-06-07 11:42:25,696] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@2e8ab815
 DEBUG [2015-06-07 11:42:25,696] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2e8ab815
 DEBUG [2015-06-07 11:42:25,696] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@5c77053b
 DEBUG [2015-06-07 11:42:25,696] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@5c77053b
 DEBUG [2015-06-07 11:42:25,711] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5c77053b
 DEBUG [2015-06-07 11:42:25,711] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@7072bc39
 DEBUG [2015-06-07 11:42:25,711] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@7072bc39
 DEBUG [2015-06-07 11:42:25,711] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7072bc39
 DEBUG [2015-06-07 11:42:25,711] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@41200e0c
 DEBUG [2015-06-07 11:42:25,711] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@41200e0c
 DEBUG [2015-06-07 11:42:25,711] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@41200e0c
 DEBUG [2015-06-07 11:42:25,711] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@2555fff0
 DEBUG [2015-06-07 11:42:25,711] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@2555fff0
 DEBUG [2015-06-07 11:42:25,711] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2555fff0
 DEBUG [2015-06-07 11:42:25,711] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@42a9a63e
 DEBUG [2015-06-07 11:42:25,711] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@42a9a63e
 DEBUG [2015-06-07 11:42:25,711] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b9267b
 DEBUG [2015-06-07 11:42:25,711] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b9267b
 DEBUG [2015-06-07 11:42:25,727] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@726386ed
 DEBUG [2015-06-07 11:42:25,727] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@726386ed
 DEBUG [2015-06-07 11:42:25,727] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@51650883
 DEBUG [2015-06-07 11:42:25,727] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@51650883
 DEBUG [2015-06-07 11:42:25,727] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@31500940
 DEBUG [2015-06-07 11:42:25,727] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@31500940
 DEBUG [2015-06-07 11:42:25,727] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@2ef8a8c3
 DEBUG [2015-06-07 11:42:25,727] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2ef8a8c3
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be82d43
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be82d43
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be82d43
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@443dbe42
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@41382722
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41382722
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41382722
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d4d3fe7
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@6e33c391
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6e33c391
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@4e9658b5
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e9658b5
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@52eacb4b
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@52eacb4b
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@6cc0bcf6
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6cc0bcf6
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52c8295b
 DEBUG [2015-06-07 11:42:25,743] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52c8295b
 DEBUG [2015-06-07 11:42:25,758] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41c07648
 DEBUG [2015-06-07 11:42:25,758] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@503d56b5
 DEBUG [2015-06-07 11:42:25,758] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@27f9e982
 DEBUG [2015-06-07 11:42:25,758] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@27f9e982
 DEBUG [2015-06-07 11:42:25,758] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@27f9e982
 DEBUG [2015-06-07 11:42:25,758] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d572e62
 DEBUG [2015-06-07 11:42:25,758] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d572e62
 DEBUG [2015-06-07 11:42:25,758] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d572e62
 DEBUG [2015-06-07 11:42:25,758] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@69c43e48
 DEBUG [2015-06-07 11:42:25,758] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@3e2fc448
 DEBUG [2015-06-07 11:42:25,758] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@3e2fc448
 DEBUG [2015-06-07 11:42:25,758] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@3e2fc448
 DEBUG [2015-06-07 11:42:25,758] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7048f722
 DEBUG [2015-06-07 11:42:25,758] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7048f722
 DEBUG [2015-06-07 11:42:25,758] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7048f722
 DEBUG [2015-06-07 11:42:25,758] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@3c291aad
 DEBUG [2015-06-07 11:42:25,774] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@68ed96ca
 DEBUG [2015-06-07 11:42:25,774] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@68ed96ca
 DEBUG [2015-06-07 11:42:25,774] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@50b8ae8d
 DEBUG [2015-06-07 11:42:25,774] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@47d93e0d
 DEBUG [2015-06-07 11:42:25,774] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@47d93e0d
 DEBUG [2015-06-07 11:42:25,774] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@182b435b
 DEBUG [2015-06-07 11:42:25,774] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@3f2049b6
 DEBUG [2015-06-07 11:42:25,789] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@7bd69e82
 DEBUG [2015-06-07 11:42:25,789] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7bd69e82
 DEBUG [2015-06-07 11:42:25,789] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@27dc79f7
 DEBUG [2015-06-07 11:42:25,789] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b85300e
 DEBUG [2015-06-07 11:42:25,789] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3aaf4f07
 DEBUG [2015-06-07 11:42:25,789] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5cbf9e9f
 DEBUG [2015-06-07 11:42:25,789] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@18e8473e
 DEBUG [2015-06-07 11:42:25,789] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5a2f016d
 DEBUG [2015-06-07 11:42:25,789] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a38ba58
 DEBUG [2015-06-07 11:42:25,789] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3ad394e6
  INFO [2015-06-07 11:42:25,805] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:42:25,821] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:42:25,821] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:42:25,821] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:42:25,821] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:42:25,883] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:42:25,883] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:42:25,883] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:42:25,883] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:42:25,883] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:42:25,883] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:42:25,883] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:42:25,883] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:42:25,899] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:42:25,899] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:42:25,899] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:42:25,899] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:42:25,899] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:42:25,899] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:42:25,899] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:42:25,950] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:42:25,950] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:42:25,965] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:42:25,981] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:42:25,997] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:42:25,997] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:42:26,012] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:42:26,044] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:42:26,044] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:42:26,044] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:42:26,059] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:42:26,059] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:42:26,059] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:42:26,059] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:42:26,059] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:42:26,059] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:42:26,059] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:42:26,059] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:42:26,059] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:42:26,075] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:42:26,075] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:42:26,075] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:42:26,075] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:42:26,075] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:42:26,075] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:42:26,075] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:42:26,075] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:42:26,075] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:42:26,075] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:42:26,075] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:42:26,075] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:42:26,075] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:42:26,075] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:42:26,075] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:42:26,090] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:42:26,435] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:42:26,435] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:42:26,529] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:42:26,560] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:42:26,560] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:42:26,560] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:42:26,560] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:42:26,560] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:42:26,560] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:42:26,560] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:42:26,560] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:42:26,560] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:42:26,560] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:42:26,560] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:42:26,560] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:42:26,560] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:42:26,560] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:42:26,560] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:42:26,560] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:42:26,576] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:42:26,576] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:42:26,576] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:42:26,576] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:42:26,576] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:42:26,576] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:42:26,576] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:42:26,576] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:42:26,576] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:42:26,576] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:42:26,576] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:42:26,576] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:42:26,576] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:42:26,576] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:42:26,607] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:42:26,607] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:42:26,607] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:42:26,623] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14450 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:42:26,623] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:42:26,769] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:42:26,769] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:42:26,769] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:42:26,769] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:42:26,769] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:42:26,769] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:42:26,801] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:42:26,801] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:42:26,801] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:42:26,801] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:42:26,801] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:42:26,801] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:42:26,801] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:42:26,801] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:42:26,801] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:42:26,801] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:42:26,801] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:42:26,801] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:42:26,832] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:42:26,832] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: 0124e4fc-d3cc-41b0-8427-aebd3144db94 (unnamed)
  INFO [2015-06-07 11:42:26,832] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:42:26,832] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:42:26,848] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:42:26,848] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:42:26,848] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:42:26,848] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:42:26,848] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:42:26,848] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:42:26,848] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:42:26,848] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:42:26,848] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:42:26,848] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:42:26,848] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:42:26,880] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:42:26,880] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:42:26,880] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:42:26,880] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:42:26,880] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:42:26,880] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:42:26,880] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:42:26,880] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:42:26,895] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:26,927] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:42:26,927] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:42:26,927] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:42:26,927] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:42:26,927] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:42:26,927] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:26,942] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:42:26,942] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:42:26,958] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@43da41e] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:42:26,958] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:42:26,958] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:42:26,958] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:42:26,958] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:26,958] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:42:26,958] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:42:26,958] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:42:26,958] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:42:26,958] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:42:26,958] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:26,958] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:42:26,958] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:42:26,958] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:42:26,958] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:26,958] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:42:26,958] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:26,958] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:42:26,958] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:42:26,958] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:42:26,958] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:42:26,958] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:26,973] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:42:26,973] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:42:26,973] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:42:26,973] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:42:26,973] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:42:26,973] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@211febf3]
 DEBUG [2015-06-07 11:42:26,973] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:42:26,973] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:26,973] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:26,973] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:42:26,973] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:42:26,973] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:42:26,973] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@f2f2cc1 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:42:26,973] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:42:26,973] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:42:26,973] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:42:26,973] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:42:26,973] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:42:26,989] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:42:26,989] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:42:26,989] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@657c8ad9 testClass = SpringTest, testInstance = com.spring.SpringTest@436a4e4b, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@f2f2cc1 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:42:26,989] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@f2f2cc1 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:42:26,989] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:42:26,989] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:42:26,989] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:42:27,005] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:42:27,005] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:42:27,005] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:42:27,005] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:42:27,005] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@33d53216 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:42:27,005] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@657c8ad9 testClass = SpringTest, testInstance = com.spring.SpringTest@436a4e4b, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@f2f2cc1 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:42:27,005] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@657c8ad9 testClass = SpringTest, testInstance = com.spring.SpringTest@436a4e4b, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@f2f2cc1 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@62d73ead]; rollback [true]
 DEBUG [2015-06-07 11:42:27,021] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:42:27,022] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:42:27,022] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:42:27,022] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f08caf]
 DEBUG [2015-06-07 11:42:27,100] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:42:27,100] (Slf4jImpl.java[debug]:28) - ==> Parameters: 40(Integer)
 DEBUG [2015-06-07 11:42:27,100] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f08caf]
 DEBUG [2015-06-07 11:42:27,100] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-07 11:42:27,147] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336449471
 DEBUG [2015-06-07 11:42:27,147] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-07 11:42:27,147] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:42:27,147] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 44, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:42:27,163] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:42:27,163] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336449471
 DEBUG [2015-06-07 11:42:27,210] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:42:27,225] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 11:42:27,225] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:42:27,257] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 11:42:27,273] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 11:42:27,273] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 11:42:27,273] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 11:42:27,289] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 11:42:27,289] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 11:42:27,289] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 11:42:27,289] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 11:42:27,289] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:42:27,305] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:42:27,305] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 11:42:27,305] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:42:27,305] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 11:42:27,305] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:42:27,336] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 11:42:27,336] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 11:42:27,336] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:42:27,336] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:42:27,336] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:42:27,336] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:42:27,336] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:42:27,336] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 11:42:27,336] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 11:42:27,336] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:42:27,336] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:42:27,336] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:42:27,336] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:42:27,336] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:42:27,336] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:42:27,336] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:42:27,336] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:42:27,336] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:42:27,336] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:42:27,336] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 11:42:27,351] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:42:27,351] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:42:27,351] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@657c8ad9 testClass = SpringTest, testInstance = com.spring.SpringTest@436a4e4b, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@f2f2cc1 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:42:27,351] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:42:27,351] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:42:27,351] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:42:27,351] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f08caf]
 DEBUG [2015-06-07 11:42:27,367] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:42:27,367] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:42:27,367] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@657c8ad9 testClass = SpringTest, testInstance = com.spring.SpringTest@436a4e4b, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@f2f2cc1 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:42:27,367] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@657c8ad9 testClass = SpringTest, testInstance = com.spring.SpringTest@436a4e4b, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@f2f2cc1 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:42:27,367] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@657c8ad9 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@f2f2cc1 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:42:27,367] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@1d082e88: startup date [Sun Jun 07 11:42:24 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:42:27,367] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:27,367] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:27,367] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:42:27,367] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@b4711e2: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:42:27,367] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'hibernateDao': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:27,383] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:42:27,383] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:42:27,383] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:42:27,383] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 11:42:27,383] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:42:48,020] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:42:48,083] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@38364841 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:42:48,083] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:48,098] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:42:48,098] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:42:48,114] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:48,114] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:48,131] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:48,131] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:48,137] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:48,137] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:48,138] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:48,138] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:48,138] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:48,138] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:48,138] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:48,138] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:48,153] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:42:48,153] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:42:48,153] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:42:48,341] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:42:48,341] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:42:48,356] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:42:48,356] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:42:48,388] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:42:48,421] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:42:48,484] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:42:48,484] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:42:48,500] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:42:48,578] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:42:48,594] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:42:48,609] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:42:48,641] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:42:48,672] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:42:48,734] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:42:48,734] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:48,734] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:48,734] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:48,750] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:42:48,750] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:48,750] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:48,750] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:48,750] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:48,750] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:48,750] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:48,750] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:48,750] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:48,750] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:48,750] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:48,750] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:48,750] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:42:48,766] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:42:48,797] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:42:48,859] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:42:48,859] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:42:48,859] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:42:48,859] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:42:49,141] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao': replacing [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:42:49,141] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao2': replacing [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:42:49,141] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:42:49,141] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:42:49,141] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@5db250b4: startup date [Sun Jun 07 11:42:49 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:42:49,141] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@5db250b4: org.springframework.beans.factory.support.DefaultListableBeanFactory@49c66ade: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao]; root of factory hierarchy
 DEBUG [2015-06-07 11:42:49,207] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:42:49,207] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:42:49,238] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:49,238] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:42:49,332] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:42:49,332] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:42:49,332] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:49,332] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:42:49,332] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:42:49,332] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:42:49,332] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:49,332] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:42:49,332] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:42:49,332] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:42:49,348] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:49,348] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:42:49,348] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:42:49,348] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:42:49,348] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:49,348] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:42:49,348] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:42:49,348] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:42:49,348] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:49,348] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:42:49,364] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:42:49,364] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:42:49,364] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:49,364] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:42:49,364] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2eee3069]
 DEBUG [2015-06-07 11:42:49,364] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@687ef2e0]
 DEBUG [2015-06-07 11:42:49,379] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@49c66ade: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:42:49,379] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:42:49,379] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:42:49,395] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:42:49,414] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:42:49,414] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:42:49,414] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:49,430] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:42:49,430] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:42:49,430] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:42:49,477] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:49,477] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:49,514] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:42:49,523] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:49,550] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:42:49,550] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:42:49,739] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:49,765] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:42:49,768] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:50,089] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:42:50,090] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:42:50,092] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:50,113] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:50,125] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:42:50,126] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:42:50,141] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:50,141] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:50,141] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:50,142] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:50,142] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:42:50,142] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:42:50,143] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:50,144] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:42:50,144] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:50,162] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:42:50,162] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:42:50,162] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:50,162] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:50,162] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:42:50,162] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:42:50,162] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:42:50,162] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:42:50,162] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:50,162] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:50,162] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:42:50,162] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:42:50,162] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:42:50,162] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:42:50,162] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:42:50,162] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:42:50,162] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:42:50,177] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:42:50,177] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:42:50,177] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:50,177] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:42:50,177] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:42:50,177] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:42:50,177] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:50,177] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:50,177] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:50,177] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:42:50,177] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:42:50,177] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:42:50,177] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:42:50,177] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:42:50,177] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:42:50,177] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:42:50,177] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:42:50,177] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:42:50,177] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:50,177] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:42:50,177] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:42:50,177] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:42:50,177] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:42:50,177] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:42:50,193] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:42:50,193] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:50,193] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:42:50,193] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:42:50,193] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:42:50,193] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:50,209] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:42:50,209] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:42:50,209] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:42:50,209] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:42:50,209] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:42:50,209] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:50,209] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:42:50,209] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:42:50,209] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:42:50,209] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:42:50,209] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:42:50,209] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:42:50,209] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:42:50,209] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:42:50,209] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:42:50,209] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:42:50,209] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:42:50,209] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:42:50,224] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:42:50,224] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:42:50,225] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:42:50,225] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:42:50,225] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:42:50,226] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:50,242] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:42:50,242] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:42:50,289] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@200a26bc
 DEBUG [2015-06-07 11:42:50,289] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@200a26bc
 DEBUG [2015-06-07 11:42:50,289] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@200a26bc
 DEBUG [2015-06-07 11:42:50,289] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4628b1d3
 DEBUG [2015-06-07 11:42:50,289] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1a6f2363
 DEBUG [2015-06-07 11:42:50,289] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@641856
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@13579834
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@13579834
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13579834
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@7a0e1b5e
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@7a0e1b5e
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a0e1b5e
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@62da83ed
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@62da83ed
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62da83ed
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@408b35bf
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@408b35bf
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@408b35bf
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@797501a
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@797501a
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@797501a
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@70e659aa
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@70e659aa
 DEBUG [2015-06-07 11:42:50,304] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@70e659aa
 DEBUG [2015-06-07 11:42:50,320] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@1c25b8a7
 DEBUG [2015-06-07 11:42:50,320] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@1c25b8a7
 DEBUG [2015-06-07 11:42:50,320] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c25b8a7
 DEBUG [2015-06-07 11:42:50,320] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3aacf32a
 DEBUG [2015-06-07 11:42:50,320] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3aacf32a
 DEBUG [2015-06-07 11:42:50,320] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@443dbe42
 DEBUG [2015-06-07 11:42:50,320] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@443dbe42
 DEBUG [2015-06-07 11:42:50,320] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@133e019b
 DEBUG [2015-06-07 11:42:50,320] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@133e019b
 DEBUG [2015-06-07 11:42:50,320] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@65f87a2c
 DEBUG [2015-06-07 11:42:50,320] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@65f87a2c
 DEBUG [2015-06-07 11:42:50,320] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@4e9658b5
 DEBUG [2015-06-07 11:42:50,320] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4e9658b5
 DEBUG [2015-06-07 11:42:50,336] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@1a6f5124
 DEBUG [2015-06-07 11:42:50,336] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1a6f5124
 DEBUG [2015-06-07 11:42:50,336] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@51a06cbe
 DEBUG [2015-06-07 11:42:50,336] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@51a06cbe
 DEBUG [2015-06-07 11:42:50,336] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@51a06cbe
 DEBUG [2015-06-07 11:42:50,336] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@344561e0
 DEBUG [2015-06-07 11:42:50,336] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@52d10fb8
 DEBUG [2015-06-07 11:42:50,336] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52d10fb8
 DEBUG [2015-06-07 11:42:50,336] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52d10fb8
 DEBUG [2015-06-07 11:42:50,351] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@22680f52
 DEBUG [2015-06-07 11:42:50,351] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@1fc793c2
 DEBUG [2015-06-07 11:42:50,351] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1fc793c2
 DEBUG [2015-06-07 11:42:50,351] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@37d3d232
 DEBUG [2015-06-07 11:42:50,351] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@37d3d232
 DEBUG [2015-06-07 11:42:50,367] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@46cf05f7
 DEBUG [2015-06-07 11:42:50,367] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@46cf05f7
 DEBUG [2015-06-07 11:42:50,367] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@3a80515c
 DEBUG [2015-06-07 11:42:50,367] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3a80515c
 DEBUG [2015-06-07 11:42:50,367] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c074c0c
 DEBUG [2015-06-07 11:42:50,367] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c074c0c
 DEBUG [2015-06-07 11:42:50,367] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58dea0a5
 DEBUG [2015-06-07 11:42:50,367] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5167268
 DEBUG [2015-06-07 11:42:50,383] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@4d157787
 DEBUG [2015-06-07 11:42:50,383] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@4d157787
 DEBUG [2015-06-07 11:42:50,383] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@4d157787
 DEBUG [2015-06-07 11:42:50,383] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@51c929ae
 DEBUG [2015-06-07 11:42:50,383] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@51c929ae
 DEBUG [2015-06-07 11:42:50,383] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@51c929ae
 DEBUG [2015-06-07 11:42:50,383] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@62c5bbdc
 DEBUG [2015-06-07 11:42:50,383] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@160c3ec1
 DEBUG [2015-06-07 11:42:50,383] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@160c3ec1
 DEBUG [2015-06-07 11:42:50,383] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@160c3ec1
 DEBUG [2015-06-07 11:42:50,383] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60afd40d
 DEBUG [2015-06-07 11:42:50,383] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60afd40d
 DEBUG [2015-06-07 11:42:50,383] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60afd40d
 DEBUG [2015-06-07 11:42:50,383] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@33c2bd
 DEBUG [2015-06-07 11:42:50,398] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@7bd69e82
 DEBUG [2015-06-07 11:42:50,398] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7bd69e82
 DEBUG [2015-06-07 11:42:50,398] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@27dc79f7
 DEBUG [2015-06-07 11:42:50,398] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@2b27cc70
 DEBUG [2015-06-07 11:42:50,398] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2b27cc70
 DEBUG [2015-06-07 11:42:50,398] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6ca320ab
 DEBUG [2015-06-07 11:42:50,398] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@323e8306
 DEBUG [2015-06-07 11:42:50,414] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@106faf11
 DEBUG [2015-06-07 11:42:50,414] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@106faf11
 DEBUG [2015-06-07 11:42:50,414] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7dd712e8
 DEBUG [2015-06-07 11:42:50,414] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2c282004
 DEBUG [2015-06-07 11:42:50,414] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ee2d0
 DEBUG [2015-06-07 11:42:50,414] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7bfc3126
 DEBUG [2015-06-07 11:42:50,414] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3e792ce3
 DEBUG [2015-06-07 11:42:50,414] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53bc1328
 DEBUG [2015-06-07 11:42:50,414] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@26f143ed
 DEBUG [2015-06-07 11:42:50,414] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c1e3314
  INFO [2015-06-07 11:42:50,461] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:42:50,461] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:42:50,461] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:42:50,480] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:42:50,483] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:42:50,593] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:42:50,594] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:42:50,597] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:42:50,597] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:42:50,601] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:42:50,603] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:42:50,606] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:42:50,607] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:42:50,608] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:42:50,609] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:42:50,610] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:42:50,610] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:42:50,610] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:42:50,610] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:42:50,610] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:42:50,688] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:42:50,688] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:42:50,703] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:42:50,750] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:42:50,750] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:42:50,766] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:42:50,766] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:42:50,797] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:42:50,813] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:42:50,813] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:42:50,813] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:42:50,813] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:42:50,813] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:42:50,813] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:42:50,813] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:42:50,813] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:42:50,813] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:42:50,813] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:42:50,813] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:42:50,828] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:42:50,828] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:42:50,828] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:42:50,828] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:42:50,828] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:42:50,828] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:42:50,828] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:42:50,828] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:42:50,828] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:42:50,828] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:42:50,828] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:42:50,828] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:42:50,828] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:42:50,844] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:42:50,844] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:42:50,844] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:42:51,229] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:42:51,229] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:42:51,335] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:42:51,350] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:42:51,350] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:42:51,350] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:42:51,350] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:42:51,350] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:42:51,350] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:42:51,366] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:42:51,366] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:42:51,397] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:42:51,397] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:42:51,413] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:42:51,413] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14459 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:42:51,413] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:42:51,554] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:42:51,554] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:42:51,554] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:42:51,554] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:42:51,554] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:42:51,554] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:42:51,585] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:42:51,585] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:42:51,585] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:42:51,585] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:42:51,585] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:42:51,585] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:42:51,585] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:42:51,585] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:42:51,585] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:42:51,585] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:42:51,585] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:42:51,585] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:42:51,616] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:42:51,632] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: c07e4982-88ea-40ea-b9c1-0c1fe1adaf42 (unnamed)
  INFO [2015-06-07 11:42:51,632] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:42:51,632] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:42:51,632] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:42:51,632] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:42:51,632] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:42:51,632] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:42:51,632] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:42:51,632] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:42:51,632] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:42:51,632] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:42:51,632] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:42:51,632] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:42:51,632] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:42:51,663] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:42:51,663] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:42:51,663] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:42:51,679] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:42:51,679] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:42:51,679] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:42:51,679] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:42:51,679] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:42:51,694] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:51,710] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:42:51,710] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:42:51,710] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:42:51,725] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:42:51,725] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:42:51,741] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:51,741] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:42:51,741] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:42:51,757] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@43da41e] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:42:51,757] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:42:51,757] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:42:51,757] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:42:51,757] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:51,757] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:42:51,757] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:42:51,757] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:42:51,757] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:42:51,757] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:42:51,757] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:51,757] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:42:51,757] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:42:51,757] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:42:51,757] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:51,757] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:42:51,757] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:51,757] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:42:51,757] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:42:51,757] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:42:51,772] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:42:51,772] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:42:51,772] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:42:51,772] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:42:51,772] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:42:51,772] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:42:51,772] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:42:51,772] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@211febf3]
 DEBUG [2015-06-07 11:42:51,772] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:42:51,772] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:51,772] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:51,772] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:42:51,772] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:42:51,788] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:42:51,788] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:42:51,788] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:42:51,788] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:42:51,788] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:42:51,788] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:42:51,788] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:42:51,788] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:42:51,788] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:42:51,804] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:42:51,804] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:42:51,804] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:42:51,804] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:42:51,804] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:42:51,804] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:42:51,804] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:42:51,819] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:42:51,819] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:42:51,819] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@33d53216 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:42:51,819] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:42:51,819] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@62d73ead]; rollback [true]
 DEBUG [2015-06-07 11:42:51,819] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:42:51,819] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:42:51,835] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:42:51,835] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f08caf]
 DEBUG [2015-06-07 11:42:51,929] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:42:51,929] (Slf4jImpl.java[debug]:28) - ==> Parameters: 49(Integer)
 DEBUG [2015-06-07 11:42:51,929] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f08caf]
 DEBUG [2015-06-07 11:42:51,929] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-07 11:42:51,975] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336449719
 DEBUG [2015-06-07 11:42:51,975] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-07 11:42:51,991] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:42:52,007] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 5, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:42:52,022] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:42:52,022] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336449720
 DEBUG [2015-06-07 11:42:52,100] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:42:52,116] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 11:42:52,116] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:42:52,163] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 11:42:52,194] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 11:42:52,194] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 11:42:52,194] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 11:42:52,210] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 11:42:52,210] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 11:42:52,225] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 11:42:52,225] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 11:42:52,225] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:42:52,241] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:42:52,241] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 11:42:52,241] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:42:52,257] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 11:42:52,257] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:42:52,296] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 11:42:52,298] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 11:42:52,305] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:42:52,306] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:42:52,306] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:42:52,306] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:42:52,306] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:42:52,306] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 11:42:52,306] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 11:42:52,306] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:42:52,306] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:42:52,306] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:42:52,306] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:42:52,306] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:42:52,306] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:42:52,306] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:42:52,306] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:42:52,306] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:42:52,306] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:42:52,306] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 11:42:52,306] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:42:52,306] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:42:52,306] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:42:52,306] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:42:52,306] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:42:52,322] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:42:52,322] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f08caf]
 DEBUG [2015-06-07 11:42:52,322] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:42:52,322] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:42:52,322] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:42:52,322] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = com.spring.SpringTest@4b168fa9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:42:52,322] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@48524010 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a84f40f testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:42:52,337] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@5db250b4: startup date [Sun Jun 07 11:42:49 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:42:52,337] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:42:52,337] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:42:52,337] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:42:52,337] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@49c66ade: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:42:52,337] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'hibernateDao': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:42:52,353] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:42:52,353] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:42:52,353] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:42:52,369] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 11:42:52,369] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:43:30,120] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:43:30,183] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@38364841 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:43:30,183] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:30,198] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:43:30,198] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:43:30,214] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:30,214] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:30,214] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:30,214] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:30,230] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:30,230] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:30,230] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:30,230] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:30,230] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:30,230] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:30,230] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:30,230] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:30,245] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:43:30,245] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:43:30,245] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:43:30,465] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:43:30,465] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:43:30,465] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:43:30,465] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:43:30,512] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:43:30,546] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:43:30,625] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:43:30,628] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:43:30,628] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:43:30,706] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:43:30,737] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:43:30,737] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:43:30,768] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:43:30,815] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:43:30,924] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:43:30,924] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:30,924] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:30,924] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:30,940] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:43:30,940] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:30,940] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:30,940] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:30,940] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:30,940] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:30,940] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:30,940] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:30,940] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:30,940] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:30,956] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:30,956] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:30,956] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:30,956] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:43:31,018] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:43:31,128] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:43:31,128] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:43:31,128] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:43:31,128] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:43:31,471] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao': replacing [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:43:31,471] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao2': replacing [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:43:31,471] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:43:31,471] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:43:31,486] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@2805c96b: startup date [Sun Jun 07 11:43:31 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:43:31,486] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@2805c96b: org.springframework.beans.factory.support.DefaultListableBeanFactory@54504ecd: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao]; root of factory hierarchy
 DEBUG [2015-06-07 11:43:31,565] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:43:31,565] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:43:31,596] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:31,596] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:43:31,674] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:43:31,674] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:43:31,674] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:43:31,674] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:43:31,674] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:43:31,674] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:31,674] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:43:31,691] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@146587a2]
 DEBUG [2015-06-07 11:43:31,691] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@74eb909f]
 DEBUG [2015-06-07 11:43:31,706] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@54504ecd: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:43:31,706] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:43:31,706] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:43:31,706] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:43:31,722] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:43:31,722] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:43:31,722] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:31,737] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:43:31,737] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:43:31,737] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:43:31,769] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:31,769] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:31,800] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:43:31,800] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:31,816] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:43:31,816] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:43:31,987] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:32,019] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:43:32,019] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:32,252] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:43:32,252] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:43:32,252] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:32,267] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:32,283] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:43:32,283] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:43:32,298] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:32,298] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:32,298] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:32,298] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:32,298] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:43:32,298] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:43:32,298] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:32,298] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:43:32,298] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:32,331] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:43:32,331] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:43:32,346] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:32,346] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:32,346] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:43:32,346] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:43:32,346] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:43:32,346] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:43:32,346] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:32,346] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:32,346] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:43:32,346] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:43:32,346] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:43:32,346] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:43:32,346] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:43:32,346] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:43:32,346] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:43:32,346] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:43:32,346] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:43:32,346] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:32,346] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:43:32,346] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:43:32,346] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:43:32,346] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:32,346] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:32,346] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:32,346] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:43:32,346] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:43:32,346] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:43:32,346] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:43:32,346] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:43:32,346] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:43:32,346] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:43:32,346] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:43:32,362] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:43:32,362] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:32,362] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:43:32,362] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:43:32,362] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:43:32,362] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:43:32,362] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:43:32,362] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:43:32,362] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:32,378] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:43:32,378] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:43:32,378] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:43:32,378] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:32,403] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:43:32,403] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:43:32,403] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:43:32,403] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:43:32,403] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:43:32,403] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:32,403] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:43:32,403] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:43:32,419] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:43:32,420] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:43:32,421] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:43:32,421] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:43:32,421] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:43:32,421] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:43:32,421] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:43:32,421] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:43:32,421] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:43:32,421] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:43:32,421] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:43:32,421] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:43:32,421] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:43:32,421] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:43:32,421] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:43:32,421] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:32,468] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:43:32,468] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:43:32,530] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@74f7d1d2
 DEBUG [2015-06-07 11:43:32,530] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@74f7d1d2
 DEBUG [2015-06-07 11:43:32,530] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@74f7d1d2
 DEBUG [2015-06-07 11:43:32,530] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2db2dd9d
 DEBUG [2015-06-07 11:43:32,530] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d6bc158
 DEBUG [2015-06-07 11:43:32,530] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@677dbd89
 DEBUG [2015-06-07 11:43:32,530] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@2e8ab815
 DEBUG [2015-06-07 11:43:32,530] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@2e8ab815
 DEBUG [2015-06-07 11:43:32,530] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2e8ab815
 DEBUG [2015-06-07 11:43:32,530] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@5c77053b
 DEBUG [2015-06-07 11:43:32,530] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@5c77053b
 DEBUG [2015-06-07 11:43:32,530] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c77053b
 DEBUG [2015-06-07 11:43:32,530] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@158d255c
 DEBUG [2015-06-07 11:43:32,530] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@158d255c
 DEBUG [2015-06-07 11:43:32,530] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@158d255c
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@672f11c2
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@672f11c2
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@672f11c2
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@324c64cd
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@324c64cd
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@324c64cd
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@70e29e14
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@70e29e14
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@70e29e14
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@e3cee7b
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@e3cee7b
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@e3cee7b
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@797501a
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@797501a
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@499b2a5c
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@499b2a5c
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@615f972
 DEBUG [2015-06-07 11:43:32,546] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@615f972
 DEBUG [2015-06-07 11:43:32,562] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@4362d7df
 DEBUG [2015-06-07 11:43:32,562] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4362d7df
 DEBUG [2015-06-07 11:43:32,562] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@6ab72419
 DEBUG [2015-06-07 11:43:32,562] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6ab72419
 DEBUG [2015-06-07 11:43:32,562] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@77b7ffa4
 DEBUG [2015-06-07 11:43:32,562] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77b7ffa4
 DEBUG [2015-06-07 11:43:32,562] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@65f87a2c
 DEBUG [2015-06-07 11:43:32,562] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@65f87a2c
 DEBUG [2015-06-07 11:43:32,562] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@65f87a2c
 DEBUG [2015-06-07 11:43:32,562] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1e886a5b
 DEBUG [2015-06-07 11:43:32,562] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@213e3629
 DEBUG [2015-06-07 11:43:32,577] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@213e3629
 DEBUG [2015-06-07 11:43:32,577] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@213e3629
 DEBUG [2015-06-07 11:43:32,578] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c41709a
 DEBUG [2015-06-07 11:43:32,578] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@1edb61b1
 DEBUG [2015-06-07 11:43:32,578] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1edb61b1
 DEBUG [2015-06-07 11:43:32,578] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@669253b7
 DEBUG [2015-06-07 11:43:32,578] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@669253b7
 DEBUG [2015-06-07 11:43:32,578] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@36ac8a63
 DEBUG [2015-06-07 11:43:32,578] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@36ac8a63
 DEBUG [2015-06-07 11:43:32,578] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@1fe8d51b
 DEBUG [2015-06-07 11:43:32,578] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1fe8d51b
 DEBUG [2015-06-07 11:43:32,578] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2d35442b
 DEBUG [2015-06-07 11:43:32,578] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2d35442b
 DEBUG [2015-06-07 11:43:32,578] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@30c0ccff
 DEBUG [2015-06-07 11:43:32,578] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5851bd4f
 DEBUG [2015-06-07 11:43:32,594] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@1c807b1d
 DEBUG [2015-06-07 11:43:32,594] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@1c807b1d
 DEBUG [2015-06-07 11:43:32,594] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@1c807b1d
 DEBUG [2015-06-07 11:43:32,594] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4cc61eb1
 DEBUG [2015-06-07 11:43:32,594] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4cc61eb1
 DEBUG [2015-06-07 11:43:32,594] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4cc61eb1
 DEBUG [2015-06-07 11:43:32,594] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@6e0ff644
 DEBUG [2015-06-07 11:43:32,594] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@320e400
 DEBUG [2015-06-07 11:43:32,594] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@320e400
 DEBUG [2015-06-07 11:43:32,594] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@320e400
 DEBUG [2015-06-07 11:43:32,594] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@436390f4
 DEBUG [2015-06-07 11:43:32,594] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@436390f4
 DEBUG [2015-06-07 11:43:32,594] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@436390f4
 DEBUG [2015-06-07 11:43:32,594] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@255990cc
 DEBUG [2015-06-07 11:43:32,594] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@475b7792
 DEBUG [2015-06-07 11:43:32,594] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@475b7792
 DEBUG [2015-06-07 11:43:32,609] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4d0402b
 DEBUG [2015-06-07 11:43:32,609] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@1dfd5f51
 DEBUG [2015-06-07 11:43:32,609] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1dfd5f51
 DEBUG [2015-06-07 11:43:32,609] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d4d8fcf
 DEBUG [2015-06-07 11:43:32,609] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@7bd69e82
 DEBUG [2015-06-07 11:43:32,609] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@6f6a7463
 DEBUG [2015-06-07 11:43:32,609] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6f6a7463
 DEBUG [2015-06-07 11:43:32,609] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@50d68830
 DEBUG [2015-06-07 11:43:32,609] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1e53135d
 DEBUG [2015-06-07 11:43:32,609] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7674a051
 DEBUG [2015-06-07 11:43:32,609] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a7704c
 DEBUG [2015-06-07 11:43:32,609] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6754ef00
 DEBUG [2015-06-07 11:43:32,609] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@619bd14c
 DEBUG [2015-06-07 11:43:32,609] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@323e8306
 DEBUG [2015-06-07 11:43:32,609] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@a23a01d
  INFO [2015-06-07 11:43:32,641] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:43:32,641] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:43:32,656] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:43:32,656] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:43:32,656] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:43:32,719] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:43:32,719] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:43:32,719] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:43:32,719] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:43:32,719] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:43:32,719] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:43:32,719] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:43:32,734] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:43:32,734] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:43:32,734] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:43:32,734] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:43:32,734] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:43:32,734] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:43:32,734] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:43:32,750] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:43:32,797] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:43:32,797] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:43:32,813] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:43:32,828] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:43:32,828] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:43:32,844] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:43:32,844] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:43:32,891] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:43:32,907] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:43:32,907] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:43:32,907] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:43:32,907] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:43:32,907] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:43:32,923] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:43:32,923] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:43:32,923] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:43:32,923] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:43:32,923] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:43:32,923] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:43:32,923] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:43:32,923] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:43:32,923] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:43:32,923] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:43:32,923] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:43:32,923] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:43:32,923] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:43:32,923] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:43:32,923] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:43:32,923] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:43:32,923] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:43:32,923] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:43:32,939] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:43:32,939] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:43:32,939] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:43:32,939] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:43:33,331] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:43:33,331] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:43:33,509] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:43:33,529] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:43:33,529] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:43:33,529] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:43:33,529] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:43:33,529] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:43:33,529] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:43:33,529] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:43:33,529] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:43:33,529] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:43:33,529] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:43:33,529] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:43:33,529] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:43:33,529] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:43:33,529] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:43:33,529] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:43:33,529] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:43:33,544] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:43:33,544] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:43:33,544] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:43:33,544] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:43:33,544] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:43:33,544] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:43:33,544] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:43:33,544] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:43:33,544] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:43:33,544] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:43:33,544] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:43:33,544] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:43:33,544] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:43:33,544] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:43:33,575] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:43:33,575] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:43:33,591] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:43:33,591] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14468 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:43:33,591] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:43:33,763] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:43:33,763] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:43:33,763] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:43:33,763] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:43:33,763] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:43:33,763] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:43:33,810] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:43:33,810] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:43:33,810] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:43:33,810] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:43:33,810] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:43:33,810] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:43:33,810] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:43:33,810] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:43:33,810] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:43:33,810] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:43:33,810] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:43:33,810] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:43:33,857] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:43:33,857] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: 2775dc15-d467-42f8-8b1b-4c3e3317b8d6 (unnamed)
  INFO [2015-06-07 11:43:33,857] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:43:33,857] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:43:33,857] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:43:33,857] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:43:33,857] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:43:33,857] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:43:33,857] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:43:33,857] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:43:33,857] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:43:33,857] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:43:33,857] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:43:33,857] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:43:33,857] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:43:33,888] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:43:33,888] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:43:33,888] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:43:33,888] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:43:33,888] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:43:33,888] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:43:33,888] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:43:33,888] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:43:33,904] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:33,935] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:43:33,935] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:43:33,935] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:43:33,935] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:43:33,935] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:43:33,950] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:33,966] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:43:33,966] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:43:33,982] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@5496c165] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:43:33,982] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:43:33,982] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:43:33,982] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:43:33,982] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:33,982] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:43:33,982] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:43:33,982] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:43:33,982] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:43:33,982] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:43:33,997] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:33,997] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:43:33,997] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:43:33,997] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:43:33,997] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:33,997] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:43:33,997] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:33,997] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:43:33,997] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:43:33,997] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:43:33,997] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:43:33,997] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:33,997] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:43:33,997] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:43:33,997] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:43:33,997] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:43:33,997] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:43:33,997] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@2009f9b0]
 DEBUG [2015-06-07 11:43:33,997] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:43:33,997] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:33,997] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:34,013] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:43:34,013] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:43:34,013] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:43:34,013] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:43:34,013] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:43:34,013] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:43:34,013] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:43:34,013] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:43:34,013] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:43:34,013] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:43:34,013] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.mybatisTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager1'
 DEBUG [2015-06-07 11:43:34,013] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager1'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:43:34,013] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:43:34,029] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:43:34,029] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:43:34,029] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:43:34,029] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [mybatisTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager1'
 DEBUG [2015-06-07 11:43:34,060] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:43:34,060] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:43:34,060] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:43:34,060] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@2de50ee4 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:43:34,060] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:43:34,060] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@10895b16]; rollback [true]
 DEBUG [2015-06-07 11:43:34,075] (DataSourceUtils.java[doGetConnection]:110) - Fetching JDBC Connection from DataSource
 DEBUG [2015-06-07 11:43:34,075] (DataSourceUtils.java[doGetConnection]:114) - Registering transaction synchronization for JDBC Connection
 DEBUG [2015-06-07 11:43:34,075] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:43:34,075] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:43:34,075] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:43:34,075] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d654825]
 DEBUG [2015-06-07 11:43:34,154] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:43:34,154] (Slf4jImpl.java[debug]:28) - ==> Parameters: 1(Integer)
 DEBUG [2015-06-07 11:43:34,169] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d654825]
 DEBUG [2015-06-07 11:43:34,169] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-07 11:43:34,201] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336450141
 DEBUG [2015-06-07 11:43:34,201] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-07 11:43:34,201] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:43:34,217] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 42, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:43:34,217] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:43:34,217] (Slf4jImpl.java[debug]:28) - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d654825] from current transaction
 DEBUG [2015-06-07 11:43:34,217] (Slf4jImpl.java[debug]:28) - ==>  Executing: select * from types; 
 DEBUG [2015-06-07 11:43:34,217] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:43:34,233] (Slf4jImpl.java[debug]:28) - <==    Columns: typeId
 DEBUG [2015-06-07 11:43:34,233] (Slf4jImpl.java[debug]:28) - <==        Row: 1
 DEBUG [2015-06-07 11:43:34,248] (Slf4jImpl.java[debug]:28) - <==        Row: 19
 DEBUG [2015-06-07 11:43:34,248] (Slf4jImpl.java[debug]:28) - <==        Row: 5
 DEBUG [2015-06-07 11:43:34,248] (Slf4jImpl.java[debug]:28) - <==        Row: 73
 DEBUG [2015-06-07 11:43:34,248] (Slf4jImpl.java[debug]:28) - <==        Row: 81
 DEBUG [2015-06-07 11:43:34,248] (Slf4jImpl.java[debug]:28) - <==        Row: 96
 DEBUG [2015-06-07 11:43:34,248] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d654825]
 DEBUG [2015-06-07 11:43:34,248] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:43:34,248] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:43:34,248] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:43:34,248] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:43:34,248] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d654825]
 DEBUG [2015-06-07 11:43:34,248] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
 DEBUG [2015-06-07 11:43:34,248] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:43:34,248] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:43:34,248] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:43:34,248] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:43:34,248] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:34,248] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:34,248] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4eb1c69, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:43:34,248] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:43:34,248] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:43:34,248] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:43:34,248] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:43:34,248] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:43:34,248] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:43:34,248] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4eb1c69, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:43:34,248] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:43:34,248] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:43:34,248] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:43:34,248] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:43:34,248] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:43:34,248] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:43:34,248] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:43:34,248] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4eb1c69, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:43:34,248] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (2) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4eb1c69, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@74d3b638]; rollback [true]
 DEBUG [2015-06-07 11:43:34,264] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:43:34,264] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:43:34,264] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:43:34,264] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f85fe1]
 DEBUG [2015-06-07 11:43:34,264] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:43:34,264] (Slf4jImpl.java[debug]:28) - ==> Parameters: 20(Integer)
 DEBUG [2015-06-07 11:43:34,264] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f85fe1]
 DEBUG [2015-06-07 11:43:34,264] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-07 11:43:34,264] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336450142
 DEBUG [2015-06-07 11:43:34,264] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-07 11:43:34,264] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:43:34,264] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 54, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:43:34,264] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:43:34,264] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336450142
 DEBUG [2015-06-07 11:43:34,311] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:43:34,311] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 11:43:34,311] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:43:34,373] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 11:43:34,389] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 11:43:34,405] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 11:43:34,405] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 11:43:34,405] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 11:43:34,405] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 11:43:34,405] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 11:43:34,405] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 11:43:34,405] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:43:34,420] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:43:34,420] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 11:43:34,420] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:43:34,451] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 11:43:34,451] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:43:34,467] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 11:43:34,467] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 11:43:34,467] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 11:43:34,467] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:43:34,467] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:43:34,483] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:43:34,483] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:43:34,483] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:43:34,483] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 11:43:34,483] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 11:43:34,483] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 11:43:34,483] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 11:43:34,483] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:43:34,483] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:43:34,483] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:43:34,483] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:43:34,483] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:43:34,483] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:43:34,483] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:43:34,483] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:43:34,483] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:43:34,483] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:43:34,483] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 11:43:34,483] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:43:34,483] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:43:34,483] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4eb1c69, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:43:34,483] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:43:34,483] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:43:34,483] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:43:34,483] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f85fe1]
 DEBUG [2015-06-07 11:43:34,483] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:43:34,483] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:43:34,483] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4eb1c69, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:43:34,498] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4eb1c69, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:43:34,498] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:43:34,498] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@2805c96b: startup date [Sun Jun 07 11:43:31 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:43:34,498] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:34,498] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:34,498] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:43:34,498] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@54504ecd: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:43:34,498] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'hibernateDao': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:34,514] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:43:34,514] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:43:34,514] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:43:34,514] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 11:43:34,514] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:43:45,591] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:43:45,653] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@58fdd99 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:43:45,653] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:45,653] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:43:45,669] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:43:45,684] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:45,684] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:45,684] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:45,684] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:45,700] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:45,700] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:45,700] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:45,700] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:45,700] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:45,700] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:45,700] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:45,700] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:45,716] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@21507a04 testClass = SpringTest, testInstance = com.spring.SpringTest@143640d5, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:43:45,716] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:43:45,716] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:43:45,919] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:43:45,919] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:43:45,919] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:43:45,919] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:43:45,966] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:43:45,997] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:43:46,075] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:43:46,075] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:43:46,075] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:43:46,138] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:43:46,153] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:43:46,169] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:43:46,184] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:43:46,200] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:43:46,263] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:43:46,263] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:46,263] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:46,263] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:46,263] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:43:46,263] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:46,263] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:46,263] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:46,263] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:46,263] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:46,278] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:46,278] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:46,309] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:46,309] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:46,309] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:46,309] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:46,309] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:43:46,309] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:43:46,341] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:43:46,405] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:43:46,405] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:43:46,405] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:43:46,405] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:43:46,707] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao': replacing [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:43:46,707] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao2': replacing [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:43:46,707] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:43:46,707] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:43:46,726] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@23986957: startup date [Sun Jun 07 11:43:46 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:43:46,727] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@23986957: org.springframework.beans.factory.support.DefaultListableBeanFactory@58ce9668: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao]; root of factory hierarchy
 DEBUG [2015-06-07 11:43:46,777] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:43:46,777] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:43:46,792] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:46,792] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:43:46,855] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:43:46,855] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:43:46,855] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:46,870] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:43:46,870] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:43:46,870] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:43:46,870] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:46,870] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:43:46,870] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:43:46,870] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:43:46,870] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:46,870] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:43:46,870] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:43:46,870] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:43:46,870] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:46,870] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:43:46,870] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:43:46,870] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:43:46,870] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:46,870] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:43:46,870] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:43:46,870] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:43:46,870] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:46,870] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:43:46,886] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6aa3a905]
 DEBUG [2015-06-07 11:43:46,886] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@22bac7bc]
 DEBUG [2015-06-07 11:43:46,886] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@58ce9668: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:43:46,886] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:43:46,886] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:43:46,902] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:43:46,917] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:43:46,917] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:43:46,917] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:46,933] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:43:46,933] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:43:46,933] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:43:46,948] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:46,948] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:46,980] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:43:46,980] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:46,995] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:43:46,995] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:43:47,152] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:47,198] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:43:47,198] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:47,355] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:43:47,355] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:43:47,355] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:47,370] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:47,402] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:43:47,402] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:43:47,418] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:43:47,418] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:43:47,418] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:43:47,418] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:47,418] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:47,418] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:47,418] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:43:47,418] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:43:47,418] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:47,418] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:43:47,418] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:47,450] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:43:47,450] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:43:47,450] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:47,450] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:47,450] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:43:47,450] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:43:47,450] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:43:47,450] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:47,450] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:47,450] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:47,450] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:43:47,450] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:43:47,450] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:43:47,450] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:43:47,450] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:43:47,450] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:43:47,450] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:43:47,450] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:47,465] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:43:47,465] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:43:47,465] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:43:47,465] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:43:47,465] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:43:47,465] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:43:47,465] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:43:47,465] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:47,465] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:47,465] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:47,465] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:43:47,465] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:43:47,465] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:43:47,465] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:43:47,465] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:43:47,465] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:47,465] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:43:47,465] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:43:47,465] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:43:47,465] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:43:47,465] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:43:47,465] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:43:47,465] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:47,481] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:43:47,481] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:43:47,481] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:43:47,481] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:47,496] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:43:47,496] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:43:47,496] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:43:47,496] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:43:47,496] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:43:47,496] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:47,496] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:43:47,496] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:43:47,496] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:43:47,496] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:43:47,496] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:43:47,496] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:43:47,496] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:43:47,496] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:43:47,496] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:43:47,496] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:43:47,496] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:43:47,496] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:43:47,496] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:43:47,496] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:43:47,496] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:43:47,496] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:43:47,496] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:43:47,512] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:47,528] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:43:47,528] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:43:47,575] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@641856
 DEBUG [2015-06-07 11:43:47,575] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@641856
 DEBUG [2015-06-07 11:43:47,575] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@641856
 DEBUG [2015-06-07 11:43:47,575] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@585811a4
 DEBUG [2015-06-07 11:43:47,575] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2c5d601e
 DEBUG [2015-06-07 11:43:47,575] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@f713686
 DEBUG [2015-06-07 11:43:47,575] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@7adbd080
 DEBUG [2015-06-07 11:43:47,575] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@7adbd080
 DEBUG [2015-06-07 11:43:47,575] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7adbd080
 DEBUG [2015-06-07 11:43:47,575] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@6d6bc158
 DEBUG [2015-06-07 11:43:47,575] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@6d6bc158
 DEBUG [2015-06-07 11:43:47,575] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6d6bc158
 DEBUG [2015-06-07 11:43:47,575] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@f31c0c6
 DEBUG [2015-06-07 11:43:47,575] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@f31c0c6
 DEBUG [2015-06-07 11:43:47,575] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@f31c0c6
 DEBUG [2015-06-07 11:43:47,575] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@41394595
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@41394595
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41394595
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@62f87c44
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@62f87c44
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@62f87c44
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@2970a5bc
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@2970a5bc
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2970a5bc
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@13579834
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@13579834
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13579834
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3b1bb3ab
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3b1bb3ab
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@37d80fe7
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@37d80fe7
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@15bcf458
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@15bcf458
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@69adf72c
 DEBUG [2015-06-07 11:43:47,590] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@69adf72c
 DEBUG [2015-06-07 11:43:47,606] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@70e659aa
 DEBUG [2015-06-07 11:43:47,606] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@70e659aa
 DEBUG [2015-06-07 11:43:47,606] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@200606de
 DEBUG [2015-06-07 11:43:47,606] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@200606de
 DEBUG [2015-06-07 11:43:47,606] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@6ab72419
 DEBUG [2015-06-07 11:43:47,606] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6ab72419
 DEBUG [2015-06-07 11:43:47,606] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6ab72419
 DEBUG [2015-06-07 11:43:47,606] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5be82d43
 DEBUG [2015-06-07 11:43:47,606] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@5ed190be
 DEBUG [2015-06-07 11:43:47,606] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5ed190be
 DEBUG [2015-06-07 11:43:47,606] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5ed190be
 DEBUG [2015-06-07 11:43:47,606] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7dac3fd8
 DEBUG [2015-06-07 11:43:47,621] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@6ce1f601
 DEBUG [2015-06-07 11:43:47,621] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6ce1f601
 DEBUG [2015-06-07 11:43:47,621] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@372b0d86
 DEBUG [2015-06-07 11:43:47,621] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@372b0d86
 DEBUG [2015-06-07 11:43:47,621] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70eecdc2
 DEBUG [2015-06-07 11:43:47,621] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70eecdc2
 DEBUG [2015-06-07 11:43:47,621] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@1a6f5124
 DEBUG [2015-06-07 11:43:47,621] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1a6f5124
 DEBUG [2015-06-07 11:43:47,637] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@344561e0
 DEBUG [2015-06-07 11:43:47,637] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@344561e0
 DEBUG [2015-06-07 11:43:47,637] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@52c8295b
 DEBUG [2015-06-07 11:43:47,637] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@22680f52
 DEBUG [2015-06-07 11:43:47,637] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@2575f671
 DEBUG [2015-06-07 11:43:47,637] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@2575f671
 DEBUG [2015-06-07 11:43:47,637] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@2575f671
 DEBUG [2015-06-07 11:43:47,637] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30c0ccff
 DEBUG [2015-06-07 11:43:47,637] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30c0ccff
 DEBUG [2015-06-07 11:43:47,637] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30c0ccff
 DEBUG [2015-06-07 11:43:47,637] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@5851bd4f
 DEBUG [2015-06-07 11:43:47,637] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@547e29a4
 DEBUG [2015-06-07 11:43:47,637] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@547e29a4
 DEBUG [2015-06-07 11:43:47,637] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@547e29a4
 DEBUG [2015-06-07 11:43:47,653] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c8b96ec
 DEBUG [2015-06-07 11:43:47,653] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c8b96ec
 DEBUG [2015-06-07 11:43:47,653] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c8b96ec
 DEBUG [2015-06-07 11:43:47,653] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@5949eba8
 DEBUG [2015-06-07 11:43:47,653] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@1af7f54a
 DEBUG [2015-06-07 11:43:47,653] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1af7f54a
 DEBUG [2015-06-07 11:43:47,653] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@68ed96ca
 DEBUG [2015-06-07 11:43:47,653] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@62c5bbdc
 DEBUG [2015-06-07 11:43:47,653] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@62c5bbdc
 DEBUG [2015-06-07 11:43:47,653] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@47d93e0d
 DEBUG [2015-06-07 11:43:47,653] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@3704122f
 DEBUG [2015-06-07 11:43:47,653] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@1e392345
 DEBUG [2015-06-07 11:43:47,653] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1e392345
 DEBUG [2015-06-07 11:43:47,653] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7bd69e82
 DEBUG [2015-06-07 11:43:47,653] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74d7184a
 DEBUG [2015-06-07 11:43:47,653] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@51b01960
 DEBUG [2015-06-07 11:43:47,668] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6831d8fd
 DEBUG [2015-06-07 11:43:47,668] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27dc79f7
 DEBUG [2015-06-07 11:43:47,668] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6b85300e
 DEBUG [2015-06-07 11:43:47,668] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3aaf4f07
 DEBUG [2015-06-07 11:43:47,668] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5cbf9e9f
  INFO [2015-06-07 11:43:47,684] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:43:47,684] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:43:47,700] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:43:47,700] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:43:47,700] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:43:47,762] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:43:47,762] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:43:47,762] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:43:47,762] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:43:47,762] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:43:47,762] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:43:47,762] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:43:47,762] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:43:47,778] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:43:47,778] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:43:47,778] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:43:47,778] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:43:47,778] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:43:47,778] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:43:47,778] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:43:47,825] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:43:47,825] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:43:47,840] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:43:47,872] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:43:47,872] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:43:47,888] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:43:47,888] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:43:47,919] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:43:47,919] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:43:47,919] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:43:47,919] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:43:47,935] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:43:47,935] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:43:47,935] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:43:47,935] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:43:47,935] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:43:47,935] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:43:47,935] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:43:47,935] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:43:47,951] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:43:47,951] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:43:47,951] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:43:47,951] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:43:47,951] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:43:47,951] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:43:47,951] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:43:47,951] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:43:47,951] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:43:47,951] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:43:47,951] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:43:47,951] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:43:47,951] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:43:47,951] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:43:47,951] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:43:47,966] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:43:48,391] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:43:48,391] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:43:48,490] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:43:48,521] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:43:48,521] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:43:48,521] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:43:48,521] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:43:48,537] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:43:48,537] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:43:48,537] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:43:48,537] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:43:48,537] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:43:48,537] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:43:48,552] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:43:48,568] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:43:48,568] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:43:48,568] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14478 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:43:48,584] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:43:48,724] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:43:48,724] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:43:48,724] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:43:48,724] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:43:48,724] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:43:48,724] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:43:48,771] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:43:48,771] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:43:48,771] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:43:48,771] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:43:48,771] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:43:48,771] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:43:48,771] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:43:48,771] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:43:48,771] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:43:48,771] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:43:48,787] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:43:48,787] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:43:48,802] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:43:48,818] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: c4601132-1462-4391-9e2c-67df6794d9b7 (unnamed)
  INFO [2015-06-07 11:43:48,818] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:43:48,818] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:43:48,818] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:43:48,818] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:43:48,818] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:43:48,818] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:43:48,818] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:43:48,818] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:43:48,818] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:43:48,818] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:43:48,818] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:43:48,818] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:43:48,818] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:43:48,849] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:43:48,849] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:43:48,849] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:43:48,849] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:43:48,849] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:43:48,849] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:43:48,849] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:43:48,849] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:43:48,849] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:48,884] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:43:48,884] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:43:48,884] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:43:48,884] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:43:48,884] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:43:48,884] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:48,900] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:43:48,900] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:43:48,900] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@351f2244] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:43:48,900] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:43:48,900] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:43:48,900] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:43:48,916] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:48,916] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:43:48,916] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:43:48,916] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:43:48,916] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:43:48,916] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:43:48,916] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:48,916] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:43:48,916] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:43:48,916] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:43:48,916] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:48,916] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:43:48,916] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:48,916] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:43:48,916] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:43:48,916] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:43:48,916] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:43:48,916] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:43:48,916] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:43:48,916] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:43:48,916] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:43:48,916] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:43:48,916] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:43:48,931] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@148c7c4b]
 DEBUG [2015-06-07 11:43:48,931] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:43:48,931] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:48,931] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:48,931] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:43:48,931] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:43:48,931] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:43:48,931] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:43:48,931] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:43:48,931] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:43:48,931] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:43:48,931] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:43:48,947] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:43:48,947] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:43:48,947] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.mybatisTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager1'
 DEBUG [2015-06-07 11:43:48,947] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager1'] found for test context [DefaultTestContext@21507a04 testClass = SpringTest, testInstance = com.spring.SpringTest@143640d5, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:43:48,947] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:43:48,947] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:43:48,947] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:43:48,947] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:43:48,963] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [mybatisTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager1'
 DEBUG [2015-06-07 11:43:48,978] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:43:48,994] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:43:48,994] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:43:48,994] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@73fc518f transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:43:48,994] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@21507a04 testClass = SpringTest, testInstance = com.spring.SpringTest@143640d5, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:43:48,994] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@21507a04 testClass = SpringTest, testInstance = com.spring.SpringTest@143640d5, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@151ef57f]; rollback [true]
 DEBUG [2015-06-07 11:43:48,994] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-07 11:43:49,041] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336450289
 DEBUG [2015-06-07 11:43:49,041] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-07 11:43:49,041] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:43:49,041] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 10, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:43:49,056] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:43:49,056] (DataSourceUtils.java[doGetConnection]:110) - Fetching JDBC Connection from DataSource
 DEBUG [2015-06-07 11:43:49,056] (DataSourceUtils.java[doGetConnection]:114) - Registering transaction synchronization for JDBC Connection
 DEBUG [2015-06-07 11:43:49,056] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:43:49,056] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:43:49,072] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:43:49,072] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23eff5d1]
 DEBUG [2015-06-07 11:43:49,166] (Slf4jImpl.java[debug]:28) - ==>  Executing: select * from types; 
 DEBUG [2015-06-07 11:43:49,166] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:43:49,197] (Slf4jImpl.java[debug]:28) - <==    Columns: typeId
 DEBUG [2015-06-07 11:43:49,197] (Slf4jImpl.java[debug]:28) - <==        Row: 1
 DEBUG [2015-06-07 11:43:49,197] (Slf4jImpl.java[debug]:28) - <==        Row: 19
 DEBUG [2015-06-07 11:43:49,197] (Slf4jImpl.java[debug]:28) - <==        Row: 5
 DEBUG [2015-06-07 11:43:49,197] (Slf4jImpl.java[debug]:28) - <==        Row: 73
 DEBUG [2015-06-07 11:43:49,197] (Slf4jImpl.java[debug]:28) - <==        Row: 81
 DEBUG [2015-06-07 11:43:49,197] (Slf4jImpl.java[debug]:28) - <==        Row: 96
 DEBUG [2015-06-07 11:43:49,197] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23eff5d1]
 DEBUG [2015-06-07 11:43:49,197] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@21507a04 testClass = SpringTest, testInstance = com.spring.SpringTest@143640d5, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:43:49,197] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:43:49,197] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:43:49,197] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:43:49,197] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23eff5d1]
 DEBUG [2015-06-07 11:43:49,197] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
 DEBUG [2015-06-07 11:43:49,197] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:43:49,197] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:43:49,197] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@21507a04 testClass = SpringTest, testInstance = com.spring.SpringTest@143640d5, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:43:49,197] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@21507a04 testClass = SpringTest, testInstance = com.spring.SpringTest@143640d5, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:43:49,197] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:49,197] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:49,197] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@21507a04 testClass = SpringTest, testInstance = com.spring.SpringTest@1640190a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:43:49,197] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:43:49,197] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:43:49,213] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:43:49,213] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:43:49,213] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:43:49,213] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:43:49,213] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@21507a04 testClass = SpringTest, testInstance = com.spring.SpringTest@1640190a, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:43:49,213] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:43:49,213] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:43:49,213] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:43:49,213] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:43:49,213] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:43:49,213] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:43:49,213] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:43:49,213] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@21507a04 testClass = SpringTest, testInstance = com.spring.SpringTest@1640190a, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:43:49,213] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (2) for test context [DefaultTestContext@21507a04 testClass = SpringTest, testInstance = com.spring.SpringTest@1640190a, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@382c90c2]; rollback [true]
 DEBUG [2015-06-07 11:43:49,213] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:43:49,213] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:43:49,213] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:43:49,213] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31ceba99]
 DEBUG [2015-06-07 11:43:49,228] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:43:49,228] (Slf4jImpl.java[debug]:28) - ==> Parameters: 29(Integer)
 DEBUG [2015-06-07 11:43:49,228] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31ceba99]
 DEBUG [2015-06-07 11:43:49,228] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-07 11:43:49,228] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336450292
 DEBUG [2015-06-07 11:43:49,228] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-07 11:43:49,228] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:43:49,228] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 4, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:43:49,228] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:43:49,228] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336450292
 DEBUG [2015-06-07 11:43:49,291] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:43:49,327] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 11:43:49,327] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:43:49,373] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 11:43:49,401] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 11:43:49,401] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 11:43:49,402] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 11:43:49,408] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 11:43:49,412] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 11:43:49,412] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 11:43:49,413] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 11:43:49,414] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:43:49,418] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:43:49,418] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 11:43:49,418] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:43:49,433] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 11:43:49,433] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:43:49,449] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 11:43:49,449] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 11:43:49,449] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 11:43:49,449] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:43:49,449] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:43:49,449] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:43:49,465] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:43:49,465] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:43:49,465] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 11:43:49,465] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 11:43:49,465] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 11:43:49,465] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 11:43:49,465] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:43:49,465] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:43:49,465] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:43:49,465] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:43:49,465] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:43:49,465] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:43:49,465] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:43:49,465] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:43:49,465] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:43:49,465] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:43:49,465] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 11:43:49,465] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:43:49,465] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:43:49,465] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@21507a04 testClass = SpringTest, testInstance = com.spring.SpringTest@1640190a, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:43:49,465] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:43:49,465] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:43:49,465] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:43:49,465] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31ceba99]
 DEBUG [2015-06-07 11:43:49,465] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:43:49,465] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:43:49,465] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@21507a04 testClass = SpringTest, testInstance = com.spring.SpringTest@1640190a, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:43:49,465] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@21507a04 testClass = SpringTest, testInstance = com.spring.SpringTest@1640190a, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:43:49,480] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@21507a04 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6295d394 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:43:49,480] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@23986957: startup date [Sun Jun 07 11:43:46 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:43:49,480] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:43:49,480] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:43:49,480] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:43:49,480] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@58ce9668: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:43:49,480] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'hibernateDao': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:43:49,480] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:43:49,480] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:43:49,480] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:43:49,496] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 11:43:49,496] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:45:44,876] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:45:44,977] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@38364841 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:45:44,980] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:44,983] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:45:44,996] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:45:45,013] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:45,014] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:45,017] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:45,017] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:45,026] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:45,027] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:45,030] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:45,030] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:45,031] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:45,032] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:45,035] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:45,037] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:45,042] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:45:45,043] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:45:45,043] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:45:45,277] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:45:45,278] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:45:45,282] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:45:45,283] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:45:45,334] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:45:45,401] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:45:45,535] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:45:45,557] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:45:45,560] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:45:45,642] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:45:45,665] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:45:45,676] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:45:45,697] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:45:45,718] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:45:45,817] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:45:45,819] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:45:45,823] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:45:45,824] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:45:45,828] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:45:45,829] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:45:45,830] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:45:45,831] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:45:45,832] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:45:45,833] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:45:45,834] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:45:45,834] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:45:45,836] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:45:45,837] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:45:45,838] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:45:45,839] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:45:45,842] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:45:45,843] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:45:45,882] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:45:45,978] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:45:45,979] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:45:45,981] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:45:45,982] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:45:46,471] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao': replacing [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:45:46,473] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao2': replacing [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao2]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:45:46,474] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:45:46,474] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:45:46,482] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 11:45:46 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:45:46,484] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@4fe767f3: org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao]; root of factory hierarchy
 DEBUG [2015-06-07 11:45:46,596] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:45:46,596] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:45:46,649] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:46,653] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:45:46,703] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:45:46,703] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:45:46,703] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:46,703] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:45:46,703] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:45:46,703] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:45:46,718] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:46,718] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:45:46,718] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:45:46,718] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:45:46,718] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:46,718] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:45:46,718] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:45:46,718] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:45:46,718] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:46,718] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:45:46,718] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:45:46,718] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:45:46,718] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:46,718] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:45:46,718] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:45:46,718] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:45:46,718] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:46,718] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:45:46,734] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@b1712f3]
 DEBUG [2015-06-07 11:45:46,734] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2826f61]
 DEBUG [2015-06-07 11:45:46,734] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:45:46,734] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:45:46,734] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:45:46,750] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:45:46,765] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:45:46,765] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:45:46,765] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:46,781] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:45:46,781] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:45:46,781] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:45:46,812] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:45:46,812] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:45:46,828] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:45:46,828] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:46,843] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:45:46,843] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:45:46,984] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:47,017] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:45:47,019] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:45:47,294] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:45:47,294] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:45:47,294] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:45:47,325] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:47,325] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:45:47,325] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:45:47,341] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:45:47,341] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:45:47,341] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:45:47,341] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:47,357] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:45:47,357] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:45:47,357] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:47,357] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:45:47,357] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:45:47,376] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:45:47,376] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:45:47,376] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:45:47,376] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:45:47,376] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:45:47,376] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:45:47,376] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:45:47,376] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:45:47,376] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:45:47,392] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:47,392] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:45:47,392] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:45:47,392] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:45:47,392] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:45:47,392] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:45:47,392] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:45:47,392] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:45:47,408] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:45:47,408] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:45:47,408] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:47,408] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:45:47,408] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:45:47,408] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:45:47,408] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:45:47,408] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:45:47,408] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:45:47,408] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:45:47,408] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:45:47,408] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:45:47,408] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:45:47,408] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:45:47,408] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:45:47,408] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:45:47,408] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:45:47,408] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:45:47,408] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:47,423] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:45:47,423] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:45:47,423] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:45:47,423] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:45:47,423] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:45:47,423] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:45:47,423] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:47,423] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:45:47,423] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:45:47,423] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:45:47,423] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:47,439] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:45:47,439] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:45:47,439] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:45:47,439] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:45:47,439] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:45:47,455] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:47,455] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:45:47,455] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:45:47,455] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:45:47,455] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:45:47,455] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:45:47,455] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:45:47,455] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:45:47,455] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:45:47,455] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:45:47,455] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:45:47,455] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:45:47,455] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:45:47,455] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:45:47,455] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:45:47,455] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:45:47,455] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:45:47,455] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:45:47,470] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:47,501] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:45:47,517] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:45:47,580] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@1f130eaf
 DEBUG [2015-06-07 11:45:47,580] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@1f130eaf
 DEBUG [2015-06-07 11:45:47,580] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f130eaf
 DEBUG [2015-06-07 11:45:47,580] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@655a5d9c
 DEBUG [2015-06-07 11:45:47,580] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7d61eccf
 DEBUG [2015-06-07 11:45:47,580] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@1a6f2363
 DEBUG [2015-06-07 11:45:47,580] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@585811a4
 DEBUG [2015-06-07 11:45:47,580] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@585811a4
 DEBUG [2015-06-07 11:45:47,580] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@585811a4
 DEBUG [2015-06-07 11:45:47,580] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@8ab78bc
 DEBUG [2015-06-07 11:45:47,595] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@8ab78bc
 DEBUG [2015-06-07 11:45:47,595] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@8ab78bc
 DEBUG [2015-06-07 11:45:47,595] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@3b1bb3ab
 DEBUG [2015-06-07 11:45:47,595] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@3b1bb3ab
 DEBUG [2015-06-07 11:45:47,595] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3b1bb3ab
 DEBUG [2015-06-07 11:45:47,595] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@37d80fe7
 DEBUG [2015-06-07 11:45:47,595] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@37d80fe7
 DEBUG [2015-06-07 11:45:47,595] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@37d80fe7
 DEBUG [2015-06-07 11:45:47,611] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@fac80
 DEBUG [2015-06-07 11:45:47,611] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@fac80
 DEBUG [2015-06-07 11:45:47,611] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@fac80
 DEBUG [2015-06-07 11:45:47,611] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@596df867
 DEBUG [2015-06-07 11:45:47,611] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@596df867
 DEBUG [2015-06-07 11:45:47,611] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@596df867
 DEBUG [2015-06-07 11:45:47,611] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@1827a871
 DEBUG [2015-06-07 11:45:47,611] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@1827a871
 DEBUG [2015-06-07 11:45:47,611] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1827a871
 DEBUG [2015-06-07 11:45:47,626] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1e11bc55
 DEBUG [2015-06-07 11:45:47,626] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1e11bc55
 DEBUG [2015-06-07 11:45:47,626] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@82c57b3
 DEBUG [2015-06-07 11:45:47,626] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@82c57b3
 DEBUG [2015-06-07 11:45:47,626] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@1734f68
 DEBUG [2015-06-07 11:45:47,626] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1734f68
 DEBUG [2015-06-07 11:45:47,626] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@7dac3fd8
 DEBUG [2015-06-07 11:45:47,626] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7dac3fd8
 DEBUG [2015-06-07 11:45:47,642] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@31c269fd
 DEBUG [2015-06-07 11:45:47,642] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@31c269fd
 DEBUG [2015-06-07 11:45:47,642] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@7db0565c
 DEBUG [2015-06-07 11:45:47,642] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7db0565c
 DEBUG [2015-06-07 11:45:47,642] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@29539e36
 DEBUG [2015-06-07 11:45:47,642] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@29539e36
 DEBUG [2015-06-07 11:45:47,642] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@29539e36
 DEBUG [2015-06-07 11:45:47,642] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@669253b7
 DEBUG [2015-06-07 11:45:47,658] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@36ac8a63
 DEBUG [2015-06-07 11:45:47,658] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@36ac8a63
 DEBUG [2015-06-07 11:45:47,658] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@36ac8a63
 DEBUG [2015-06-07 11:45:47,658] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@77b21474
 DEBUG [2015-06-07 11:45:47,658] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@39c11e6c
 DEBUG [2015-06-07 11:45:47,658] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@39c11e6c
 DEBUG [2015-06-07 11:45:47,658] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@329a1243
 DEBUG [2015-06-07 11:45:47,658] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@329a1243
 DEBUG [2015-06-07 11:45:47,673] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@581d969c
 DEBUG [2015-06-07 11:45:47,673] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@581d969c
 DEBUG [2015-06-07 11:45:47,673] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@7cd1ac19
 DEBUG [2015-06-07 11:45:47,673] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7cd1ac19
 DEBUG [2015-06-07 11:45:47,673] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c8b96ec
 DEBUG [2015-06-07 11:45:47,673] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c8b96ec
 DEBUG [2015-06-07 11:45:47,673] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7048f722
 DEBUG [2015-06-07 11:45:47,673] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3c291aad
 DEBUG [2015-06-07 11:45:47,689] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@28c0b664
 DEBUG [2015-06-07 11:45:47,689] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@28c0b664
 DEBUG [2015-06-07 11:45:47,689] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@28c0b664
 DEBUG [2015-06-07 11:45:47,689] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6d1310f6
 DEBUG [2015-06-07 11:45:47,689] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6d1310f6
 DEBUG [2015-06-07 11:45:47,689] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6d1310f6
 DEBUG [2015-06-07 11:45:47,689] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@29d2d081
 DEBUG [2015-06-07 11:45:47,689] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@1bc53649
 DEBUG [2015-06-07 11:45:47,689] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@1bc53649
 DEBUG [2015-06-07 11:45:47,689] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@1bc53649
 DEBUG [2015-06-07 11:45:47,689] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4d0402b
 DEBUG [2015-06-07 11:45:47,689] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4d0402b
 DEBUG [2015-06-07 11:45:47,689] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4d0402b
 DEBUG [2015-06-07 11:45:47,689] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@3f2049b6
 DEBUG [2015-06-07 11:45:47,705] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@3fabf088
 DEBUG [2015-06-07 11:45:47,705] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3fabf088
 DEBUG [2015-06-07 11:45:47,705] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2c22a348
 DEBUG [2015-06-07 11:45:47,705] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@6058e535
 DEBUG [2015-06-07 11:45:47,705] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6058e535
 DEBUG [2015-06-07 11:45:47,705] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1cefc4b3
 DEBUG [2015-06-07 11:45:47,705] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@1e53135d
 DEBUG [2015-06-07 11:45:47,720] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@33d05366
 DEBUG [2015-06-07 11:45:47,720] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@33d05366
 DEBUG [2015-06-07 11:45:47,720] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@32c0915e
 DEBUG [2015-06-07 11:45:47,720] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@106faf11
 DEBUG [2015-06-07 11:45:47,720] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@70f43b45
 DEBUG [2015-06-07 11:45:47,720] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@26d10f2e
 DEBUG [2015-06-07 11:45:47,720] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@10ad20cb
 DEBUG [2015-06-07 11:45:47,720] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7dd712e8
 DEBUG [2015-06-07 11:45:47,720] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c282004
 DEBUG [2015-06-07 11:45:47,720] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22ee2d0
  INFO [2015-06-07 11:45:47,753] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:45:47,758] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:45:47,758] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:45:47,758] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:45:47,758] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:45:47,837] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:45:47,837] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:45:47,837] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:45:47,837] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:45:47,837] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:45:47,837] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:45:47,837] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:45:47,837] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:45:47,837] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:45:47,837] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:45:47,837] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:45:47,837] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:45:47,837] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:45:47,852] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:45:47,852] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:45:47,883] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:45:47,883] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:45:47,899] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:45:47,930] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:45:47,930] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:45:47,930] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:45:47,946] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:45:47,977] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:45:47,977] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:45:47,977] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:45:47,993] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:45:47,993] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:45:47,993] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:45:47,993] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:45:47,993] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:45:47,993] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:45:47,993] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:45:47,993] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:45:47,993] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:45:48,008] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:45:48,008] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:45:48,008] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:45:48,008] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:45:48,008] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:45:48,008] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:45:48,008] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:45:48,008] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:45:48,008] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:45:48,008] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:45:48,008] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:45:48,008] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:45:48,008] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:45:48,024] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:45:48,024] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:45:48,024] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:45:48,417] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:45:48,417] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:45:48,557] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:45:48,573] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:45:48,573] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:45:48,573] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:45:48,573] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:45:48,573] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:45:48,573] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:45:48,573] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:45:48,573] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:45:48,573] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:45:48,573] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:45:48,573] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:45:48,589] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:45:48,589] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:45:48,589] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:45:48,589] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:45:48,589] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:45:48,589] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:45:48,589] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:45:48,589] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:45:48,589] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:45:48,589] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:45:48,589] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:45:48,589] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:45:48,589] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:45:48,589] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:45:48,604] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:45:48,604] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:45:48,604] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:45:48,604] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:45:48,604] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:45:48,620] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:45:48,635] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:45:48,635] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:45:48,635] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14492 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:45:48,651] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:45:48,831] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:45:48,831] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:45:48,831] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:45:48,831] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:45:48,831] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:45:48,831] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:45:48,862] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:45:48,862] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:45:48,862] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:45:48,862] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:45:48,862] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:45:48,862] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:45:48,862] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:45:48,862] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:45:48,862] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:45:48,862] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:45:48,878] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:45:48,878] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:45:48,909] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:45:48,909] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: bc697546-74c0-487d-937b-cdf74897b830 (unnamed)
  INFO [2015-06-07 11:45:48,909] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:45:48,909] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:45:48,909] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:45:48,909] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:45:48,909] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:45:48,909] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:45:48,909] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:45:48,909] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:45:48,909] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:45:48,909] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:45:48,909] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:45:48,909] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:45:48,909] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:45:48,941] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:45:48,941] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:45:48,941] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:45:48,941] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:45:48,941] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:45:48,941] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:45:48,941] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:45:48,941] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:45:48,957] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:48,973] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:45:48,973] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:45:48,973] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:45:48,973] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:45:48,973] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:45:48,988] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:49,004] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:45:49,004] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:45:49,004] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@1ff55ff] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:45:49,004] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:45:49,004] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:45:49,004] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:45:49,004] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:49,019] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:45:49,019] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:45:49,019] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:45:49,019] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:45:49,019] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:45:49,019] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:49,019] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:45:49,019] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:45:49,019] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:45:49,019] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:45:49,019] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:45:49,019] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:45:49,019] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:45:49,019] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:45:49,019] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:45:49,019] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:45:49,019] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:45:49,019] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:45:49,019] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:45:49,019] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:45:49,019] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:45:49,019] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:45:49,019] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@43da41e]
 DEBUG [2015-06-07 11:45:49,019] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:45:49,019] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:45:49,019] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:45:49,019] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:45:49,035] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:45:49,035] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:45:49,035] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:45:49,035] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:45:49,035] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:45:49,035] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:45:49,035] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:45:49,035] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:45:49,035] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:45:49,035] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.mybatisTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:45:49,051] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:45:49,051] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:45:49,051] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:45:49,051] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:45:49,051] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:45:49,051] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [mybatisTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:45:49,051] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:45:49,051] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:45:49,051] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:45:49,066] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@3c35c345 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:45:49,066] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:45:49,066] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1dc76fa1]; rollback [true]
 DEBUG [2015-06-07 11:45:49,066] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:45:49,066] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:45:49,082] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:45:49,082] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@129bd55d]
 DEBUG [2015-06-07 11:45:49,160] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:45:49,160] (Slf4jImpl.java[debug]:28) - ==> Parameters: 6(Integer)
 DEBUG [2015-06-07 11:45:49,160] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@129bd55d]
 DEBUG [2015-06-07 11:45:49,160] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-07 11:45:49,207] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336451491
 DEBUG [2015-06-07 11:45:49,207] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-07 11:45:49,207] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:45:49,223] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 60, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:45:49,238] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:45:49,238] (Slf4jImpl.java[debug]:28) - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@129bd55d] from current transaction
 DEBUG [2015-06-07 11:45:49,238] (Slf4jImpl.java[debug]:28) - ==>  Executing: select * from types; 
 DEBUG [2015-06-07 11:45:49,238] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:45:49,254] (Slf4jImpl.java[debug]:28) - <==    Columns: typeId
 DEBUG [2015-06-07 11:45:49,254] (Slf4jImpl.java[debug]:28) - <==        Row: 1
 DEBUG [2015-06-07 11:45:49,254] (Slf4jImpl.java[debug]:28) - <==        Row: 19
 DEBUG [2015-06-07 11:45:49,254] (Slf4jImpl.java[debug]:28) - <==        Row: 5
 DEBUG [2015-06-07 11:45:49,254] (Slf4jImpl.java[debug]:28) - <==        Row: 6
 DEBUG [2015-06-07 11:45:49,254] (Slf4jImpl.java[debug]:28) - <==        Row: 73
 DEBUG [2015-06-07 11:45:49,254] (Slf4jImpl.java[debug]:28) - <==        Row: 81
 DEBUG [2015-06-07 11:45:49,254] (Slf4jImpl.java[debug]:28) - <==        Row: 96
 DEBUG [2015-06-07 11:45:49,254] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@129bd55d]
 DEBUG [2015-06-07 11:45:49,254] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:45:49,254] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:45:49,254] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:45:49,254] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:45:49,254] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@129bd55d]
 DEBUG [2015-06-07 11:45:49,254] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:45:49,254] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:45:49,254] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:45:49,254] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:45:49,269] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:49,269] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:49,269] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@6c931d35, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:45:49,269] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:45:49,269] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:45:49,269] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:45:49,269] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:45:49,269] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:45:49,269] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:45:49,269] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@6c931d35, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:45:49,269] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:45:49,269] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:45:49,269] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:45:49,269] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:45:49,269] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:45:49,269] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336451492
 DEBUG [2015-06-07 11:45:49,269] (HibernateTransactionManager.java[doBegin]:498) - Opened new Session [org.hibernate.impl.SessionImpl@4beabeec] for Hibernate transaction
 DEBUG [2015-06-07 11:45:49,269] (HibernateTransactionManager.java[doBegin]:509) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4beabeec]
 DEBUG [2015-06-07 11:45:49,269] (JDBCTransaction.java[begin]:78) - begin
 DEBUG [2015-06-07 11:45:49,269] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:45:49,269] (JDBCTransaction.java[begin]:83) - current autocommit status: true
 DEBUG [2015-06-07 11:45:49,269] (JDBCTransaction.java[begin]:86) - disabling autocommit
 DEBUG [2015-06-07 11:45:49,269] (HibernateTransactionManager.java[doBegin]:574) - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:45:49,269] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@6c931d35, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:45:49,269] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (2) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@6c931d35, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@10c07b8d]; rollback [true]
 DEBUG [2015-06-07 11:45:49,269] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:45:49,269] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 86, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:45:49,269] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:45:49,269] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336451492
 DEBUG [2015-06-07 11:45:49,359] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:45:49,367] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 11:45:49,367] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:45:49,430] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 11:45:49,446] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 11:45:49,446] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 11:45:49,446] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 11:45:49,461] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 11:45:49,461] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 11:45:49,477] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 11:45:49,477] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 11:45:49,477] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:45:49,477] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:45:49,477] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 11:45:49,477] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:45:49,508] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 11:45:49,508] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:45:49,524] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 11:45:49,524] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 11:45:49,524] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 11:45:49,524] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:45:49,524] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:45:49,524] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:45:49,524] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:45:49,524] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:45:49,524] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 11:45:49,524] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 11:45:49,540] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 11:45:49,540] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 11:45:49,541] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:45:49,541] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:45:49,541] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:45:49,541] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:45:49,541] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:45:49,541] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:45:49,541] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:45:49,541] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:45:49,541] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:45:49,541] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:45:49,541] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 11:45:49,541] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:45:49,541] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:45:49,541] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@6c931d35, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:45:49,541] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:45:49,541] (HibernateTransactionManager.java[doRollback]:677) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4beabeec]
 DEBUG [2015-06-07 11:45:49,541] (JDBCTransaction.java[rollback]:182) - rollback
 DEBUG [2015-06-07 11:45:49,541] (JDBCTransaction.java[toggleAutoCommit]:223) - re-enabling autocommit
 DEBUG [2015-06-07 11:45:49,541] (JDBCTransaction.java[rollback]:193) - rolled back JDBC Connection
 DEBUG [2015-06-07 11:45:49,541] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:45:49,541] (HibernateTransactionManager.java[doCleanupAfterCompletion]:740) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4beabeec] after transaction
 DEBUG [2015-06-07 11:45:49,541] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:45:49,541] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:45:49,541] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
  INFO [2015-06-07 11:45:49,541] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@6c931d35, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:45:49,541] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@6c931d35, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:45:49,541] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:49,541] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:49,541] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:45:49,541] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:45:49,541] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:45:49,541] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:45:49,541] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:45:49,541] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:45:49,541] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.deleteTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:45:49,541] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:45:49,541] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:45:49,541] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:45:49,541] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:45:49,541] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:45:49,541] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [deleteTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:45:49,541] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:45:49,541] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:45:49,557] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:45:49,557] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (3) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1dc76fa1]; rollback [true]
 DEBUG [2015-06-07 11:45:49,557] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:45:49,557] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:45:49,557] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:45:49,557] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38eb0f4d]
 DEBUG [2015-06-07 11:45:49,557] (Slf4jImpl.java[debug]:28) - ==>  Executing: delete from types where 1=1 
 DEBUG [2015-06-07 11:45:49,557] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:45:49,557] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38eb0f4d]
 DEBUG [2015-06-07 11:45:49,557] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:45:49,557] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:45:49,557] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:45:49,557] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38eb0f4d]
 DEBUG [2015-06-07 11:45:49,557] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:45:49,557] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:45:49,557] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:45:49,557] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:45:49,557] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:45:49,557] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 11:45:46 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:45:49,573] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:45:49,573] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:45:49,573] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:45:49,573] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:45:49,573] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'hibernateDao': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:45:49,573] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:45:49,573] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:45:49,573] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:45:49,573] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 11:45:49,588] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:47:43,829] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:47:43,923] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@38364841 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:47:43,923] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:43,923] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:47:43,939] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:47:43,970] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:43,970] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:43,970] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:43,970] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:43,970] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:43,970] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:43,986] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:43,986] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:43,986] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:43,986] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:43,986] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:43,986] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:44,001] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:47:44,001] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:47:44,001] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:47:44,262] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:47:44,262] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:47:44,262] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:47:44,262] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:47:44,324] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:47:44,359] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:47:44,422] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:47:44,422] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:47:44,438] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:47:44,504] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:47:44,520] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:47:44,535] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:47:44,551] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:47:44,582] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:47:44,645] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:47:44,660] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:47:44,660] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:47:44,660] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:47:44,660] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:47:44,660] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:47:44,660] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:47:44,660] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:47:44,660] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:47:44,660] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:47:44,660] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:47:44,660] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:47:44,676] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:47:44,676] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:47:44,676] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:47:44,676] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:47:44,676] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:47:44,676] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:47:44,707] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:47:44,754] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:47:44,754] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:47:44,754] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:47:44,754] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:47:45,011] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'mybatisDao': replacing [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]] with [Generic bean: class [com.mybatis.dao.MybatisDao]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
  INFO [2015-06-07 11:47:45,011] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:47:45,011] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:47:45,027] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 11:47:45 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:47:45,027] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@4fe767f3: org.springframework.beans.factory.support.DefaultListableBeanFactory@6c4980d3: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao]; root of factory hierarchy
 DEBUG [2015-06-07 11:47:45,074] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,074] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,105] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,105] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,199] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,199] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,199] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,199] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,199] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,199] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,199] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,199] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,199] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,199] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,214] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,214] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,214] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,214] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,214] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,214] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,214] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:47:45,214] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:47:45,214] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,214] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:47:45,214] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:47:45,214] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:47:45,214] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,214] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:47:45,230] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@4df5bcb4]
 DEBUG [2015-06-07 11:47:45,230] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1e636ea3]
 DEBUG [2015-06-07 11:47:45,230] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6c4980d3: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:47:45,230] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:47:45,230] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:47:45,245] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:47:45,265] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:47:45,265] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:47:45,265] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,281] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:47:45,281] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:47:45,281] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:47:45,321] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:47:45,322] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:47:45,349] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:47:45,358] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,374] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:47:45,374] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:47:45,499] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,531] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:47:45,531] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:47:45,687] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:47:45,702] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:47:45,702] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:47:45,718] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,718] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:47:45,718] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:47:45,734] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:47:45,734] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:47:45,749] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:47:45,749] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,749] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:47:45,749] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:47:45,749] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,749] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:47:45,749] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:47:45,765] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:47:45,765] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:47:45,765] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:47:45,765] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:47:45,765] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:47:45,765] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:47:45,765] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:47:45,765] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:47:45,765] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:47:45,765] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,765] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:47:45,765] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:47:45,765] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:47:45,781] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:47:45,781] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:47:45,781] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:47:45,781] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:47:45,781] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:47:45,781] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:47:45,781] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,781] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:47:45,781] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:47:45,781] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:47:45,781] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:47:45,781] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:47:45,781] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:47:45,781] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:47:45,781] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:47:45,781] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:47:45,781] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:47:45,781] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:47:45,781] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:47:45,781] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:47:45,781] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:47:45,781] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:47:45,781] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,796] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:47:45,796] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:47:45,796] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:47:45,796] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:47:45,796] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:47:45,796] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:47:45,796] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,796] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:47:45,796] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:47:45,796] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:47:45,796] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,812] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:47:45,812] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:47:45,812] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:47:45,812] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:47:45,812] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:47:45,812] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,812] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:47:45,812] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:47:45,812] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:47:45,812] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:47:45,812] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:47:45,812] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:47:45,812] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,812] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,812] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,827] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,827] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:47:45,827] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:47:45,829] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:47:45,829] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:47:45,829] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:47:45,829] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:47:45,829] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:47:45,829] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:45,844] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:47:45,860] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:47:45,891] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@1494b84d
 DEBUG [2015-06-07 11:47:45,891] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@1494b84d
 DEBUG [2015-06-07 11:47:45,891] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1494b84d
 DEBUG [2015-06-07 11:47:45,891] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@226f885f
 DEBUG [2015-06-07 11:47:45,891] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@641856
 DEBUG [2015-06-07 11:47:45,891] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@76318a7d
 DEBUG [2015-06-07 11:47:45,891] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@5aa0dbf4
 DEBUG [2015-06-07 11:47:45,891] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@5aa0dbf4
 DEBUG [2015-06-07 11:47:45,891] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5aa0dbf4
 DEBUG [2015-06-07 11:47:45,907] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@74f7d1d2
 DEBUG [2015-06-07 11:47:45,907] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@74f7d1d2
 DEBUG [2015-06-07 11:47:45,907] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@74f7d1d2
 DEBUG [2015-06-07 11:47:45,907] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@41beb473
 DEBUG [2015-06-07 11:47:45,907] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@41beb473
 DEBUG [2015-06-07 11:47:45,907] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@41beb473
 DEBUG [2015-06-07 11:47:45,907] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@5dda6f9
 DEBUG [2015-06-07 11:47:45,907] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@5dda6f9
 DEBUG [2015-06-07 11:47:45,907] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5dda6f9
 DEBUG [2015-06-07 11:47:45,907] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@f31c0c6
 DEBUG [2015-06-07 11:47:45,907] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@f31c0c6
 DEBUG [2015-06-07 11:47:45,907] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@f31c0c6
 DEBUG [2015-06-07 11:47:45,907] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@287f94b1
 DEBUG [2015-06-07 11:47:45,907] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@287f94b1
 DEBUG [2015-06-07 11:47:45,907] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@287f94b1
 DEBUG [2015-06-07 11:47:45,907] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@2ca65ce4
 DEBUG [2015-06-07 11:47:45,922] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@2ca65ce4
 DEBUG [2015-06-07 11:47:45,922] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2ca65ce4
 DEBUG [2015-06-07 11:47:45,922] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4fbdc0f0
 DEBUG [2015-06-07 11:47:45,922] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4fbdc0f0
 DEBUG [2015-06-07 11:47:45,922] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@aec50a1
 DEBUG [2015-06-07 11:47:45,922] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@aec50a1
 DEBUG [2015-06-07 11:47:45,922] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@7c18432b
 DEBUG [2015-06-07 11:47:45,922] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@7c18432b
 DEBUG [2015-06-07 11:47:45,922] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@42a9a63e
 DEBUG [2015-06-07 11:47:45,922] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@42a9a63e
 DEBUG [2015-06-07 11:47:45,938] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@726386ed
 DEBUG [2015-06-07 11:47:45,938] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@726386ed
 DEBUG [2015-06-07 11:47:45,954] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@499b2a5c
 DEBUG [2015-06-07 11:47:45,954] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@499b2a5c
 DEBUG [2015-06-07 11:47:45,954] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@1827a871
 DEBUG [2015-06-07 11:47:45,954] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1827a871
 DEBUG [2015-06-07 11:47:45,954] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1827a871
 DEBUG [2015-06-07 11:47:45,954] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@66238be2
 DEBUG [2015-06-07 11:47:45,954] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@63fd4873
 DEBUG [2015-06-07 11:47:45,954] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63fd4873
 DEBUG [2015-06-07 11:47:45,954] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63fd4873
 DEBUG [2015-06-07 11:47:45,954] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6ab72419
 DEBUG [2015-06-07 11:47:45,969] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@72bca894
 DEBUG [2015-06-07 11:47:45,969] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@72bca894
 DEBUG [2015-06-07 11:47:45,969] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@27f9e982
 DEBUG [2015-06-07 11:47:45,969] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27f9e982
 DEBUG [2015-06-07 11:47:45,969] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d572e62
 DEBUG [2015-06-07 11:47:45,969] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d572e62
 DEBUG [2015-06-07 11:47:45,969] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@69c43e48
 DEBUG [2015-06-07 11:47:45,969] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@69c43e48
 DEBUG [2015-06-07 11:47:45,969] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2024293c
 DEBUG [2015-06-07 11:47:45,969] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2024293c
 DEBUG [2015-06-07 11:47:45,969] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5949eba8
 DEBUG [2015-06-07 11:47:45,969] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7728643a
 DEBUG [2015-06-07 11:47:45,985] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@6ebd78d1
 DEBUG [2015-06-07 11:47:45,985] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ebd78d1
 DEBUG [2015-06-07 11:47:45,985] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@6ebd78d1
 DEBUG [2015-06-07 11:47:45,985] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@50b8ae8d
 DEBUG [2015-06-07 11:47:45,985] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@50b8ae8d
 DEBUG [2015-06-07 11:47:45,985] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@50b8ae8d
 DEBUG [2015-06-07 11:47:45,985] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@3a7b503d
 DEBUG [2015-06-07 11:47:45,985] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@475b7792
 DEBUG [2015-06-07 11:47:45,985] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@475b7792
 DEBUG [2015-06-07 11:47:45,985] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@475b7792
 DEBUG [2015-06-07 11:47:45,985] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3704122f
 DEBUG [2015-06-07 11:47:45,985] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3704122f
 DEBUG [2015-06-07 11:47:45,985] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3704122f
 DEBUG [2015-06-07 11:47:45,985] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@33a2499c
 DEBUG [2015-06-07 11:47:46,000] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@4ced35ed
 DEBUG [2015-06-07 11:47:46,000] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4ced35ed
 DEBUG [2015-06-07 11:47:46,000] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51b01960
 DEBUG [2015-06-07 11:47:46,000] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@3bb9efbc
 DEBUG [2015-06-07 11:47:46,000] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bb9efbc
 DEBUG [2015-06-07 11:47:46,000] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1bdaa23d
 DEBUG [2015-06-07 11:47:46,000] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@6754ef00
 DEBUG [2015-06-07 11:47:46,016] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@33aa93c
 DEBUG [2015-06-07 11:47:46,016] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@33aa93c
 DEBUG [2015-06-07 11:47:46,016] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@26d10f2e
 DEBUG [2015-06-07 11:47:46,016] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@10ad20cb
 DEBUG [2015-06-07 11:47:46,016] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7dd712e8
 DEBUG [2015-06-07 11:47:46,016] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c282004
 DEBUG [2015-06-07 11:47:46,016] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@22ee2d0
 DEBUG [2015-06-07 11:47:46,016] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7bfc3126
 DEBUG [2015-06-07 11:47:46,016] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3e792ce3
 DEBUG [2015-06-07 11:47:46,016] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53bc1328
  INFO [2015-06-07 11:47:46,053] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:47:46,053] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:47:46,053] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:47:46,069] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:47:46,069] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:47:46,131] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:47:46,131] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:47:46,131] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:47:46,131] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:47:46,147] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:47:46,147] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:47:46,147] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:47:46,147] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:47:46,147] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:47:46,147] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:47:46,147] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:47:46,147] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:47:46,147] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:47:46,147] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:47:46,147] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:47:46,194] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:47:46,194] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:47:46,194] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:47:46,241] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:47:46,256] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:47:46,256] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:47:46,272] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:47:46,305] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:47:46,321] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:47:46,321] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:47:46,321] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:47:46,337] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:47:46,337] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:47:46,337] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:47:46,337] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:47:46,337] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:47:46,337] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:47:46,337] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:47:46,337] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:47:46,337] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:47:46,337] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:47:46,337] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:47:46,337] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:47:46,337] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:47:46,337] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:47:46,337] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:47:46,337] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:47:46,337] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:47:46,337] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:47:46,337] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:47:46,337] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:47:46,352] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:47:46,352] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:47:46,352] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:47:46,352] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:47:46,696] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:47:46,696] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:47:46,831] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:47:46,861] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:47:46,861] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:47:46,861] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:47:46,861] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:47:46,877] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:47:46,877] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:47:46,877] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:47:46,877] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:47:46,877] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:47:46,877] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:47:46,892] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:47:46,908] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:47:46,908] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:47:46,908] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14501 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:47:46,923] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:47:47,076] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:47:47,076] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:47:47,076] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:47:47,076] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:47:47,076] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:47:47,076] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:47:47,107] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:47:47,107] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:47:47,107] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:47:47,107] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:47:47,107] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:47:47,107] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:47:47,107] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:47:47,107] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:47:47,107] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:47:47,107] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:47:47,123] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:47:47,123] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:47:47,154] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:47:47,154] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: edec05c1-0c2f-4cf8-b30e-71ea7a08ad55 (unnamed)
  INFO [2015-06-07 11:47:47,154] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:47:47,154] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:47:47,154] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:47:47,154] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:47:47,154] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:47:47,154] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:47:47,170] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:47:47,170] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:47:47,170] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:47:47,170] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:47:47,170] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:47:47,170] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:47:47,170] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:47:47,186] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:47:47,186] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:47:47,186] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:47:47,186] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:47:47,186] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:47:47,201] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:47:47,201] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:47:47,201] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:47:47,201] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:47,217] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:47:47,217] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:47:47,217] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:47:47,217] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:47:47,217] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:47:47,232] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:47,248] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:47:47,248] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:47:47,248] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@1ff55ff] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:47:47,248] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:47:47,248] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:47:47,248] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:47:47,248] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:47,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:47:47,264] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:47:47,264] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:47:47,264] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:47:47,264] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:47:47,264] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:47,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:47:47,264] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:47:47,264] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:47:47,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:47:47,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:47:47,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:47:47,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:47:47,264] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:47:47,264] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:47:47,264] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:47:47,264] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:47:47,264] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:47:47,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:47:47,264] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:47:47,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:47:47,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:47:47,264] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@43da41e]
 DEBUG [2015-06-07 11:47:47,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:47:47,279] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:47:47,279] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:47:47,279] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:47:47,279] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:47:47,279] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:47:47,279] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:47:47,279] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:47:47,279] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:47:47,279] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:47:47,279] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:47:47,279] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:47:47,279] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:47:47,295] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.mybatisTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:47:47,295] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:47:47,295] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:47:47,295] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:47:47,295] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:47:47,295] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:47:47,295] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [mybatisTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:47:47,295] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:47:47,311] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:47:47,311] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:47:47,311] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@3c35c345 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:47:47,311] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:47:47,311] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1dc76fa1]; rollback [true]
 DEBUG [2015-06-07 11:47:47,311] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:47:47,311] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:47:47,326] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:47:47,326] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@129bd55d]
 DEBUG [2015-06-07 11:47:47,406] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:47:47,406] (Slf4jImpl.java[debug]:28) - ==> Parameters: 61(Integer)
 DEBUG [2015-06-07 11:47:47,406] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@129bd55d]
 DEBUG [2015-06-07 11:47:47,406] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-07 11:47:47,453] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336452674
 DEBUG [2015-06-07 11:47:47,453] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-07 11:47:47,453] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:47:47,469] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 83, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:47:47,484] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:47:47,484] (Slf4jImpl.java[debug]:28) - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@129bd55d] from current transaction
 DEBUG [2015-06-07 11:47:47,484] (Slf4jImpl.java[debug]:28) - ==>  Executing: select * from types; 
 DEBUG [2015-06-07 11:47:47,484] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:47:47,500] (Slf4jImpl.java[debug]:28) - <==    Columns: typeId
 DEBUG [2015-06-07 11:47:47,500] (Slf4jImpl.java[debug]:28) - <==        Row: 1
 DEBUG [2015-06-07 11:47:47,500] (Slf4jImpl.java[debug]:28) - <==        Row: 19
 DEBUG [2015-06-07 11:47:47,500] (Slf4jImpl.java[debug]:28) - <==        Row: 5
 DEBUG [2015-06-07 11:47:47,500] (Slf4jImpl.java[debug]:28) - <==        Row: 61
 DEBUG [2015-06-07 11:47:47,500] (Slf4jImpl.java[debug]:28) - <==        Row: 73
 DEBUG [2015-06-07 11:47:47,500] (Slf4jImpl.java[debug]:28) - <==        Row: 81
 DEBUG [2015-06-07 11:47:47,500] (Slf4jImpl.java[debug]:28) - <==        Row: 96
 DEBUG [2015-06-07 11:47:47,500] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@129bd55d]
 DEBUG [2015-06-07 11:47:47,500] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:47:47,500] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:47:47,500] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:47:47,516] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:47:47,516] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@129bd55d]
 DEBUG [2015-06-07 11:47:47,516] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:47:47,516] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:47:47,516] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:47:47,516] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:47:47,516] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:47,516] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:47,516] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@6c931d35, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:47:47,516] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:47:47,516] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:47:47,516] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:47:47,516] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:47:47,516] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:47:47,516] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:47:47,516] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@6c931d35, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:47:47,516] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:47:47,516] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:47:47,516] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:47:47,516] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:47:47,516] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:47:47,516] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336452675
 DEBUG [2015-06-07 11:47:47,516] (HibernateTransactionManager.java[doBegin]:498) - Opened new Session [org.hibernate.impl.SessionImpl@4beabeec] for Hibernate transaction
 DEBUG [2015-06-07 11:47:47,516] (HibernateTransactionManager.java[doBegin]:509) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4beabeec]
 DEBUG [2015-06-07 11:47:47,531] (JDBCTransaction.java[begin]:78) - begin
 DEBUG [2015-06-07 11:47:47,531] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:47:47,531] (JDBCTransaction.java[begin]:83) - current autocommit status: true
 DEBUG [2015-06-07 11:47:47,531] (JDBCTransaction.java[begin]:86) - disabling autocommit
 DEBUG [2015-06-07 11:47:47,531] (HibernateTransactionManager.java[doBegin]:574) - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:47:47,531] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@6c931d35, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:47:47,531] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (2) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@6c931d35, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@10c07b8d]; rollback [true]
 DEBUG [2015-06-07 11:47:47,531] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:47:47,531] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 39, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:47:47,531] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:47:47,531] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336452675
 DEBUG [2015-06-07 11:47:47,593] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:47:47,593] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 11:47:47,593] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:47:47,640] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 11:47:47,656] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 11:47:47,656] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 11:47:47,656] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 11:47:47,656] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 11:47:47,656] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 11:47:47,656] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 11:47:47,656] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 11:47:47,656] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:47:47,687] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:47:47,687] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 11:47:47,687] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:47:47,687] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 11:47:47,687] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:47:47,718] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 11:47:47,718] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 11:47:47,718] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 11:47:47,718] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:47:47,718] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:47:47,718] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:47:47,718] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:47:47,718] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:47:47,718] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 11:47:47,718] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 11:47:47,718] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 11:47:47,718] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 11:47:47,718] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:47:47,718] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:47:47,718] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:47:47,718] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:47:47,718] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:47:47,718] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:47:47,718] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:47:47,718] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:47:47,718] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:47:47,718] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:47:47,718] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 11:47:47,718] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:47:47,734] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:47:47,734] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@6c931d35, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:47:47,734] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:47:47,734] (HibernateTransactionManager.java[doRollback]:677) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4beabeec]
 DEBUG [2015-06-07 11:47:47,734] (JDBCTransaction.java[rollback]:182) - rollback
 DEBUG [2015-06-07 11:47:47,734] (JDBCTransaction.java[toggleAutoCommit]:223) - re-enabling autocommit
 DEBUG [2015-06-07 11:47:47,734] (JDBCTransaction.java[rollback]:193) - rolled back JDBC Connection
 DEBUG [2015-06-07 11:47:47,734] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:47:47,734] (HibernateTransactionManager.java[doCleanupAfterCompletion]:740) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4beabeec] after transaction
 DEBUG [2015-06-07 11:47:47,734] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:47:47,734] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:47:47,734] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
  INFO [2015-06-07 11:47:47,734] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@6c931d35, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:47:47,734] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@6c931d35, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:47:47,734] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:47,734] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:47,734] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:47:47,734] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:47:47,734] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:47:47,734] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:47:47,734] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:47:47,734] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:47:47,734] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.deleteTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:47:47,734] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:47:47,734] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:47:47,734] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:47:47,734] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:47:47,734] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:47:47,734] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [deleteTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:47:47,734] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:47:47,734] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:47:47,734] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:47:47,734] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (3) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1dc76fa1]; rollback [true]
 DEBUG [2015-06-07 11:47:47,734] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:47:47,734] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:47:47,734] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:47:47,734] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38eb0f4d]
 DEBUG [2015-06-07 11:47:47,734] (Slf4jImpl.java[debug]:28) - ==>  Executing: delete from types where 1=1 
 DEBUG [2015-06-07 11:47:47,734] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:47:47,734] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38eb0f4d]
 DEBUG [2015-06-07 11:47:47,734] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:47:47,734] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:47:47,734] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:47:47,749] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38eb0f4d]
 DEBUG [2015-06-07 11:47:47,749] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:47:47,749] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:47:47,749] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:47:47,749] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@709ed6f3, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:47:47,749] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:47:47,749] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 11:47:45 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:47:47,765] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:47:47,765] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:47:47,765] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:47:47,765] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6c4980d3: defining beans [mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,hibernateDao,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:47:47,765] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'hibernateDao': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:47:47,765] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:47:47,765] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:47:47,765] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:47:47,781] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 11:47:47,781] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:48:36,179] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:48:36,257] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@38364841 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 11:48:36,273] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:36,273] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 11:48:36,273] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 11:48:36,288] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:36,288] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:36,304] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:36,304] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:36,304] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:36,304] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:36,304] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:36,304] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:36,304] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:36,304] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:36,304] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:36,304] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:36,319] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:48:36,319] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 11:48:36,319] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:48:36,508] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 11:48:36,508] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:48:36,524] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 11:48:36,524] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 11:48:36,555] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 11:48:36,588] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 11:48:36,666] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 11:48:36,666] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 11:48:36,681] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 11:48:36,744] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 11:48:36,744] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 11:48:36,759] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 11:48:36,775] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 11:48:36,791] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 11:48:36,853] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 11:48:36,853] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:48:36,853] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:48:36,853] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 11:48:36,853] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 11:48:36,853] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:48:36,853] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:48:36,853] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:48:36,869] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:48:36,869] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:48:36,869] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:48:36,869] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:48:36,869] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:48:36,869] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:48:36,869] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:48:36,869] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:48:36,869] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 11:48:36,869] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 11:48:36,900] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 11:48:36,947] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class]
 DEBUG [2015-06-07 11:48:36,963] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 11:48:36,963] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 11:48:36,963] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 11:48:36,963] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 11:48:37,248] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 11:48:37,263] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 11:48:37,263] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 11:48:37 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:48:37,263] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@4fe767f3: org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2]; root of factory hierarchy
 DEBUG [2015-06-07 11:48:37,336] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:48:37,336] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:48:37,366] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:37,371] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:48:37,454] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:48:37,455] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:48:37,456] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:37,457] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:48:37,457] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:48:37,458] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:48:37,459] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:37,460] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:48:37,460] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:48:37,460] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:48:37,468] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:37,469] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:48:37,469] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:48:37,469] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:48:37,472] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:37,473] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:48:37,473] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:48:37,473] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:48:37,474] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:37,474] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:48:37,475] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:48:37,475] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:48:37,475] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:37,476] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:48:37,483] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@b1712f3]
 DEBUG [2015-06-07 11:48:37,487] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2826f61]
 DEBUG [2015-06-07 11:48:37,497] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:48:37,498] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:48:37,498] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:48:37,510] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:48:37,512] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:37,533] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 11:48:37,533] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:48:37,533] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:48:37,551] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:37,598] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:48:37,598] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:48:37,613] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:37,639] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:48:37,639] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:48:37,799] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:37,820] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 11:48:37,834] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:48:37,909] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@619bfe29
 DEBUG [2015-06-07 11:48:37,910] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@619bfe29
 DEBUG [2015-06-07 11:48:37,910] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@619bfe29
 DEBUG [2015-06-07 11:48:37,913] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30f5a68a
 DEBUG [2015-06-07 11:48:37,916] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@a8c1f44
 DEBUG [2015-06-07 11:48:37,918] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@3a62c01e
 DEBUG [2015-06-07 11:48:37,923] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4264b240
 DEBUG [2015-06-07 11:48:37,924] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4264b240
 DEBUG [2015-06-07 11:48:37,924] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4264b240
 DEBUG [2015-06-07 11:48:37,928] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@76f7d241
 DEBUG [2015-06-07 11:48:37,928] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@76f7d241
 DEBUG [2015-06-07 11:48:37,929] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@76f7d241
 DEBUG [2015-06-07 11:48:37,934] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@2dbe250d
 DEBUG [2015-06-07 11:48:37,934] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@2dbe250d
 DEBUG [2015-06-07 11:48:37,934] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2dbe250d
 DEBUG [2015-06-07 11:48:37,939] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@56ace400
 DEBUG [2015-06-07 11:48:37,940] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@56ace400
 DEBUG [2015-06-07 11:48:37,940] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56ace400
 DEBUG [2015-06-07 11:48:37,946] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@5ed731d0
 DEBUG [2015-06-07 11:48:37,948] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@5ed731d0
 DEBUG [2015-06-07 11:48:37,948] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5ed731d0
 DEBUG [2015-06-07 11:48:37,952] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@78fb9a67
 DEBUG [2015-06-07 11:48:37,952] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@78fb9a67
 DEBUG [2015-06-07 11:48:37,952] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@78fb9a67
 DEBUG [2015-06-07 11:48:37,955] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@7829b776
 DEBUG [2015-06-07 11:48:37,955] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@7829b776
 DEBUG [2015-06-07 11:48:37,956] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7829b776
 DEBUG [2015-06-07 11:48:37,964] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@274872f8
 DEBUG [2015-06-07 11:48:37,965] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@274872f8
 DEBUG [2015-06-07 11:48:37,967] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a39fe6a
 DEBUG [2015-06-07 11:48:37,967] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a39fe6a
 DEBUG [2015-06-07 11:48:37,969] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@592e843a
 DEBUG [2015-06-07 11:48:37,969] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@592e843a
 DEBUG [2015-06-07 11:48:37,971] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@4ebea12c
 DEBUG [2015-06-07 11:48:37,971] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4ebea12c
 DEBUG [2015-06-07 11:48:37,971] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@52b56a3e
 DEBUG [2015-06-07 11:48:37,971] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@52b56a3e
 DEBUG [2015-06-07 11:48:37,971] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@226642a5
 DEBUG [2015-06-07 11:48:37,971] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@226642a5
 DEBUG [2015-06-07 11:48:37,971] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@119f1f2a
 DEBUG [2015-06-07 11:48:37,971] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@119f1f2a
 DEBUG [2015-06-07 11:48:37,971] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@119f1f2a
 DEBUG [2015-06-07 11:48:37,971] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a1da881
 DEBUG [2015-06-07 11:48:37,986] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@3f2ef586
 DEBUG [2015-06-07 11:48:37,986] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3f2ef586
 DEBUG [2015-06-07 11:48:37,986] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3f2ef586
 DEBUG [2015-06-07 11:48:37,986] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2cf92cc7
 DEBUG [2015-06-07 11:48:37,986] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@5d465e4b
 DEBUG [2015-06-07 11:48:37,986] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5d465e4b
 DEBUG [2015-06-07 11:48:37,986] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@78aea4b9
 DEBUG [2015-06-07 11:48:37,986] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@78aea4b9
 DEBUG [2015-06-07 11:48:37,986] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@76a36b71
 DEBUG [2015-06-07 11:48:37,986] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@76a36b71
 DEBUG [2015-06-07 11:48:37,986] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@4a9f80d3
 DEBUG [2015-06-07 11:48:37,986] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4a9f80d3
 DEBUG [2015-06-07 11:48:37,986] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5bda80bf
 DEBUG [2015-06-07 11:48:37,986] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5bda80bf
 DEBUG [2015-06-07 11:48:37,986] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@51df223b
 DEBUG [2015-06-07 11:48:38,002] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3e2822
 DEBUG [2015-06-07 11:48:38,002] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@533b266e
 DEBUG [2015-06-07 11:48:38,002] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@533b266e
 DEBUG [2015-06-07 11:48:38,002] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@533b266e
 DEBUG [2015-06-07 11:48:38,002] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5b6813df
 DEBUG [2015-06-07 11:48:38,002] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5b6813df
 DEBUG [2015-06-07 11:48:38,002] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5b6813df
 DEBUG [2015-06-07 11:48:38,002] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@1e044120
 DEBUG [2015-06-07 11:48:38,002] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@60b71e8f
 DEBUG [2015-06-07 11:48:38,002] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@60b71e8f
 DEBUG [2015-06-07 11:48:38,002] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@60b71e8f
 DEBUG [2015-06-07 11:48:38,002] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51e4ccb3
 DEBUG [2015-06-07 11:48:38,002] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51e4ccb3
 DEBUG [2015-06-07 11:48:38,002] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51e4ccb3
 DEBUG [2015-06-07 11:48:38,002] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@841e575
 DEBUG [2015-06-07 11:48:38,002] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@6e521c1e
 DEBUG [2015-06-07 11:48:38,017] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6e521c1e
 DEBUG [2015-06-07 11:48:38,017] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4ef27d66
 DEBUG [2015-06-07 11:48:38,017] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@25bcd0c7
 DEBUG [2015-06-07 11:48:38,017] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@25bcd0c7
 DEBUG [2015-06-07 11:48:38,017] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a4e343
 DEBUG [2015-06-07 11:48:38,017] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@3954d008
 DEBUG [2015-06-07 11:48:38,017] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@2cab9998
 DEBUG [2015-06-07 11:48:38,017] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2cab9998
 DEBUG [2015-06-07 11:48:38,017] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a8a60bc
 DEBUG [2015-06-07 11:48:38,017] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@361c294e
 DEBUG [2015-06-07 11:48:38,017] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7859e786
 DEBUG [2015-06-07 11:48:38,017] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@285d851a
 DEBUG [2015-06-07 11:48:38,017] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@314b8f2d
 DEBUG [2015-06-07 11:48:38,017] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@664a9613
 DEBUG [2015-06-07 11:48:38,017] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5118388b
 DEBUG [2015-06-07 11:48:38,017] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15a902e7
  INFO [2015-06-07 11:48:38,049] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 11:48:38,049] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 11:48:38,049] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 11:48:38,065] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 11:48:38,065] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 11:48:38,143] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 11:48:38,143] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 11:48:38,143] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:48:38,143] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 11:48:38,143] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 11:48:38,143] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 11:48:38,143] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 11:48:38,143] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 11:48:38,143] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 11:48:38,143] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 11:48:38,143] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 11:48:38,143] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 11:48:38,143] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 11:48:38,143] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 11:48:38,159] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 11:48:38,206] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:48:38,206] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 11:48:38,206] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:48:38,253] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 11:48:38,253] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 11:48:38,253] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 11:48:38,253] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 11:48:38,288] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 11:48:38,304] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 11:48:38,304] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 11:48:38,304] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 11:48:38,304] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 11:48:38,319] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:48:38,319] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:48:38,319] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:48:38,319] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:48:38,319] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:48:38,319] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:48:38,319] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:48:38,319] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 11:48:38,335] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 11:48:38,335] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 11:48:38,335] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:48:38,335] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:48:38,335] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:48:38,335] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:48:38,335] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:48:38,335] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:48:38,335] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:48:38,335] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:48:38,335] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 11:48:38,335] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 11:48:38,351] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 11:48:38,351] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 11:48:38,351] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 11:48:38,710] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 11:48:38,710] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 11:48:38,726] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 11:48:38,741] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 11:48:38,741] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 11:48:38,741] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 11:48:38,741] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 11:48:38,741] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 11:48:38,741] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 11:48:38,741] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 11:48:38,741] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 11:48:38,741] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 11:48:38,741] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 11:48:38,741] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 11:48:38,741] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 11:48:38,757] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 11:48:38,757] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 11:48:38,757] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 11:48:38,757] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 11:48:38,757] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 11:48:38,757] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 11:48:38,757] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 11:48:38,757] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 11:48:38,757] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 11:48:38,757] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 11:48:38,757] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 11:48:38,757] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 11:48:38,757] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 11:48:38,772] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 11:48:38,772] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 11:48:38,772] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 11:48:38,772] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 11:48:38,772] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 11:48:38,804] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 11:48:38,804] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 11:48:38,804] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 11:48:38,804] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 14509 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 11:48:38,819] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:48:38,960] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 11:48:38,960] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 11:48:38,960] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 11:48:38,960] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 11:48:38,960] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 11:48:38,960] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 11:48:38,976] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:48:38,991] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:48:38,991] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:48:38,992] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:48:38,992] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:48:38,992] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 11:48:38,992] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:48:38,992] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 11:48:38,992] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:48:38,992] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:48:38,992] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:48:38,992] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 11:48:39,117] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 11:48:39,117] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: efde42b4-0624-4126-96ff-602aef577cbb (unnamed)
  INFO [2015-06-07 11:48:39,117] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 11:48:39,117] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 11:48:39,135] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 11:48:39,135] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 11:48:39,137] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 11:48:39,137] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 11:48:39,137] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 11:48:39,137] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 11:48:39,137] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 11:48:39,137] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 11:48:39,137] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 11:48:39,137] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 11:48:39,137] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 11:48:39,168] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 11:48:39,168] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 11:48:39,168] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 11:48:39,168] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 11:48:39,168] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 11:48:39,168] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:48:39,168] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 11:48:39,168] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:48:39,168] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 11:48:39,168] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 11:48:39,168] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:48:39,168] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:48:39,184] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:48:39,184] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:48:39,184] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:39,184] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 11:48:39,184] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:48:39,184] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:48:39,199] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:48:39,199] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:48:39,199] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 11:48:39,215] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:39,215] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:48:39,215] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:48:39,215] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:39,215] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 11:48:39,215] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 11:48:39,387] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:48:39,387] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:48:39,387] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:48:39,403] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:39,403] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:48:39,403] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:48:39,419] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:48:39,419] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:48:39,419] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:48:39,419] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:39,419] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:48:39,419] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:48:39,450] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 11:48:39,450] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 11:48:39,450] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:48:39,450] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:48:39,450] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:48:39,450] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:48:39,450] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:48:39,450] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:48:39,450] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:48:39,450] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:39,450] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:48:39,450] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:48:39,450] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 11:48:39,450] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 11:48:39,450] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:48:39,450] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:48:39,465] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:48:39,465] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:48:39,465] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:48:39,465] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:39,465] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 11:48:39,465] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:48:39,465] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 11:48:39,465] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:48:39,465] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:48:39,465] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 11:48:39,465] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 11:48:39,465] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:48:39,465] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:48:39,465] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:48:39,465] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 11:48:39,465] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 11:48:39,465] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:48:39,465] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:48:39,465] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:48:39,465] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:39,481] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 11:48:39,481] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 11:48:39,481] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 11:48:39,481] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 11:48:39,481] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:48:39,481] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:48:39,481] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:39,481] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 11:48:39,497] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:48:39,497] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:48:39,497] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:39,497] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 11:48:39,512] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 11:48:39,512] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 11:48:39,512] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:48:39,512] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:48:39,512] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:39,512] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 11:48:39,512] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 11:48:39,512] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 11:48:39,512] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 11:48:39,512] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 11:48:39,512] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 11:48:39,512] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 11:48:39,512] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 11:48:39,512] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 11:48:39,512] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 11:48:39,512] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 11:48:39,512] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 11:48:39,512] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 11:48:39,512] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:48:39,512] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:48:39,512] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:48:39,512] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 11:48:39,512] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:48:39,512] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:48:39,528] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:39,544] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 11:48:39,544] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 11:48:39,559] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@4afd21c6] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 11:48:39,559] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:48:39,559] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:48:39,559] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:48:39,559] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:39,575] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 11:48:39,575] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 11:48:39,575] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 11:48:39,575] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:48:39,575] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:48:39,575] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 11:48:39,575] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 11:48:39,575] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 11:48:39,575] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 11:48:39,575] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:48:39,575] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 11:48:39,575] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:48:39,575] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 11:48:39,575] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 11:48:39,575] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 11:48:39,575] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@4d27d9d]
 DEBUG [2015-06-07 11:48:39,575] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:48:39,590] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:48:39,590] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:48:39,590] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 11:48:39,590] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 11:48:39,590] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 11:48:39,590] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:48:39,590] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:48:39,590] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:48:39,590] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 11:48:39,590] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:48:39,590] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:48:39,590] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 11:48:39,606] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.mybatisTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:48:39,606] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:48:39,606] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:48:39,606] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:48:39,606] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:48:39,606] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:48:39,622] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [mybatisTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:48:39,622] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:48:39,637] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:48:39,637] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:48:39,637] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@149c3204 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 11:48:39,637] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:48:39,637] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4e6f2bb5]; rollback [true]
 DEBUG [2015-06-07 11:48:39,637] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:48:39,637] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:48:39,653] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:48:39,653] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 11:48:39,778] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 11:48:39,778] (Slf4jImpl.java[debug]:28) - ==> Parameters: 57(Integer)
 DEBUG [2015-06-07 11:48:39,794] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 11:48:39,794] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-07 11:48:39,840] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336453197
 DEBUG [2015-06-07 11:48:39,840] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-07 11:48:39,840] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:48:39,840] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 86, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:48:39,856] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:48:39,856] (Slf4jImpl.java[debug]:28) - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5] from current transaction
 DEBUG [2015-06-07 11:48:39,856] (Slf4jImpl.java[debug]:28) - ==>  Executing: select * from types; 
 DEBUG [2015-06-07 11:48:39,856] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:48:39,872] (Slf4jImpl.java[debug]:28) - <==    Columns: typeId
 DEBUG [2015-06-07 11:48:39,872] (Slf4jImpl.java[debug]:28) - <==        Row: 1
 DEBUG [2015-06-07 11:48:39,872] (Slf4jImpl.java[debug]:28) - <==        Row: 19
 DEBUG [2015-06-07 11:48:39,872] (Slf4jImpl.java[debug]:28) - <==        Row: 5
 DEBUG [2015-06-07 11:48:39,872] (Slf4jImpl.java[debug]:28) - <==        Row: 57
 DEBUG [2015-06-07 11:48:39,872] (Slf4jImpl.java[debug]:28) - <==        Row: 73
 DEBUG [2015-06-07 11:48:39,872] (Slf4jImpl.java[debug]:28) - <==        Row: 81
 DEBUG [2015-06-07 11:48:39,872] (Slf4jImpl.java[debug]:28) - <==        Row: 96
 DEBUG [2015-06-07 11:48:39,872] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 11:48:39,872] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:48:39,872] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:48:39,872] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:48:39,887] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:48:39,887] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 11:48:39,887] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:48:39,887] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:48:39,887] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:48:39,887] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:48:39,887] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:39,887] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:39,887] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:48:39,887] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:48:39,887] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:48:39,887] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:48:39,887] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:48:39,887] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:48:39,887] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:48:39,887] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:48:39,887] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:48:39,887] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:48:39,887] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:48:39,887] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:48:39,887] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:48:39,887] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336453198
 DEBUG [2015-06-07 11:48:39,887] (HibernateTransactionManager.java[doBegin]:498) - Opened new Session [org.hibernate.impl.SessionImpl@a2ddf26] for Hibernate transaction
 DEBUG [2015-06-07 11:48:39,887] (HibernateTransactionManager.java[doBegin]:509) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@a2ddf26]
 DEBUG [2015-06-07 11:48:39,903] (JDBCTransaction.java[begin]:78) - begin
 DEBUG [2015-06-07 11:48:39,903] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:48:39,903] (JDBCTransaction.java[begin]:83) - current autocommit status: true
 DEBUG [2015-06-07 11:48:39,903] (JDBCTransaction.java[begin]:86) - disabling autocommit
 DEBUG [2015-06-07 11:48:39,903] (HibernateTransactionManager.java[doBegin]:574) - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:48:39,903] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:48:39,903] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (2) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@16e7b402]; rollback [true]
 DEBUG [2015-06-07 11:48:39,903] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 11:48:39,903] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 17, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 11:48:39,903] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 11:48:39,919] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336453199
 DEBUG [2015-06-07 11:48:39,981] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:48:39,997] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 11:48:39,997] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:48:40,044] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 11:48:40,075] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 11:48:40,075] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 11:48:40,075] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 11:48:40,090] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 11:48:40,090] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 11:48:40,090] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 11:48:40,090] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 11:48:40,090] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:48:40,106] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 11:48:40,106] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 11:48:40,106] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 11:48:40,122] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 11:48:40,122] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 11:48:40,137] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 11:48:40,137] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 11:48:40,154] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 11:48:40,154] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:48:40,154] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:48:40,154] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:48:40,154] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:48:40,154] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:48:40,154] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 11:48:40,154] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 11:48:40,154] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 11:48:40,154] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 11:48:40,154] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:48:40,154] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 11:48:40,154] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:48:40,154] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 11:48:40,154] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:48:40,154] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 11:48:40,154] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:48:40,154] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 11:48:40,154] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:48:40,154] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 11:48:40,154] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 11:48:40,154] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:48:40,154] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:48:40,154] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:48:40,154] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:48:40,154] (HibernateTransactionManager.java[doRollback]:677) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@a2ddf26]
 DEBUG [2015-06-07 11:48:40,154] (JDBCTransaction.java[rollback]:182) - rollback
 DEBUG [2015-06-07 11:48:40,154] (JDBCTransaction.java[toggleAutoCommit]:223) - re-enabling autocommit
 DEBUG [2015-06-07 11:48:40,154] (JDBCTransaction.java[rollback]:193) - rolled back JDBC Connection
 DEBUG [2015-06-07 11:48:40,154] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 11:48:40,154] (HibernateTransactionManager.java[doCleanupAfterCompletion]:740) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@a2ddf26] after transaction
 DEBUG [2015-06-07 11:48:40,154] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 11:48:40,154] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 11:48:40,154] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
  INFO [2015-06-07 11:48:40,154] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:48:40,154] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:48:40,170] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:40,170] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:40,170] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 11:48:40,170] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:48:40,170] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 11:48:40,170] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 11:48:40,170] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 11:48:40,170] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 11:48:40,170] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.deleteTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:48:40,170] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:48:40,170] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:48:40,170] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 11:48:40,170] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 11:48:40,170] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 11:48:40,170] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [deleteTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 11:48:40,170] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 11:48:40,170] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 11:48:40,170] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 11:48:40,170] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (3) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4e6f2bb5]; rollback [true]
 DEBUG [2015-06-07 11:48:40,170] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:48:40,170] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 11:48:40,170] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 11:48:40,170] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d33393]
 DEBUG [2015-06-07 11:48:40,170] (Slf4jImpl.java[debug]:28) - ==>  Executing: delete from types where 1=1 
 DEBUG [2015-06-07 11:48:40,170] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 11:48:40,170] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d33393]
 DEBUG [2015-06-07 11:48:40,170] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 11:48:40,170] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 11:48:40,170] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 11:48:40,170] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d33393]
 DEBUG [2015-06-07 11:48:40,185] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 11:48:40,185] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 11:48:40,185] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 11:48:40,185] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 11:48:40,185] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 11:48:40,185] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 11:48:37 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 11:48:40,185] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 11:48:40,185] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 11:48:40,185] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 11:48:40,185] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 11:48:40,185] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'mybatisService': [com.spring.SpringTest]
 DEBUG [2015-06-07 11:48:40,201] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 11:48:40,201] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 11:48:40,201] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 11:48:40,201] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 11:48:40,201] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 17:14:17,480] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 17:14:17,620] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@38364841 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 17:14:17,636] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:17,636] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 17:14:17,652] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 17:14:17,668] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:17,668] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:17,684] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:17,684] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:17,684] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:17,684] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:17,699] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:17,699] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:17,699] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:17,699] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:17,699] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:17,699] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:17,715] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 17:14:17,715] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 17:14:17,715] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:17,981] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 17:14:17,996] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 17:14:17,996] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 17:14:17,996] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 17:14:18,074] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 17:14:18,137] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 17:14:18,250] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 17:14:18,262] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 17:14:18,266] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 17:14:18,348] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 17:14:18,364] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 17:14:18,380] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 17:14:18,411] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 17:14:18,427] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 17:14:18,505] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 17:14:18,505] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:18,505] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:18,505] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:18,520] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 17:14:18,520] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:18,520] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:18,520] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:18,520] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:18,536] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:18,536] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:18,536] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:18,536] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:18,536] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:18,536] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:18,536] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:18,552] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:18,552] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 17:14:18,598] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 17:14:18,661] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class]
 DEBUG [2015-06-07 17:14:18,661] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 17:14:18,677] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 17:14:18,677] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 17:14:18,677] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 17:14:19,036] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 17:14:19,036] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 17:14:19,052] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 17:14:19 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 17:14:19,067] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@4fe767f3: org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2]; root of factory hierarchy
 DEBUG [2015-06-07 17:14:19,147] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 17:14:19,147] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 17:14:19,202] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:19,206] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 17:14:19,300] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:19,300] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:19,305] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:19,305] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:19,306] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:19,307] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:19,309] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:19,309] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:19,310] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 17:14:19,310] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 17:14:19,325] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:19,328] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 17:14:19,329] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 17:14:19,329] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 17:14:19,335] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:19,335] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 17:14:19,340] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 17:14:19,340] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 17:14:19,343] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:19,343] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 17:14:19,344] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 17:14:19,344] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 17:14:19,345] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:19,345] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 17:14:19,353] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@b1712f3]
 DEBUG [2015-06-07 17:14:19,357] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2826f61]
 DEBUG [2015-06-07 17:14:19,365] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 17:14:19,366] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:19,366] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:19,381] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 17:14:19,383] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:19,419] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 17:14:19,420] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 17:14:19,420] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 17:14:19,462] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:19,527] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:19,528] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:19,560] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:19,596] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 17:14:19,596] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 17:14:19,827] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:19,843] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 17:14:19,858] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:19,994] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@619bfe29
 DEBUG [2015-06-07 17:14:19,995] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@619bfe29
 DEBUG [2015-06-07 17:14:19,995] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@619bfe29
 DEBUG [2015-06-07 17:14:20,001] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30f5a68a
 DEBUG [2015-06-07 17:14:20,006] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@a8c1f44
 DEBUG [2015-06-07 17:14:20,008] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@3a62c01e
 DEBUG [2015-06-07 17:14:20,012] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4264b240
 DEBUG [2015-06-07 17:14:20,013] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4264b240
 DEBUG [2015-06-07 17:14:20,013] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4264b240
 DEBUG [2015-06-07 17:14:20,016] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@76f7d241
 DEBUG [2015-06-07 17:14:20,017] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@76f7d241
 DEBUG [2015-06-07 17:14:20,017] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@76f7d241
 DEBUG [2015-06-07 17:14:20,026] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@2dbe250d
 DEBUG [2015-06-07 17:14:20,027] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@2dbe250d
 DEBUG [2015-06-07 17:14:20,027] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2dbe250d
 DEBUG [2015-06-07 17:14:20,031] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@56ace400
 DEBUG [2015-06-07 17:14:20,031] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@56ace400
 DEBUG [2015-06-07 17:14:20,031] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56ace400
 DEBUG [2015-06-07 17:14:20,036] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@5ed731d0
 DEBUG [2015-06-07 17:14:20,036] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@5ed731d0
 DEBUG [2015-06-07 17:14:20,036] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5ed731d0
 DEBUG [2015-06-07 17:14:20,042] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@78fb9a67
 DEBUG [2015-06-07 17:14:20,042] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@78fb9a67
 DEBUG [2015-06-07 17:14:20,042] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@78fb9a67
 DEBUG [2015-06-07 17:14:20,043] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@3a320ade
 DEBUG [2015-06-07 17:14:20,043] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@3a320ade
 DEBUG [2015-06-07 17:14:20,043] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a320ade
 DEBUG [2015-06-07 17:14:20,043] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@274872f8
 DEBUG [2015-06-07 17:14:20,059] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@274872f8
 DEBUG [2015-06-07 17:14:20,059] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a39fe6a
 DEBUG [2015-06-07 17:14:20,059] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a39fe6a
 DEBUG [2015-06-07 17:14:20,059] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@592e843a
 DEBUG [2015-06-07 17:14:20,059] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@592e843a
 DEBUG [2015-06-07 17:14:20,059] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@4ebea12c
 DEBUG [2015-06-07 17:14:20,059] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4ebea12c
 DEBUG [2015-06-07 17:14:20,059] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@52b56a3e
 DEBUG [2015-06-07 17:14:20,075] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@52b56a3e
 DEBUG [2015-06-07 17:14:20,075] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@226642a5
 DEBUG [2015-06-07 17:14:20,075] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@226642a5
 DEBUG [2015-06-07 17:14:20,075] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@119f1f2a
 DEBUG [2015-06-07 17:14:20,075] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@119f1f2a
 DEBUG [2015-06-07 17:14:20,075] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@119f1f2a
 DEBUG [2015-06-07 17:14:20,075] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a1da881
 DEBUG [2015-06-07 17:14:20,075] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@3f2ef586
 DEBUG [2015-06-07 17:14:20,075] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3f2ef586
 DEBUG [2015-06-07 17:14:20,075] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3f2ef586
 DEBUG [2015-06-07 17:14:20,075] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2cf92cc7
 DEBUG [2015-06-07 17:14:20,090] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@5d465e4b
 DEBUG [2015-06-07 17:14:20,090] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5d465e4b
 DEBUG [2015-06-07 17:14:20,090] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@78aea4b9
 DEBUG [2015-06-07 17:14:20,090] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@78aea4b9
 DEBUG [2015-06-07 17:14:20,090] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@76a36b71
 DEBUG [2015-06-07 17:14:20,090] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@76a36b71
 DEBUG [2015-06-07 17:14:20,090] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@4a9f80d3
 DEBUG [2015-06-07 17:14:20,090] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4a9f80d3
 DEBUG [2015-06-07 17:14:20,106] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5bda80bf
 DEBUG [2015-06-07 17:14:20,106] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5bda80bf
 DEBUG [2015-06-07 17:14:20,106] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@51df223b
 DEBUG [2015-06-07 17:14:20,106] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3e2822
 DEBUG [2015-06-07 17:14:20,106] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@533b266e
 DEBUG [2015-06-07 17:14:20,106] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@533b266e
 DEBUG [2015-06-07 17:14:20,106] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@533b266e
 DEBUG [2015-06-07 17:14:20,106] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5b6813df
 DEBUG [2015-06-07 17:14:20,106] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5b6813df
 DEBUG [2015-06-07 17:14:20,106] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5b6813df
 DEBUG [2015-06-07 17:14:20,106] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@1e044120
 DEBUG [2015-06-07 17:14:20,122] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@60b71e8f
 DEBUG [2015-06-07 17:14:20,122] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@60b71e8f
 DEBUG [2015-06-07 17:14:20,122] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@60b71e8f
 DEBUG [2015-06-07 17:14:20,122] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51e4ccb3
 DEBUG [2015-06-07 17:14:20,122] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51e4ccb3
 DEBUG [2015-06-07 17:14:20,122] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51e4ccb3
 DEBUG [2015-06-07 17:14:20,122] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@841e575
 DEBUG [2015-06-07 17:14:20,122] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@6e521c1e
 DEBUG [2015-06-07 17:14:20,122] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6e521c1e
 DEBUG [2015-06-07 17:14:20,122] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4ef27d66
 DEBUG [2015-06-07 17:14:20,137] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@25bcd0c7
 DEBUG [2015-06-07 17:14:20,137] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@25bcd0c7
 DEBUG [2015-06-07 17:14:20,137] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a4e343
 DEBUG [2015-06-07 17:14:20,137] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@3954d008
 DEBUG [2015-06-07 17:14:20,137] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@2cab9998
 DEBUG [2015-06-07 17:14:20,137] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2cab9998
 DEBUG [2015-06-07 17:14:20,153] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a8a60bc
 DEBUG [2015-06-07 17:14:20,153] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@361c294e
 DEBUG [2015-06-07 17:14:20,153] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7859e786
 DEBUG [2015-06-07 17:14:20,153] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@285d851a
 DEBUG [2015-06-07 17:14:20,153] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@314b8f2d
 DEBUG [2015-06-07 17:14:20,153] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@664a9613
 DEBUG [2015-06-07 17:14:20,153] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5118388b
 DEBUG [2015-06-07 17:14:20,153] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15a902e7
  INFO [2015-06-07 17:14:20,184] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 17:14:20,201] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 17:14:20,201] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 17:14:20,201] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 17:14:20,216] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 17:14:20,326] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 17:14:20,326] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 17:14:20,326] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 17:14:20,326] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 17:14:20,341] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 17:14:20,341] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 17:14:20,341] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 17:14:20,341] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 17:14:20,341] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 17:14:20,341] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 17:14:20,341] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 17:14:20,357] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 17:14:20,357] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 17:14:20,357] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 17:14:20,357] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 17:14:20,451] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 17:14:20,451] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 17:14:20,466] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 17:14:20,513] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 17:14:20,513] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 17:14:20,529] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 17:14:20,529] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 17:14:20,607] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 17:14:20,623] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 17:14:20,623] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 17:14:20,623] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 17:14:20,654] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 17:14:20,654] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 17:14:20,654] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 17:14:20,654] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 17:14:20,654] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 17:14:20,654] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 17:14:20,654] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 17:14:20,654] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 17:14:20,685] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 17:14:20,685] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 17:14:20,685] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 17:14:20,685] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 17:14:20,685] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 17:14:20,685] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 17:14:20,685] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 17:14:20,685] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 17:14:20,685] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 17:14:20,685] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 17:14:20,685] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 17:14:20,685] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 17:14:20,685] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 17:14:20,701] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 17:14:20,701] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 17:14:20,701] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 17:14:21,248] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 17:14:21,248] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 17:14:21,295] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 17:14:21,327] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 17:14:21,327] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 17:14:21,327] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 17:14:21,327] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 17:14:21,327] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 17:14:21,327] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 17:14:21,327] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 17:14:21,327] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 17:14:21,327] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 17:14:21,327] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 17:14:21,327] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 17:14:21,327] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 17:14:21,327] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 17:14:21,327] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 17:14:21,327] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 17:14:21,327] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 17:14:21,342] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 17:14:21,342] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 17:14:21,342] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 17:14:21,342] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 17:14:21,342] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 17:14:21,342] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 17:14:21,342] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 17:14:21,342] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 17:14:21,358] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 17:14:21,358] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 17:14:21,358] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 17:14:21,358] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 17:14:21,358] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 17:14:21,358] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 17:14:21,405] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 17:14:21,420] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 17:14:21,420] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 17:14:21,420] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 11139 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 17:14:21,452] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 17:14:21,717] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 17:14:21,717] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 17:14:21,717] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 17:14:21,717] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 17:14:21,717] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 17:14:21,717] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 17:14:21,749] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:21,749] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:21,749] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 17:14:21,764] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 17:14:21,764] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 17:14:21,764] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 17:14:21,764] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 17:14:21,764] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 17:14:21,764] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:21,764] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:21,780] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:21,780] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:21,983] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 17:14:21,983] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: 5abd39ec-267e-40a7-8e0f-1c9133c5dcf6 (unnamed)
  INFO [2015-06-07 17:14:21,983] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 17:14:21,983] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 17:14:21,983] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 17:14:21,983] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 17:14:21,983] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 17:14:21,983] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 17:14:21,983] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 17:14:21,983] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 17:14:21,983] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 17:14:21,983] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 17:14:21,983] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 17:14:21,983] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 17:14:21,983] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 17:14:22,030] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 17:14:22,030] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 17:14:22,030] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 17:14:22,030] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 17:14:22,030] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 17:14:22,046] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:22,046] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 17:14:22,046] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 17:14:22,046] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:22,046] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 17:14:22,046] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 17:14:22,046] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 17:14:22,061] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 17:14:22,061] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 17:14:22,061] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:22,061] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 17:14:22,061] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:22,061] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:22,077] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:22,077] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:22,077] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 17:14:22,092] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:22,092] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 17:14:22,092] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 17:14:22,108] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:22,108] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 17:14:22,108] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:22,362] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 17:14:22,362] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 17:14:22,362] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:22,393] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:22,409] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:22,409] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 17:14:22,425] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:22,425] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:22,425] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:22,425] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:22,425] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:22,425] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:22,425] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 17:14:22,425] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:22,503] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 17:14:22,534] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 17:14:22,534] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:22,534] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:22,534] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:22,534] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:22,534] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 17:14:22,534] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:22,534] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:22,534] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:22,550] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 17:14:22,550] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 17:14:22,550] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 17:14:22,550] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 17:14:22,550] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 17:14:22,550] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 17:14:22,550] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 17:14:22,550] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:22,565] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 17:14:22,565] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:22,565] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 17:14:22,565] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:22,565] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:22,565] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:22,565] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 17:14:22,565] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:22,565] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:22,565] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:22,565] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 17:14:22,565] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 17:14:22,565] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 17:14:22,565] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 17:14:22,565] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 17:14:22,565] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:22,581] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 17:14:22,581] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 17:14:22,581] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 17:14:22,581] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 17:14:22,581] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 17:14:22,581] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 17:14:22,581] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:22,581] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 17:14:22,596] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 17:14:22,596] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 17:14:22,596] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:22,612] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 17:14:22,612] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 17:14:22,628] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 17:14:22,628] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 17:14:22,628] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 17:14:22,628] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:22,628] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 17:14:22,628] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 17:14:22,628] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 17:14:22,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 17:14:22,628] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 17:14:22,628] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 17:14:22,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 17:14:22,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:22,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:22,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 17:14:22,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 17:14:22,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 17:14:22,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 17:14:22,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 17:14:22,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 17:14:22,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:22,628] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 17:14:22,628] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:22,628] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:22,644] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:22,660] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:22,660] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 17:14:22,676] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@4afd21c6] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 17:14:22,676] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:22,676] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:22,676] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:22,676] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:22,691] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 17:14:22,691] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 17:14:22,691] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:22,691] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:22,691] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:22,691] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:22,691] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 17:14:22,691] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 17:14:22,691] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:22,691] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:22,691] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:22,691] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:22,707] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:22,707] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 17:14:22,707] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 17:14:22,707] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@4d27d9d]
 DEBUG [2015-06-07 17:14:22,707] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 17:14:22,707] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:22,707] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:22,722] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 17:14:22,722] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 17:14:22,722] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 17:14:22,722] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:22,722] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 17:14:22,722] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:22,722] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 17:14:22,722] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 17:14:22,722] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 17:14:22,722] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 17:14:22,738] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.mybatisTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 17:14:22,738] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:22,738] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:22,738] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:22,738] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:22,738] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:22,754] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [mybatisTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 17:14:22,754] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 17:14:22,769] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 17:14:22,769] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 17:14:22,769] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@149c3204 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 17:14:22,769] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 17:14:22,769] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4e6f2bb5]; rollback [true]
 DEBUG [2015-06-07 17:14:22,785] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 17:14:22,785] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 17:14:22,785] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 17:14:22,801] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 17:14:22,941] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 17:14:22,941] (Slf4jImpl.java[debug]:28) - ==> Parameters: 17(Integer)
 DEBUG [2015-06-07 17:14:22,957] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 17:14:22,957] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-07 17:14:23,035] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336648629
 DEBUG [2015-06-07 17:14:23,035] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-07 17:14:23,035] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 17:14:23,051] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 3, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 17:14:23,066] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 17:14:23,066] (Slf4jImpl.java[debug]:28) - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5] from current transaction
 DEBUG [2015-06-07 17:14:23,066] (Slf4jImpl.java[debug]:28) - ==>  Executing: select * from types; 
 DEBUG [2015-06-07 17:14:23,066] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 17:14:23,097] (Slf4jImpl.java[debug]:28) - <==    Columns: typeId
 DEBUG [2015-06-07 17:14:23,097] (Slf4jImpl.java[debug]:28) - <==        Row: 1
 DEBUG [2015-06-07 17:14:23,097] (Slf4jImpl.java[debug]:28) - <==        Row: 17
 DEBUG [2015-06-07 17:14:23,097] (Slf4jImpl.java[debug]:28) - <==        Row: 19
 DEBUG [2015-06-07 17:14:23,097] (Slf4jImpl.java[debug]:28) - <==        Row: 5
 DEBUG [2015-06-07 17:14:23,097] (Slf4jImpl.java[debug]:28) - <==        Row: 73
 DEBUG [2015-06-07 17:14:23,097] (Slf4jImpl.java[debug]:28) - <==        Row: 81
 DEBUG [2015-06-07 17:14:23,097] (Slf4jImpl.java[debug]:28) - <==        Row: 96
 DEBUG [2015-06-07 17:14:23,097] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 17:14:23,097] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:23,097] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 17:14:23,097] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 17:14:23,097] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 17:14:23,113] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 17:14:23,113] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 17:14:23,113] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 17:14:23,113] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:23,113] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 17:14:23,113] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:23,113] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:23,113] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 17:14:23,113] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:23,113] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 17:14:23,113] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:23,113] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 17:14:23,113] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 17:14:23,113] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:23,113] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:23,113] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:23,113] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:23,113] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:23,113] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:23,129] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:23,129] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336648631
 DEBUG [2015-06-07 17:14:23,129] (HibernateTransactionManager.java[doBegin]:498) - Opened new Session [org.hibernate.impl.SessionImpl@a2ddf26] for Hibernate transaction
 DEBUG [2015-06-07 17:14:23,129] (HibernateTransactionManager.java[doBegin]:509) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@a2ddf26]
 DEBUG [2015-06-07 17:14:23,144] (JDBCTransaction.java[begin]:78) - begin
 DEBUG [2015-06-07 17:14:23,144] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 17:14:23,144] (JDBCTransaction.java[begin]:83) - current autocommit status: true
 DEBUG [2015-06-07 17:14:23,144] (JDBCTransaction.java[begin]:86) - disabling autocommit
 DEBUG [2015-06-07 17:14:23,144] (HibernateTransactionManager.java[doBegin]:574) - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 17:14:23,144] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 17:14:23,144] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (2) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@16e7b402]; rollback [true]
 DEBUG [2015-06-07 17:14:23,144] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 17:14:23,144] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 53, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 17:14:23,144] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 17:14:23,144] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336648631
 DEBUG [2015-06-07 17:14:23,254] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 17:14:23,269] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 17:14:23,269] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 17:14:23,332] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 17:14:23,363] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 17:14:23,363] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 17:14:23,363] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 17:14:23,379] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 17:14:23,379] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 17:14:23,379] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 17:14:23,379] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 17:14:23,379] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 17:14:23,394] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 17:14:23,394] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 17:14:23,394] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 17:14:23,410] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 17:14:23,410] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 17:14:23,441] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 17:14:23,441] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 17:14:23,457] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 17:14:23,457] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 17:14:23,457] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 17:14:23,457] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 17:14:23,457] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 17:14:23,457] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 17:14:23,457] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 17:14:23,457] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 17:14:23,457] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 17:14:23,457] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 17:14:23,457] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 17:14:23,457] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 17:14:23,457] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 17:14:23,457] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 17:14:23,457] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 17:14:23,457] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 17:14:23,457] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 17:14:23,457] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 17:14:23,457] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 17:14:23,457] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 17:14:23,457] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 17:14:23,457] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 17:14:23,457] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 17:14:23,457] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:23,457] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 17:14:23,457] (HibernateTransactionManager.java[doRollback]:677) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@a2ddf26]
 DEBUG [2015-06-07 17:14:23,457] (JDBCTransaction.java[rollback]:182) - rollback
 DEBUG [2015-06-07 17:14:23,457] (JDBCTransaction.java[toggleAutoCommit]:223) - re-enabling autocommit
 DEBUG [2015-06-07 17:14:23,472] (JDBCTransaction.java[rollback]:193) - rolled back JDBC Connection
 DEBUG [2015-06-07 17:14:23,472] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 17:14:23,472] (HibernateTransactionManager.java[doCleanupAfterCompletion]:740) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@a2ddf26] after transaction
 DEBUG [2015-06-07 17:14:23,472] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 17:14:23,472] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 17:14:23,472] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
  INFO [2015-06-07 17:14:23,472] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:23,472] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 17:14:23,472] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:23,472] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:23,472] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 17:14:23,472] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:23,472] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 17:14:23,472] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:23,472] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 17:14:23,472] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 17:14:23,472] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.deleteTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 17:14:23,472] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:23,472] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:23,472] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:23,472] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:23,472] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:23,472] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [deleteTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 17:14:23,472] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 17:14:23,472] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 17:14:23,472] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 17:14:23,472] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (3) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4e6f2bb5]; rollback [true]
 DEBUG [2015-06-07 17:14:23,472] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 17:14:23,472] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 17:14:23,472] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 17:14:23,472] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d33393]
 DEBUG [2015-06-07 17:14:23,472] (Slf4jImpl.java[debug]:28) - ==>  Executing: delete from types where 1=1 
 DEBUG [2015-06-07 17:14:23,472] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 17:14:23,472] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d33393]
 DEBUG [2015-06-07 17:14:23,472] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:23,472] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 17:14:23,488] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 17:14:23,488] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d33393]
 DEBUG [2015-06-07 17:14:23,488] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 17:14:23,488] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 17:14:23,488] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:23,488] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 17:14:23,488] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 17:14:23,504] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 17:14:19 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 17:14:23,504] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:23,504] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:23,504] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 17:14:23,504] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 17:14:23,519] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'mybatisService': [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:23,519] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 17:14:23,519] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 17:14:23,519] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 17:14:23,519] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 17:14:23,519] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 17:14:29,331] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 17:14:29,441] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@38364841 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 17:14:29,456] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:29,456] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 17:14:29,472] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 17:14:29,504] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:29,504] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:29,504] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:29,504] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:29,504] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:29,504] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:29,520] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:29,520] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:29,520] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:29,520] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:29,520] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:29,520] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:29,535] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 17:14:29,535] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 17:14:29,535] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:29,785] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 17:14:29,801] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 17:14:29,801] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 17:14:29,801] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 17:14:29,864] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 17:14:29,910] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 17:14:29,989] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 17:14:30,004] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 17:14:30,004] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 17:14:30,098] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 17:14:30,114] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 17:14:30,129] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 17:14:30,160] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 17:14:30,192] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 17:14:30,285] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 17:14:30,285] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:30,285] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:30,301] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:30,301] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 17:14:30,301] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:30,301] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:30,301] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:30,301] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:30,301] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:30,301] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:30,301] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:30,317] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:30,317] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:30,317] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:30,317] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:30,317] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:30,317] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 17:14:30,364] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 17:14:30,457] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class]
 DEBUG [2015-06-07 17:14:30,473] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 17:14:30,473] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 17:14:30,473] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 17:14:30,489] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 17:14:30,922] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 17:14:30,923] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 17:14:30,930] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 17:14:30 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 17:14:30,931] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@4fe767f3: org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2]; root of factory hierarchy
 DEBUG [2015-06-07 17:14:30,994] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 17:14:30,994] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 17:14:31,045] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:31,050] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 17:14:31,135] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:31,150] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:31,150] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:31,150] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:31,150] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:31,150] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:31,150] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:31,150] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:31,150] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 17:14:31,150] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 17:14:31,150] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:31,150] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 17:14:31,150] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 17:14:31,150] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 17:14:31,166] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:31,166] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 17:14:31,166] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 17:14:31,166] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 17:14:31,166] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:31,166] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 17:14:31,166] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 17:14:31,166] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 17:14:31,166] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:31,166] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 17:14:31,182] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@b1712f3]
 DEBUG [2015-06-07 17:14:31,182] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2826f61]
 DEBUG [2015-06-07 17:14:31,197] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 17:14:31,197] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:31,197] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:31,213] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 17:14:31,213] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:31,244] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 17:14:31,244] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 17:14:31,244] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 17:14:31,291] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:31,354] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:31,354] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:31,385] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:31,416] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 17:14:31,416] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 17:14:31,650] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:31,697] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 17:14:31,713] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:31,791] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@619bfe29
 DEBUG [2015-06-07 17:14:31,791] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@619bfe29
 DEBUG [2015-06-07 17:14:31,791] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@619bfe29
 DEBUG [2015-06-07 17:14:31,791] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30f5a68a
 DEBUG [2015-06-07 17:14:31,807] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@a8c1f44
 DEBUG [2015-06-07 17:14:31,807] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@3a62c01e
 DEBUG [2015-06-07 17:14:31,807] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4264b240
 DEBUG [2015-06-07 17:14:31,807] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4264b240
 DEBUG [2015-06-07 17:14:31,807] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4264b240
 DEBUG [2015-06-07 17:14:31,807] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@76f7d241
 DEBUG [2015-06-07 17:14:31,807] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@76f7d241
 DEBUG [2015-06-07 17:14:31,807] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@76f7d241
 DEBUG [2015-06-07 17:14:31,822] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@2dbe250d
 DEBUG [2015-06-07 17:14:31,822] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@2dbe250d
 DEBUG [2015-06-07 17:14:31,822] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2dbe250d
 DEBUG [2015-06-07 17:14:31,838] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@3a94964
 DEBUG [2015-06-07 17:14:31,838] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@3a94964
 DEBUG [2015-06-07 17:14:31,838] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3a94964
 DEBUG [2015-06-07 17:14:31,838] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@2e029d61
 DEBUG [2015-06-07 17:14:31,838] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@2e029d61
 DEBUG [2015-06-07 17:14:31,838] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e029d61
 DEBUG [2015-06-07 17:14:31,838] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@741b3bc3
 DEBUG [2015-06-07 17:14:31,854] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@741b3bc3
 DEBUG [2015-06-07 17:14:31,854] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@741b3bc3
 DEBUG [2015-06-07 17:14:31,854] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@3a320ade
 DEBUG [2015-06-07 17:14:31,854] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@3a320ade
 DEBUG [2015-06-07 17:14:31,854] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a320ade
 DEBUG [2015-06-07 17:14:31,854] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@274872f8
 DEBUG [2015-06-07 17:14:31,854] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@274872f8
 DEBUG [2015-06-07 17:14:31,854] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a39fe6a
 DEBUG [2015-06-07 17:14:31,854] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a39fe6a
 DEBUG [2015-06-07 17:14:31,869] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@592e843a
 DEBUG [2015-06-07 17:14:31,869] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@592e843a
 DEBUG [2015-06-07 17:14:31,869] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@4ebea12c
 DEBUG [2015-06-07 17:14:31,869] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4ebea12c
 DEBUG [2015-06-07 17:14:31,869] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@52b56a3e
 DEBUG [2015-06-07 17:14:31,869] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@52b56a3e
 DEBUG [2015-06-07 17:14:31,869] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@226642a5
 DEBUG [2015-06-07 17:14:31,869] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@226642a5
 DEBUG [2015-06-07 17:14:31,885] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@119f1f2a
 DEBUG [2015-06-07 17:14:31,885] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@119f1f2a
 DEBUG [2015-06-07 17:14:31,885] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@119f1f2a
 DEBUG [2015-06-07 17:14:31,885] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a1da881
 DEBUG [2015-06-07 17:14:31,885] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@3f2ef586
 DEBUG [2015-06-07 17:14:31,885] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3f2ef586
 DEBUG [2015-06-07 17:14:31,885] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3f2ef586
 DEBUG [2015-06-07 17:14:31,885] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2cf92cc7
 DEBUG [2015-06-07 17:14:31,900] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@5d465e4b
 DEBUG [2015-06-07 17:14:31,900] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5d465e4b
 DEBUG [2015-06-07 17:14:31,900] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@78aea4b9
 DEBUG [2015-06-07 17:14:31,900] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@78aea4b9
 DEBUG [2015-06-07 17:14:31,900] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@76a36b71
 DEBUG [2015-06-07 17:14:31,900] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@76a36b71
 DEBUG [2015-06-07 17:14:31,900] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@4a9f80d3
 DEBUG [2015-06-07 17:14:31,900] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4a9f80d3
 DEBUG [2015-06-07 17:14:31,900] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5bda80bf
 DEBUG [2015-06-07 17:14:31,916] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5bda80bf
 DEBUG [2015-06-07 17:14:31,916] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@51df223b
 DEBUG [2015-06-07 17:14:31,916] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3e2822
 DEBUG [2015-06-07 17:14:31,916] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@533b266e
 DEBUG [2015-06-07 17:14:31,916] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@533b266e
 DEBUG [2015-06-07 17:14:31,916] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@533b266e
 DEBUG [2015-06-07 17:14:31,932] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5b6813df
 DEBUG [2015-06-07 17:14:31,932] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5b6813df
 DEBUG [2015-06-07 17:14:31,932] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5b6813df
 DEBUG [2015-06-07 17:14:31,932] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@1e044120
 DEBUG [2015-06-07 17:14:31,932] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@60b71e8f
 DEBUG [2015-06-07 17:14:31,932] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@60b71e8f
 DEBUG [2015-06-07 17:14:31,932] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@60b71e8f
 DEBUG [2015-06-07 17:14:31,932] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51e4ccb3
 DEBUG [2015-06-07 17:14:31,932] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51e4ccb3
 DEBUG [2015-06-07 17:14:31,932] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51e4ccb3
 DEBUG [2015-06-07 17:14:31,932] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@841e575
 DEBUG [2015-06-07 17:14:31,947] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@6e521c1e
 DEBUG [2015-06-07 17:14:31,947] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6e521c1e
 DEBUG [2015-06-07 17:14:31,947] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4ef27d66
 DEBUG [2015-06-07 17:14:31,947] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@25bcd0c7
 DEBUG [2015-06-07 17:14:31,947] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@25bcd0c7
 DEBUG [2015-06-07 17:14:31,963] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a4e343
 DEBUG [2015-06-07 17:14:31,963] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@3954d008
 DEBUG [2015-06-07 17:14:31,963] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@2cab9998
 DEBUG [2015-06-07 17:14:31,963] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2cab9998
 DEBUG [2015-06-07 17:14:31,963] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a8a60bc
 DEBUG [2015-06-07 17:14:31,963] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@361c294e
 DEBUG [2015-06-07 17:14:31,963] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7859e786
 DEBUG [2015-06-07 17:14:31,963] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@285d851a
 DEBUG [2015-06-07 17:14:31,963] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@314b8f2d
 DEBUG [2015-06-07 17:14:31,963] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@664a9613
 DEBUG [2015-06-07 17:14:31,963] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5118388b
 DEBUG [2015-06-07 17:14:31,979] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15a902e7
  INFO [2015-06-07 17:14:32,025] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 17:14:32,025] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 17:14:32,025] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 17:14:32,042] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 17:14:32,042] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 17:14:32,136] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 17:14:32,136] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 17:14:32,136] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 17:14:32,136] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 17:14:32,136] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 17:14:32,136] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 17:14:32,151] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 17:14:32,151] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 17:14:32,151] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 17:14:32,151] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 17:14:32,151] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 17:14:32,151] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 17:14:32,151] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 17:14:32,151] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 17:14:32,151] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 17:14:32,230] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 17:14:32,230] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 17:14:32,245] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 17:14:32,277] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 17:14:32,292] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 17:14:32,308] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 17:14:32,308] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 17:14:32,355] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 17:14:32,370] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 17:14:32,370] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 17:14:32,386] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 17:14:32,386] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 17:14:32,386] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 17:14:32,401] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 17:14:32,401] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 17:14:32,401] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 17:14:32,401] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 17:14:32,401] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 17:14:32,401] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 17:14:32,417] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 17:14:32,417] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 17:14:32,417] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 17:14:32,417] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 17:14:32,417] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 17:14:32,417] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 17:14:32,417] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 17:14:32,417] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 17:14:32,417] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 17:14:32,417] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 17:14:32,417] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 17:14:32,417] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 17:14:32,433] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 17:14:32,433] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 17:14:32,433] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 17:14:32,448] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 17:14:33,011] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 17:14:33,011] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 17:14:33,058] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 17:14:33,107] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 17:14:33,107] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 17:14:33,107] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 17:14:33,107] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 17:14:33,107] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 17:14:33,107] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 17:14:33,107] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 17:14:33,107] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 17:14:33,107] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 17:14:33,107] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 17:14:33,107] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 17:14:33,107] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 17:14:33,107] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 17:14:33,107] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 17:14:33,107] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 17:14:33,107] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 17:14:33,122] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 17:14:33,122] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 17:14:33,122] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 17:14:33,122] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 17:14:33,122] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 17:14:33,122] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 17:14:33,122] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 17:14:33,122] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 17:14:33,122] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 17:14:33,122] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 17:14:33,122] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 17:14:33,122] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 17:14:33,122] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 17:14:33,122] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 17:14:33,169] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 17:14:33,169] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 17:14:33,185] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 17:14:33,185] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 11146 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 17:14:33,200] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 17:14:33,419] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 17:14:33,419] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 17:14:33,419] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 17:14:33,419] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 17:14:33,419] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 17:14:33,419] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 17:14:33,450] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:33,450] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:33,450] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 17:14:33,450] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 17:14:33,450] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 17:14:33,450] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 17:14:33,450] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 17:14:33,450] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 17:14:33,450] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:33,450] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:33,466] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:33,466] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:33,622] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 17:14:33,622] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: da1d8955-3884-41f4-9919-3c824ff502fd (unnamed)
  INFO [2015-06-07 17:14:33,622] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 17:14:33,622] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 17:14:33,638] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 17:14:33,638] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 17:14:33,638] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 17:14:33,638] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 17:14:33,638] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 17:14:33,638] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 17:14:33,638] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 17:14:33,638] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 17:14:33,638] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 17:14:33,638] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 17:14:33,638] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 17:14:33,685] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 17:14:33,685] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 17:14:33,685] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 17:14:33,685] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 17:14:33,685] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 17:14:33,685] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:33,685] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 17:14:33,685] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 17:14:33,685] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:33,685] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 17:14:33,685] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 17:14:33,700] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 17:14:33,716] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 17:14:33,716] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 17:14:33,716] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:33,716] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 17:14:33,716] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:33,716] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:33,716] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:33,716] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:33,732] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 17:14:33,732] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:33,747] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 17:14:33,747] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 17:14:33,747] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:33,747] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 17:14:33,747] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:33,982] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 17:14:33,982] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 17:14:33,997] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:34,013] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,029] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:34,029] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 17:14:34,044] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:34,044] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:34,044] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:34,044] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,044] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 17:14:34,044] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:34,091] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 17:14:34,091] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 17:14:34,091] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:34,091] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:34,107] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 17:14:34,107] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:34,107] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:34,107] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:34,107] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:34,107] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,107] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:34,107] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:34,107] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 17:14:34,107] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 17:14:34,107] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 17:14:34,107] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 17:14:34,122] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 17:14:34,122] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 17:14:34,122] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 17:14:34,122] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,122] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 17:14:34,122] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:34,122] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 17:14:34,122] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:34,122] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:34,122] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:34,122] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 17:14:34,122] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:34,122] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:34,122] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:34,122] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 17:14:34,122] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 17:14:34,122] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 17:14:34,122] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 17:14:34,138] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 17:14:34,138] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,138] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 17:14:34,138] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 17:14:34,138] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 17:14:34,138] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 17:14:34,138] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 17:14:34,138] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 17:14:34,138] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,154] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 17:14:34,154] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 17:14:34,154] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 17:14:34,154] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,185] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 17:14:34,185] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 17:14:34,185] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 17:14:34,185] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 17:14:34,185] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 17:14:34,185] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,185] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 17:14:34,185] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 17:14:34,185] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 17:14:34,185] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 17:14:34,185] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 17:14:34,185] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 17:14:34,185] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 17:14:34,185] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:34,185] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:34,185] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 17:14:34,185] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 17:14:34,185] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 17:14:34,185] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 17:14:34,185] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 17:14:34,185] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 17:14:34,185] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:34,185] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 17:14:34,185] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:34,185] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:34,201] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,217] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:34,217] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 17:14:34,233] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@4afd21c6] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 17:14:34,248] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:34,248] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:34,248] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:34,248] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,248] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 17:14:34,248] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 17:14:34,248] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:34,248] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:34,248] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:34,248] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 17:14:34,264] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 17:14:34,264] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:34,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:34,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:34,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:34,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:34,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 17:14:34,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 17:14:34,264] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@4d27d9d]
 DEBUG [2015-06-07 17:14:34,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 17:14:34,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:34,264] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:34,280] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 17:14:34,280] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 17:14:34,280] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 17:14:34,280] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:34,280] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 17:14:34,280] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:34,280] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 17:14:34,280] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 17:14:34,280] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 17:14:34,280] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 17:14:34,295] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.mybatisTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 17:14:34,295] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:34,295] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:34,295] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:34,295] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:34,295] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:34,326] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [mybatisTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 17:14:34,326] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 17:14:34,326] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 17:14:34,326] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 17:14:34,326] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@149c3204 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 17:14:34,326] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 17:14:34,326] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4e6f2bb5]; rollback [true]
 DEBUG [2015-06-07 17:14:34,342] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 17:14:34,342] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 17:14:34,358] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 17:14:34,358] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 17:14:34,498] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 17:14:34,498] (Slf4jImpl.java[debug]:28) - ==> Parameters: 96(Integer)
 DEBUG [2015-06-07 17:14:34,530] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 17:14:34,530] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 17:14:34,530] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 17:14:34,530] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 17:14:34,530] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
 DEBUG [2015-06-07 17:14:34,530] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 17:14:34,530] (BeansDtdResolver.java[resolveEntity]:74) - Found beans DTD [http://www.springframework.org/dtd/spring-beans-2.0.dtd] in classpath: spring-beans-2.0.dtd
 DEBUG [2015-06-07 17:14:34,561] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 17:14:34,576] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'DB2'
 DEBUG [2015-06-07 17:14:34,576] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'DB2'
 DEBUG [2015-06-07 17:14:34,576] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'DB2' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'DB2'
 DEBUG [2015-06-07 17:14:34,608] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'Derby'
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'Derby'
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'Derby' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'Derby'
 DEBUG [2015-06-07 17:14:34,608] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'H2'
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'H2'
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'H2' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'H2'
 DEBUG [2015-06-07 17:14:34,608] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'HSQL'
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'HSQL'
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'HSQL' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'HSQL'
 DEBUG [2015-06-07 17:14:34,608] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'Informix'
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'Informix'
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'Informix' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'Informix'
 DEBUG [2015-06-07 17:14:34,608] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'MS-SQL'
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'MS-SQL'
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'MS-SQL' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'MS-SQL'
 DEBUG [2015-06-07 17:14:34,608] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'MySQL'
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'MySQL'
 DEBUG [2015-06-07 17:14:34,608] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'MySQL' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,623] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'MySQL'
 DEBUG [2015-06-07 17:14:34,623] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'Oracle'
 DEBUG [2015-06-07 17:14:34,623] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'Oracle'
 DEBUG [2015-06-07 17:14:34,623] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'Oracle' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,623] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'Oracle'
 DEBUG [2015-06-07 17:14:34,623] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'PostgreSQL'
 DEBUG [2015-06-07 17:14:34,623] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'PostgreSQL'
 DEBUG [2015-06-07 17:14:34,623] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'PostgreSQL' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,623] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'PostgreSQL'
 DEBUG [2015-06-07 17:14:34,623] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'Sybase'
 DEBUG [2015-06-07 17:14:34,623] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'Sybase'
 DEBUG [2015-06-07 17:14:34,623] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'Sybase' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:34,623] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'Sybase'
  INFO [2015-06-07 17:14:34,623] (SQLErrorCodesFactory.java[<init>]:126) - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
 DEBUG [2015-06-07 17:14:34,623] (SQLErrorCodesFactory.java[getErrorCodes]:199) - Looking up default SQLErrorCodes for DataSource [org.apache.commons.dbcp.BasicDataSource@4afd21c6]
 DEBUG [2015-06-07 17:14:34,639] (SQLErrorCodesFactory.java[getErrorCodes]:217) - Database product name cached for DataSource [org.apache.commons.dbcp.BasicDataSource@4afd21c6]: name is 'MySQL'
 DEBUG [2015-06-07 17:14:34,639] (SQLErrorCodesFactory.java[getErrorCodes]:175) - SQL error codes for 'MySQL' found
 DEBUG [2015-06-07 17:14:34,639] (SQLErrorCodeSQLExceptionTranslator.java[logTranslation]:397) - Translating SQLException with SQL state '23000', error code '1062', message [Duplicate entry '96' for key 'PRIMARY']; SQL was [] for task [
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '96' for key 'PRIMARY'
### The error may involve sql.resources.mapper.insert-Inline
### The error occurred while setting parameters
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '96' for key 'PRIMARY'
]
 DEBUG [2015-06-07 17:14:34,639] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 17:14:34,639] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '96' for key 'PRIMARY'
### The error may involve sql.resources.mapper.insert-Inline
### The error occurred while setting parameters
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '96' for key 'PRIMARY'
; SQL []; Duplicate entry '96' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '96' for key 'PRIMARY', mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:34,639] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 17:14:34,639] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 17:14:34,639] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 17:14:34,655] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 17:14:34,655] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 17:14:34,655] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '96' for key 'PRIMARY'
### The error may involve sql.resources.mapper.insert-Inline
### The error occurred while setting parameters
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '96' for key 'PRIMARY'
; SQL []; Duplicate entry '96' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '96' for key 'PRIMARY', mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:34,655] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '96' for key 'PRIMARY'
### The error may involve sql.resources.mapper.insert-Inline
### The error occurred while setting parameters
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '96' for key 'PRIMARY'
; SQL []; Duplicate entry '96' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '96' for key 'PRIMARY', mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 17:14:34,670] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:34,670] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:34,670] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@2b10ace9, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 17:14:34,670] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:34,670] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 17:14:34,670] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:34,670] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 17:14:34,670] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 17:14:34,670] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:34,670] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@2b10ace9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:34,670] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:34,670] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:34,670] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:34,670] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:34,670] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:34,733] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336648746
 DEBUG [2015-06-07 17:14:34,733] (HibernateTransactionManager.java[doBegin]:498) - Opened new Session [org.hibernate.impl.SessionImpl@29a1505c] for Hibernate transaction
 DEBUG [2015-06-07 17:14:34,733] (HibernateTransactionManager.java[doBegin]:509) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@29a1505c]
 DEBUG [2015-06-07 17:14:34,748] (JDBCTransaction.java[begin]:78) - begin
 DEBUG [2015-06-07 17:14:34,748] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 17:14:34,748] (JDBCTransaction.java[begin]:83) - current autocommit status: true
 DEBUG [2015-06-07 17:14:34,748] (JDBCTransaction.java[begin]:86) - disabling autocommit
 DEBUG [2015-06-07 17:14:34,748] (HibernateTransactionManager.java[doBegin]:574) - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 17:14:34,764] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@2b10ace9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 17:14:34,764] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (2) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@2b10ace9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@2dd2e270]; rollback [true]
 DEBUG [2015-06-07 17:14:34,764] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 17:14:34,764] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 27, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 17:14:34,795] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 17:14:34,795] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336648747
 DEBUG [2015-06-07 17:14:34,889] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 17:14:34,905] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 17:14:34,905] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 17:14:34,967] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 17:14:35,014] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 17:14:35,014] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 17:14:35,014] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 17:14:35,014] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 17:14:35,030] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 17:14:35,030] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 17:14:35,030] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 17:14:35,030] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 17:14:35,045] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 17:14:35,045] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 17:14:35,045] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 17:14:35,061] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 17:14:35,061] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 17:14:35,092] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 17:14:35,092] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 17:14:35,092] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 17:14:35,092] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 17:14:35,092] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 17:14:35,092] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 17:14:35,092] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 17:14:35,092] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 17:14:35,108] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 17:14:35,108] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 17:14:35,108] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 17:14:35,108] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 17:14:35,108] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 17:14:35,108] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 17:14:35,108] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 17:14:35,108] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 17:14:35,108] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 17:14:35,108] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 17:14:35,108] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 17:14:35,108] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 17:14:35,108] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 17:14:35,108] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 17:14:35,108] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 17:14:35,108] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 17:14:35,108] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 17:14:35,108] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@2b10ace9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:35,108] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 17:14:35,123] (HibernateTransactionManager.java[doRollback]:677) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@29a1505c]
 DEBUG [2015-06-07 17:14:35,123] (JDBCTransaction.java[rollback]:182) - rollback
 DEBUG [2015-06-07 17:14:35,123] (JDBCTransaction.java[toggleAutoCommit]:223) - re-enabling autocommit
 DEBUG [2015-06-07 17:14:35,123] (JDBCTransaction.java[rollback]:193) - rolled back JDBC Connection
 DEBUG [2015-06-07 17:14:35,123] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 17:14:35,123] (HibernateTransactionManager.java[doCleanupAfterCompletion]:740) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@29a1505c] after transaction
 DEBUG [2015-06-07 17:14:35,123] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 17:14:35,123] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 17:14:35,123] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
  INFO [2015-06-07 17:14:35,123] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@2b10ace9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:35,123] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@2b10ace9, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 17:14:35,123] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:35,123] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:35,123] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@68b9834c, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 17:14:35,123] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:35,123] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 17:14:35,123] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:35,123] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 17:14:35,123] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 17:14:35,123] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.deleteTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 17:14:35,123] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@68b9834c, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:35,123] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:35,123] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:35,123] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:35,123] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:35,123] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [deleteTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 17:14:35,123] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 17:14:35,123] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 17:14:35,123] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@68b9834c, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 17:14:35,123] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (3) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@68b9834c, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4e6f2bb5]; rollback [true]
 DEBUG [2015-06-07 17:14:35,123] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 17:14:35,123] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 17:14:35,123] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 17:14:35,123] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f89331f]
 DEBUG [2015-06-07 17:14:35,123] (Slf4jImpl.java[debug]:28) - ==>  Executing: delete from types where 1=1 
 DEBUG [2015-06-07 17:14:35,123] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 17:14:35,123] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f89331f]
 DEBUG [2015-06-07 17:14:35,139] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@68b9834c, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:35,139] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 17:14:35,139] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 17:14:35,155] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f89331f]
 DEBUG [2015-06-07 17:14:35,155] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 17:14:35,155] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 17:14:35,155] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@68b9834c, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:35,155] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@68b9834c, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 17:14:35,155] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 17:14:35,155] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 17:14:30 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 17:14:35,155] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:35,155] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:35,155] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 17:14:35,155] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 17:14:35,170] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'mybatisService': [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:35,170] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 17:14:35,170] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 17:14:35,170] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 17:14:35,170] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 17:14:35,170] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 DEBUG [2015-06-07 17:14:41,385] (SpringJUnit4ClassRunner.java[<init>]:107) - SpringJUnit4ClassRunner constructor called with [class com.spring.SpringTest].
 DEBUG [2015-06-07 17:14:41,494] (AbstractDelegatingSmartContextLoader.java[delegateProcessing]:89) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@38364841 declaringClass = 'com.spring.SpringTest', locations = '{classpath:local/spring/application-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 DEBUG [2015-06-07 17:14:41,510] (ContextLoaderUtils.java[resolveActiveProfiles]:502) - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:41,510] (TestContextManager.java[retrieveTestExecutionListeners]:187) - @TestExecutionListeners is not present for class [class com.spring.SpringTest]: using defaults.
  INFO [2015-06-07 17:14:41,525] (TestContextManager.java[retrieveTestExecutionListeners]:234) - Could not instantiate TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their dependencies) available.
 DEBUG [2015-06-07 17:14:41,541] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:41,541] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:41,556] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:41,556] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:41,556] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:41,556] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:41,556] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:41,556] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:41,556] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:41,556] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:41,572] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:41,572] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:41,572] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 17:14:41,572] (AbstractDelegatingSmartContextLoader.java[delegateLoading]:98) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 DEBUG [2015-06-07 17:14:41,572] (AbstractGenericContextLoader.java[loadContext]:105) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:41,869] (AbstractEnvironment.java[<init>]:127) - Initializing new StandardEnvironment
 DEBUG [2015-06-07 17:14:41,885] (MutablePropertySources.java[addLast]:110) - Adding [systemProperties] PropertySource with lowest search precedence
 DEBUG [2015-06-07 17:14:41,885] (MutablePropertySources.java[addLast]:110) - Adding [systemEnvironment] PropertySource with lowest search precedence
 DEBUG [2015-06-07 17:14:41,885] (AbstractEnvironment.java[<init>]:131) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  INFO [2015-06-07 17:14:41,963] (XmlBeanDefinitionReader.java[loadBeanDefinitions]:316) - Loading XML bean definitions from class path resource [local/spring/application-context.xml]
 DEBUG [2015-06-07 17:14:42,002] (DefaultDocumentLoader.java[loadDocument]:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
 DEBUG [2015-06-07 17:14:42,080] (PluggableSchemaResolver.java[getSchemaMappings]:141) - Loading schema mappings from [META-INF/spring.schemas]
 DEBUG [2015-06-07 17:14:42,096] (PluggableSchemaResolver.java[getSchemaMappings]:147) - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
 DEBUG [2015-06-07 17:14:42,096] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
 DEBUG [2015-06-07 17:14:42,221] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-4.0.xsd] in classpath: org/springframework/context/config/spring-context-4.0.xsd
 DEBUG [2015-06-07 17:14:42,236] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.0.xsd
 DEBUG [2015-06-07 17:14:42,252] (PluggableSchemaResolver.java[resolveEntity]:119) - Found XML schema [http://www.springframework.org/schema/util/spring-util-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-util-4.0.xsd
 DEBUG [2015-06-07 17:14:42,283] (DefaultBeanDefinitionDocumentReader.java[registerBeanDefinitions]:108) - Loading bean definitions
 DEBUG [2015-06-07 17:14:42,315] (DefaultNamespaceHandlerResolver.java[getHandlerMappings]:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
 DEBUG [2015-06-07 17:14:42,377] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com]
 DEBUG [2015-06-07 17:14:42,393] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:42,393] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:42,393] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/test-classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:42,393] (PathMatchingResourcePatternResolver.java[doFindMatchingFileSystemResources]:553) - Looking for matching resources in directory tree [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com]
 DEBUG [2015-06-07 17:14:42,393] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:42,408] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:42,408] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:42,408] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:42,408] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:42,408] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:42,408] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:42,408] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:42,408] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:42,408] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:42,408] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:42,424] (PathMatchingResourcePatternResolver.java[doRetrieveMatchingFiles]:615) - Searching directory [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream] for files matching pattern [C:/Users/cuckoo03/git/repository/twitterapi-study/target/classes/com/**/*.class]
 DEBUG [2015-06-07 17:14:42,424] (PathMatchingResourcePatternResolver.java[doFindPathMatchingJarResources]:467) - Looking for matching resources in jar file [file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar]
 DEBUG [2015-06-07 17:14:42,471] (PathMatchingResourcePatternResolver.java[findPathMatchingResources]:354) - Resolved location pattern [classpath*:com/**/*.class] to resources [file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes\com\spring\SpringTest.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\vo\Types.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\IMybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\SnsAuthHttp.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\A.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\Search.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUser.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\search\SearchUsers.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus$_main_closure1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\ShowStatus.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintFilterStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream$1.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\stream\PrintSampleStream.class], file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\twitter\twitter4j\UpdateStatus.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/AssertionFailedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BestResponseTimeBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Blob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator$LocatorInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BlobFromLocator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Buffer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/BufferRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ByteArrayRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CachedResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParam.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement$CallableStatementParamInfoJDBC3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CharsetMapping.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Clob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/CompressedInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionFeatureNotAvailableException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$CompoundCacheKey.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl$ExceptionInterceptorChain.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionLifecycleInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionProperties.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$BooleanConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$ConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$IntegerConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$LongConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$MemorySizeConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl$StringConnectionProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ConnectionPropertiesTransform.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Constants.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$3.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$4.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$5.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$6.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$7.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$8.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$9.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$IteratorWithCleanup.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$LocalAndReferencedColumns.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$ResultSetIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$SingleStringIterator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData$TypeDescriptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/DocsConnectionPropsHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Driver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeProcessorResult.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/EscapeTokenizer.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExceptionInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ExportControlled.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Extension.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy$FailoverInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/FailoverConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Field.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/IterateBlock.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CallableStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ClientInfoProviderSP.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4CommentClientInfoProvider.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4Connection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4DatabaseMetaDataUsingInfoSchema.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML$SimpleSaxToReader.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4MysqlSQLXML.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4NClob.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4PreparedStatementHelper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/JDBC4UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LicenseConfiguration.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedAutoCommitInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancedMySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/LoadBalancingConnectionProxy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Messages.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MiniAdmin.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MySQLConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDataTruncation.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlDefs.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlErrorNumbers.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlIO.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlParameterMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/MysqlSavepoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory$RandomAccessFileOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NamedPipeSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NdbLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NoSubInterceptorWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NonRegisteringReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotImplemented.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/NotUpdatable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/OutputStreamWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PacketTooBigException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ParameterBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PingTarget.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$AppendingBatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchParams.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$BatchVisitor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EmulatedPreparedStatementBindings.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$EndPoint.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement$ParseInfo.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/PreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ProfilerEventHandlerFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RandomBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReflectiveStatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ReplicationDriver.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetInternalMethods.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetMetaData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ResultSetRow.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowData.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataCursor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic$OperationNotSupportedException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataDynamic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/RowDataStatic.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SQLError.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Security.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SequentialBalanceStrategy.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BatchedBindValues.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement$BindValue.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/ServerPreparedStatement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SingleByteCharsetConverter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/SocketMetadata.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardLoadBalanceExceptionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StandardSocketFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Statement.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl$CancelTask.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementImpl.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StatementInterceptorV2.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StreamingNotifiable.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/StringUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/TimeUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/UpdatableResultSet.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util$RandStructcture.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/Util.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/V1toV2StatementInterceptorAdapter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/VersionedStringProperty.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableOutputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WatchableWriter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/WriterWatcher.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/DeadlockTimeoutRollbackMarker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLStatementCancelledException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/CommunicationsException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLDataException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLIntegrityConstraintViolationException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLInvalidAuthorizationSpecException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLNonTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLSyntaxErrorException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTimeoutException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransactionRollbackException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientConnectionException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/exceptions/jdbc4/MySQLTransientException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/c3p0/MysqlConnectionTester.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/ExtendedMysqlExceptionSorter.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/integration/jboss/MysqlValidConnectionChecker.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor$1.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ResultSetScannerInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/ServerStatusDiffInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/interceptors/SessionAssociationInterceptor.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4CallableStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4ConnectionWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/JDBC4SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlConnectionPoolDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlDataSourceFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXADataSource.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXAException.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/MysqlXid.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/StatementWrapper.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase$ConnectionErrorFiringInvocationHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jdbc2/optional/WrapperBase.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManager.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/jmx/LoadBalanceConnectionGroupManagerMBean.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Jdk14Logger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Log.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogFactory.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/LogUtils.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/NullLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/Slf4JLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/log/StandardLogger.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/LoggingProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEvent.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/profiler/ProfilerEventHandler.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/BaseBugReport.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ErrorMappingsDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/LRUCache.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/PropertiesDocGenerator.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ReadAheadInputStream.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ResultSetUtil.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/ServerController.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/TimezoneDump.class], URL [jar:file:/C:/Users/cuckoo03/.m2/repository/mysql/mysql-connector-java/5.1.18/mysql-connector-java-5.1.18.jar!/com/mysql/jdbc/util/VersionFSHierarchyMaker.class]]
 DEBUG [2015-06-07 17:14:42,533] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\hibernate\dao\HibernateDao.class]
 DEBUG [2015-06-07 17:14:42,533] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao.class]
 DEBUG [2015-06-07 17:14:42,533] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\dao\MybatisDao2.class]
 DEBUG [2015-06-07 17:14:42,549] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\mybatis\service\MybatisService.class]
 DEBUG [2015-06-07 17:14:42,549] (ClassPathScanningCandidateComponentProvider.java[findCandidateComponents]:284) - Identified candidate component class: file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]
  INFO [2015-06-07 17:14:42,846] (DefaultListableBeanFactory.java[registerBeanDefinition]:746) - Overriding bean definition for bean 'configProperty': replacing [Generic bean: class [com.spring.ConfigProperty]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes\com\spring\ConfigProperty.class]] with [Generic bean: class [com.spring.ConfigProperty]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [local/spring/application-context.xml]]
 DEBUG [2015-06-07 17:14:42,846] (AbstractBeanDefinitionReader.java[loadBeanDefinitions]:223) - Loaded 23 bean definitions from location pattern [classpath:local/spring/application-context.xml]
  INFO [2015-06-07 17:14:42,861] (AbstractApplicationContext.java[prepareRefresh]:513) - Refreshing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 17:14:42 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 17:14:42,861] (AbstractApplicationContext.java[obtainFreshBeanFactory]:543) - Bean factory for org.springframework.context.support.GenericApplicationContext@4fe767f3: org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2]; root of factory hierarchy
 DEBUG [2015-06-07 17:14:42,924] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 17:14:42,924] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 17:14:42,971] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:42,971] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 17:14:43,080] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:43,080] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:43,080] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:43,080] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:43,080] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:43,080] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:43,080] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:43,080] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:43,080] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 17:14:43,080] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 17:14:43,096] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:43,096] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 17:14:43,096] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 17:14:43,096] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 17:14:43,096] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:43,096] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 17:14:43,096] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 17:14:43,096] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 17:14:43,096] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:43,096] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 17:14:43,096] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 17:14:43,096] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 17:14:43,096] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:43,096] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 17:14:43,111] (AbstractApplicationContext.java[initMessageSource]:649) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@b1712f3]
 DEBUG [2015-06-07 17:14:43,127] (AbstractApplicationContext.java[initApplicationEventMulticaster]:673) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2826f61]
 DEBUG [2015-06-07 17:14:43,127] (DefaultListableBeanFactory.java[preInstantiateSingletons]:669) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 17:14:43,127] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:43,127] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:43,158] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.hibernate.dao.HibernateDao]: ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 17:14:43,158] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:43,236] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'hibernateDao': ResourceElement for private org.springframework.orm.hibernate3.HibernateTemplate com.hibernate.dao.HibernateDao.template
 DEBUG [2015-06-07 17:14:43,236] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 17:14:43,236] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 17:14:43,295] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:43,405] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:43,405] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:43,420] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:43,483] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 17:14:43,483] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 17:14:43,684] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource2' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:43,722] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource2'
 DEBUG [2015-06-07 17:14:43,745] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:43,888] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@619bfe29
 DEBUG [2015-06-07 17:14:43,889] (BasicTypeRegistry.java[register]:144) - Adding type registration boolean -> org.hibernate.type.BooleanType@619bfe29
 DEBUG [2015-06-07 17:14:43,889] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@619bfe29
 DEBUG [2015-06-07 17:14:43,894] (BasicTypeRegistry.java[register]:144) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30f5a68a
 DEBUG [2015-06-07 17:14:43,902] (BasicTypeRegistry.java[register]:144) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@a8c1f44
 DEBUG [2015-06-07 17:14:43,904] (BasicTypeRegistry.java[register]:144) - Adding type registration yes_no -> org.hibernate.type.YesNoType@3a62c01e
 DEBUG [2015-06-07 17:14:43,909] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4264b240
 DEBUG [2015-06-07 17:14:43,910] (BasicTypeRegistry.java[register]:144) - Adding type registration byte -> org.hibernate.type.ByteType@4264b240
 DEBUG [2015-06-07 17:14:43,910] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4264b240
 DEBUG [2015-06-07 17:14:43,915] (BasicTypeRegistry.java[register]:144) - Adding type registration character -> org.hibernate.type.CharacterType@76f7d241
 DEBUG [2015-06-07 17:14:43,918] (BasicTypeRegistry.java[register]:144) - Adding type registration char -> org.hibernate.type.CharacterType@76f7d241
 DEBUG [2015-06-07 17:14:43,919] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@76f7d241
 DEBUG [2015-06-07 17:14:43,927] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@2dbe250d
 DEBUG [2015-06-07 17:14:43,927] (BasicTypeRegistry.java[register]:144) - Adding type registration short -> org.hibernate.type.ShortType@2dbe250d
 DEBUG [2015-06-07 17:14:43,928] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2dbe250d
 DEBUG [2015-06-07 17:14:43,931] (BasicTypeRegistry.java[register]:144) - Adding type registration integer -> org.hibernate.type.IntegerType@56ace400
 DEBUG [2015-06-07 17:14:43,932] (BasicTypeRegistry.java[register]:144) - Adding type registration int -> org.hibernate.type.IntegerType@56ace400
 DEBUG [2015-06-07 17:14:43,932] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56ace400
 DEBUG [2015-06-07 17:14:43,936] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@5ed731d0
 DEBUG [2015-06-07 17:14:43,936] (BasicTypeRegistry.java[register]:144) - Adding type registration long -> org.hibernate.type.LongType@5ed731d0
 DEBUG [2015-06-07 17:14:43,937] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5ed731d0
 DEBUG [2015-06-07 17:14:43,943] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@78fb9a67
 DEBUG [2015-06-07 17:14:43,944] (BasicTypeRegistry.java[register]:144) - Adding type registration float -> org.hibernate.type.FloatType@78fb9a67
 DEBUG [2015-06-07 17:14:43,944] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@78fb9a67
 DEBUG [2015-06-07 17:14:43,955] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@3a320ade
 DEBUG [2015-06-07 17:14:43,956] (BasicTypeRegistry.java[register]:144) - Adding type registration double -> org.hibernate.type.DoubleType@3a320ade
 DEBUG [2015-06-07 17:14:43,957] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a320ade
 DEBUG [2015-06-07 17:14:43,961] (BasicTypeRegistry.java[register]:144) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@274872f8
 DEBUG [2015-06-07 17:14:43,961] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@274872f8
 DEBUG [2015-06-07 17:14:43,963] (BasicTypeRegistry.java[register]:144) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a39fe6a
 DEBUG [2015-06-07 17:14:43,964] (BasicTypeRegistry.java[register]:144) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a39fe6a
 DEBUG [2015-06-07 17:14:43,966] (BasicTypeRegistry.java[register]:144) - Adding type registration string -> org.hibernate.type.StringType@592e843a
 DEBUG [2015-06-07 17:14:43,967] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.String -> org.hibernate.type.StringType@592e843a
 DEBUG [2015-06-07 17:14:43,969] (BasicTypeRegistry.java[register]:144) - Adding type registration url -> org.hibernate.type.UrlType@4ebea12c
 DEBUG [2015-06-07 17:14:43,969] (BasicTypeRegistry.java[register]:144) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4ebea12c
 DEBUG [2015-06-07 17:14:43,974] (BasicTypeRegistry.java[register]:144) - Adding type registration date -> org.hibernate.type.DateType@52b56a3e
 DEBUG [2015-06-07 17:14:43,974] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@52b56a3e
 DEBUG [2015-06-07 17:14:43,978] (BasicTypeRegistry.java[register]:144) - Adding type registration time -> org.hibernate.type.TimeType@226642a5
 DEBUG [2015-06-07 17:14:43,979] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@226642a5
 DEBUG [2015-06-07 17:14:43,982] (BasicTypeRegistry.java[register]:144) - Adding type registration timestamp -> org.hibernate.type.TimestampType@119f1f2a
 DEBUG [2015-06-07 17:14:43,983] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@119f1f2a
 DEBUG [2015-06-07 17:14:43,983] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@119f1f2a
 DEBUG [2015-06-07 17:14:43,984] (BasicTypeRegistry.java[register]:144) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a1da881
 DEBUG [2015-06-07 17:14:43,987] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar -> org.hibernate.type.CalendarType@3f2ef586
 DEBUG [2015-06-07 17:14:43,988] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3f2ef586
 DEBUG [2015-06-07 17:14:43,988] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3f2ef586
 DEBUG [2015-06-07 17:14:43,990] (BasicTypeRegistry.java[register]:144) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2cf92cc7
 DEBUG [2015-06-07 17:14:43,993] (BasicTypeRegistry.java[register]:144) - Adding type registration locale -> org.hibernate.type.LocaleType@5d465e4b
 DEBUG [2015-06-07 17:14:43,994] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5d465e4b
 DEBUG [2015-06-07 17:14:43,996] (BasicTypeRegistry.java[register]:144) - Adding type registration currency -> org.hibernate.type.CurrencyType@78aea4b9
 DEBUG [2015-06-07 17:14:43,996] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@78aea4b9
 DEBUG [2015-06-07 17:14:43,996] (BasicTypeRegistry.java[register]:144) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@76a36b71
 DEBUG [2015-06-07 17:14:43,996] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@76a36b71
 DEBUG [2015-06-07 17:14:43,996] (BasicTypeRegistry.java[register]:144) - Adding type registration class -> org.hibernate.type.ClassType@4a9f80d3
 DEBUG [2015-06-07 17:14:43,996] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4a9f80d3
 DEBUG [2015-06-07 17:14:43,996] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5bda80bf
 DEBUG [2015-06-07 17:14:43,996] (BasicTypeRegistry.java[register]:144) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5bda80bf
 DEBUG [2015-06-07 17:14:43,996] (BasicTypeRegistry.java[register]:144) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@51df223b
 DEBUG [2015-06-07 17:14:43,996] (BasicTypeRegistry.java[register]:144) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3e2822
 DEBUG [2015-06-07 17:14:44,012] (BasicTypeRegistry.java[register]:144) - Adding type registration binary -> org.hibernate.type.BinaryType@533b266e
 DEBUG [2015-06-07 17:14:44,012] (BasicTypeRegistry.java[register]:144) - Adding type registration byte[] -> org.hibernate.type.BinaryType@533b266e
 DEBUG [2015-06-07 17:14:44,012] (BasicTypeRegistry.java[register]:144) - Adding type registration [B -> org.hibernate.type.BinaryType@533b266e
 DEBUG [2015-06-07 17:14:44,012] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5b6813df
 DEBUG [2015-06-07 17:14:44,012] (BasicTypeRegistry.java[register]:144) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5b6813df
 DEBUG [2015-06-07 17:14:44,012] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5b6813df
 DEBUG [2015-06-07 17:14:44,012] (BasicTypeRegistry.java[register]:144) - Adding type registration image -> org.hibernate.type.ImageType@1e044120
 DEBUG [2015-06-07 17:14:44,012] (BasicTypeRegistry.java[register]:144) - Adding type registration characters -> org.hibernate.type.CharArrayType@60b71e8f
 DEBUG [2015-06-07 17:14:44,012] (BasicTypeRegistry.java[register]:144) - Adding type registration char[] -> org.hibernate.type.CharArrayType@60b71e8f
 DEBUG [2015-06-07 17:14:44,012] (BasicTypeRegistry.java[register]:144) - Adding type registration [C -> org.hibernate.type.CharArrayType@60b71e8f
 DEBUG [2015-06-07 17:14:44,012] (BasicTypeRegistry.java[register]:144) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51e4ccb3
 DEBUG [2015-06-07 17:14:44,012] (BasicTypeRegistry.java[register]:144) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51e4ccb3
 DEBUG [2015-06-07 17:14:44,012] (BasicTypeRegistry.java[register]:144) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51e4ccb3
 DEBUG [2015-06-07 17:14:44,028] (BasicTypeRegistry.java[register]:144) - Adding type registration text -> org.hibernate.type.TextType@841e575
 DEBUG [2015-06-07 17:14:44,028] (BasicTypeRegistry.java[register]:144) - Adding type registration blob -> org.hibernate.type.BlobType@6e521c1e
 DEBUG [2015-06-07 17:14:44,028] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6e521c1e
 DEBUG [2015-06-07 17:14:44,028] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4ef27d66
 DEBUG [2015-06-07 17:14:44,028] (BasicTypeRegistry.java[register]:144) - Adding type registration clob -> org.hibernate.type.ClobType@25bcd0c7
 DEBUG [2015-06-07 17:14:44,028] (BasicTypeRegistry.java[register]:144) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@25bcd0c7
 DEBUG [2015-06-07 17:14:44,028] (BasicTypeRegistry.java[register]:144) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a4e343
 DEBUG [2015-06-07 17:14:44,043] (BasicTypeRegistry.java[register]:144) - Adding type registration serializable -> org.hibernate.type.SerializableType@3954d008
 DEBUG [2015-06-07 17:14:44,043] (BasicTypeRegistry.java[register]:144) - Adding type registration object -> org.hibernate.type.ObjectType@2cab9998
 DEBUG [2015-06-07 17:14:44,043] (BasicTypeRegistry.java[register]:144) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2cab9998
 DEBUG [2015-06-07 17:14:44,043] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a8a60bc
 DEBUG [2015-06-07 17:14:44,043] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@361c294e
 DEBUG [2015-06-07 17:14:44,043] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7859e786
 DEBUG [2015-06-07 17:14:44,043] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@285d851a
 DEBUG [2015-06-07 17:14:44,043] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@314b8f2d
 DEBUG [2015-06-07 17:14:44,043] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@664a9613
 DEBUG [2015-06-07 17:14:44,043] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5118388b
 DEBUG [2015-06-07 17:14:44,043] (BasicTypeRegistry.java[register]:144) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15a902e7
  INFO [2015-06-07 17:14:44,090] (Version.java[<clinit>]:37) - Hibernate Commons Annotations 3.2.0.Final
  INFO [2015-06-07 17:14:44,090] (Environment.java[<clinit>]:593) - Hibernate 3.6.0.Final
  INFO [2015-06-07 17:14:44,090] (Environment.java[<clinit>]:626) - hibernate.properties not found
  INFO [2015-06-07 17:14:44,107] (Environment.java[buildBytecodeProvider]:804) - Bytecode provider name : javassist
  INFO [2015-06-07 17:14:44,107] (Environment.java[<clinit>]:685) - using JDK 1.4 java.sql.Timestamp handling
 DEBUG [2015-06-07 17:14:44,200] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
 DEBUG [2015-06-07 17:14:44,200] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
 DEBUG [2015-06-07 17:14:44,200] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 17:14:44,200] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
 DEBUG [2015-06-07 17:14:44,216] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
 DEBUG [2015-06-07 17:14:44,216] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
 DEBUG [2015-06-07 17:14:44,216] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
 DEBUG [2015-06-07 17:14:44,216] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
 DEBUG [2015-06-07 17:14:44,216] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
 DEBUG [2015-06-07 17:14:44,216] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
 DEBUG [2015-06-07 17:14:44,216] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
 DEBUG [2015-06-07 17:14:44,216] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
 DEBUG [2015-06-07 17:14:44,216] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
 DEBUG [2015-06-07 17:14:44,216] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
 DEBUG [2015-06-07 17:14:44,216] (DefaultIdentifierGeneratorFactory.java[register]:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
 DEBUG [2015-06-07 17:14:44,310] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 17:14:44,310] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
  INFO [2015-06-07 17:14:44,325] (AnnotationBinder.java[bindClass]:532) - Binding entity from annotated class: com.hibernate.vo.Types
 DEBUG [2015-06-07 17:14:44,388] (Ejb3Column.java[bind]:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 DEBUG [2015-06-07 17:14:44,388] (AnnotationBinder.java[determineSharedCacheMode]:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
 DEBUG [2015-06-07 17:14:44,404] (EntityBinder.java[bindEntity]:353) - Import with entity name Types
  INFO [2015-06-07 17:14:44,419] (EntityBinder.java[bindTable]:519) - Bind entity com.hibernate.vo.Types on table TYPES
 DEBUG [2015-06-07 17:14:44,482] (Ejb3Column.java[bind]:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TYPES), mappingColumn=TYPEID, insertable=true, updatable=true, unique=false}
 DEBUG [2015-06-07 17:14:44,497] (PropertyBinder.java[makePropertyAndValue]:175) - binding property typeId with lazy=false
 DEBUG [2015-06-07 17:14:44,497] (SimpleValueBinder.java[make]:303) - building SimpleValue for typeId
 DEBUG [2015-06-07 17:14:44,513] (PropertyBinder.java[makeProperty]:254) - Building property typeId
 DEBUG [2015-06-07 17:14:44,529] (SimpleValueBinder.java[fillSimpleValue]:341) - Setting SimpleValue typeName for typeId
 DEBUG [2015-06-07 17:14:44,529] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 17:14:44,529] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 17:14:44,529] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 17:14:44,529] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 17:14:44,529] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 17:14:44,529] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 17:14:44,529] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 17:14:44,544] (Configuration.java[applyHibernateValidatorLegacyConstraintsOnDDL]:1646) - Hibernate Validator not found: ignoring
  INFO [2015-06-07 17:14:44,560] (LocalSessionFactoryBean.java[buildSessionFactory]:713) - Building new Hibernate SessionFactory
 DEBUG [2015-06-07 17:14:44,560] (Configuration.java[buildSessionFactory]:1824) - Preparing to build session factory with filters : {}
 DEBUG [2015-06-07 17:14:44,560] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 17:14:44,560] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 17:14:44,560] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 17:14:44,560] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 17:14:44,560] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 17:14:44,560] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 17:14:44,560] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 17:14:44,560] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 17:14:44,560] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
 DEBUG [2015-06-07 17:14:44,560] (Configuration.java[enableLegacyHibernateValidator]:1866) - Legacy Validator not present in classpath, ignoring event listener registration
 DEBUG [2015-06-07 17:14:44,575] (HibernateSearchEventListenerRegister.java[attemptToLoadSearchEventListener]:231) - Search not present in classpath, ignoring event listener registration.
  INFO [2015-06-07 17:14:44,575] (HibernateSearchEventListenerRegister.java[enableHibernateSearch]:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
  INFO [2015-06-07 17:14:44,575] (ConnectionProviderFactory.java[initializeConnectionProviderFromConfig]:173) - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
  INFO [2015-06-07 17:14:45,091] (SettingsFactory.java[buildSettings]:117) - Database ->
       name : MySQL
    version : 5.6.24-log
      major : 5
      minor : 6
  INFO [2015-06-07 17:14:45,091] (SettingsFactory.java[buildSettings]:123) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.18 ( Revision: tonci.grgin@oracle.com-20110930151701-jfj14ddfq48ifkfq )
      major : 5
      minor : 1
  INFO [2015-06-07 17:14:45,145] (Dialect.java[<init>]:108) - Using dialect: org.hibernate.dialect.MySQLDialect
  INFO [2015-06-07 17:14:45,176] (TransactionFactoryFactory.java[buildTransactionFactory]:62) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
  INFO [2015-06-07 17:14:45,176] (TransactionManagerLookupFactory.java[getTransactionManagerLookup]:80) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
  INFO [2015-06-07 17:14:45,176] (SettingsFactory.java[buildSettings]:179) - Automatic flush during beforeCompletion(): disabled
  INFO [2015-06-07 17:14:45,176] (SettingsFactory.java[buildSettings]:183) - Automatic session close at end of transaction: disabled
  INFO [2015-06-07 17:14:45,176] (SettingsFactory.java[buildSettings]:190) - JDBC batch size: 15
  INFO [2015-06-07 17:14:45,176] (SettingsFactory.java[buildSettings]:193) - JDBC batch updates for versioned data: disabled
  INFO [2015-06-07 17:14:45,176] (SettingsFactory.java[buildSettings]:198) - Scrollable result sets: enabled
 DEBUG [2015-06-07 17:14:45,176] (SettingsFactory.java[buildSettings]:202) - Wrap result sets: disabled
  INFO [2015-06-07 17:14:45,176] (SettingsFactory.java[buildSettings]:206) - JDBC3 getGeneratedKeys(): enabled
  INFO [2015-06-07 17:14:45,176] (SettingsFactory.java[buildSettings]:214) - Connection release mode: auto
  INFO [2015-06-07 17:14:45,176] (SettingsFactory.java[buildSettings]:238) - Maximum outer join fetch depth: 2
  INFO [2015-06-07 17:14:45,176] (SettingsFactory.java[buildSettings]:241) - Default batch fetch size: 1
  INFO [2015-06-07 17:14:45,176] (SettingsFactory.java[buildSettings]:245) - Generate SQL with comments: disabled
  INFO [2015-06-07 17:14:45,176] (SettingsFactory.java[buildSettings]:249) - Order SQL updates by primary key: disabled
  INFO [2015-06-07 17:14:45,176] (SettingsFactory.java[buildSettings]:253) - Order SQL inserts for batching: disabled
  INFO [2015-06-07 17:14:45,176] (SettingsFactory.java[createQueryTranslatorFactory]:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
  INFO [2015-06-07 17:14:45,192] (ASTQueryTranslatorFactory.java[<init>]:47) - Using ASTQueryTranslatorFactory
  INFO [2015-06-07 17:14:45,192] (SettingsFactory.java[buildSettings]:261) - Query language substitutions: {}
  INFO [2015-06-07 17:14:45,192] (SettingsFactory.java[buildSettings]:266) - JPA-QL strict compliance: disabled
  INFO [2015-06-07 17:14:45,192] (SettingsFactory.java[buildSettings]:271) - Second-level cache: enabled
  INFO [2015-06-07 17:14:45,192] (SettingsFactory.java[buildSettings]:275) - Query cache: disabled
  INFO [2015-06-07 17:14:45,192] (SettingsFactory.java[createRegionFactory]:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
  INFO [2015-06-07 17:14:45,192] (SettingsFactory.java[buildSettings]:285) - Optimize cache for minimal puts: disabled
  INFO [2015-06-07 17:14:45,192] (SettingsFactory.java[buildSettings]:294) - Structured second-level cache entries: disabled
  INFO [2015-06-07 17:14:45,192] (SettingsFactory.java[buildSettings]:314) - Echoing all SQL to stdout
  INFO [2015-06-07 17:14:45,192] (SettingsFactory.java[buildSettings]:323) - Statistics: disabled
  INFO [2015-06-07 17:14:45,192] (SettingsFactory.java[buildSettings]:327) - Deleted entity synthetic identifier rollback: disabled
  INFO [2015-06-07 17:14:45,192] (SettingsFactory.java[buildSettings]:343) - Default entity-mode: pojo
  INFO [2015-06-07 17:14:45,192] (SettingsFactory.java[buildSettings]:347) - Named query checking : enabled
  INFO [2015-06-07 17:14:45,192] (SettingsFactory.java[buildSettings]:351) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
  INFO [2015-06-07 17:14:45,239] (SessionFactoryImpl.java[<init>]:200) - building session factory
 DEBUG [2015-06-07 17:14:45,254] (SessionFactoryImpl.java[<init>]:204) - Statistics initialized [enabled=false]}
 DEBUG [2015-06-07 17:14:45,270] (SessionFactoryImpl.java[<init>]:226) - Session factory constructed with filter configurations : {}
 DEBUG [2015-06-07 17:14:45,270] (SessionFactoryImpl.java[<init>]:230) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0\jre\bin, java.vm.version=25.0-b70, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\cuckoo03\git\repository\twitterapi-study, java.runtime.version=1.8.0-b132, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\cuckoo03\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, sun.jnu.encoding=MS949, java.library.path=C:\Program Files\Java\jdk1.8.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0\jre\bin;C:\app\cuckoo03\product\11.2.0\client_1\bin;C:\OraHome_1\bin;C:\app\cuckoo03\OraHome_2\bin;C:\OraHome_1;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0\bin;C:\home\maven\apache-maven-3.1.0\bin;C:\home\groovy\groovy-1.5.8\bin;C:\home\scala\scala-2.5.0-final\bin;C:\home\ant\ant-1.8.0\bin;C:\home\thrift\thrift-0.5.0;C:\home\gradle\gradle-2.0\bin;C:\home\phantomjs-2.0.0-windows\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\cuckoo03, user.timezone=Asia/Seoul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, user.name=cuckoo03, java.class.path=C:\Users\cuckoo03\git\repository\twitterapi-study\target\test-classes;C:\Users\cuckoo03\git\repository\twitterapi-study\target\classes;C:\Users\cuckoo03\.groovy\greclipse\global_dsld_support;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\plugin_dsld_support\;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\groovy-all-2.3.10.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\bsf-2.4.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0-sources.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\ivy-2.3.0.jar;C:\home\luna\plugins\org.codehaus.groovy_2.3.10.xx-201502281941-e44\lib\servlet-api-2.4.jar;C:\Users\cuckoo03\.m2\repository\com\oracle\ojdbc\6\ojdbc-6.jar;C:\Users\cuckoo03\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\cuckoo03\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\cuckoo03\.m2\repository\org\codehaus\groovy\groovy-all\2.3.10\groovy-all-2.3.10.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-api\1.5.0\slf4j-api-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-log4j12\1.5.0\slf4j-log4j12-1.5.0.jar;C:\Users\cuckoo03\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-core\4.0.0\twitter4j-core-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\twitter4j\twitter4j-stream\4.0.0\twitter4j-stream-4.0.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-core\4.0.1.RELEASE\spring-core-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-beans\4.0.1.RELEASE\spring-beans-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-aop\4.0.1.RELEASE\spring-aop-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-expression\4.0.1.RELEASE\spring-expression-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-context\4.0.1.RELEASE\spring-context-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-jdbc\4.0.1.RELEASE\spring-jdbc-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-orm\4.0.1.RELEASE\spring-orm-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-test\4.0.1.RELEASE\spring-test-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\org\springframework\spring-tx\4.0.1.RELEASE\spring-tx-4.0.1.RELEASE.jar;C:\Users\cuckoo03\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\cuckoo03\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cuckoo03\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;C:\Users\cuckoo03\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\cuckoo03\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\cuckoo03\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\cuckoo03\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\cuckoo03\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\cuckoo03\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\cuckoo03\.m2\repository\org\slf4j\slf4j-simple\1.6.1\slf4j-simple-1.6.1.jar;C:\Users\cuckoo03\.m2\repository\mysql\mysql-connector-java\5.1.18\mysql-connector-java-5.1.18.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis\3.0.6\mybatis-3.0.6.jar;C:\Users\cuckoo03\.m2\repository\org\mybatis\mybatis-spring\1.0.2\mybatis-spring-1.0.2.jar;/C:/home/luna/configuration/org.eclipse.osgi/473/0/.cp/;/C:/home/luna/configuration/org.eclipse.osgi/472/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 11153 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.spring.SpringTest, hibernate.dialect=${hibernate.mysql.dialect}, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
 DEBUG [2015-06-07 17:14:45,301] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 17:14:45,520] (AbstractEntityPersister.java[logStaticSQL]:2934) - Static SQL for entity: com.hibernate.vo.Types
 DEBUG [2015-06-07 17:14:45,520] (AbstractEntityPersister.java[logStaticSQL]:2939) -  Version select: select TYPEID from TYPES where TYPEID =?
 DEBUG [2015-06-07 17:14:45,520] (AbstractEntityPersister.java[logStaticSQL]:2942) -  Snapshot select: select types_.TYPEID from TYPES types_ where types_.TYPEID=?
 DEBUG [2015-06-07 17:14:45,520] (AbstractEntityPersister.java[logStaticSQL]:2945) -  Insert 0: insert into TYPES (TYPEID) values (?)
 DEBUG [2015-06-07 17:14:45,520] (AbstractEntityPersister.java[logStaticSQL]:2946) -  Update 0: null
 DEBUG [2015-06-07 17:14:45,520] (AbstractEntityPersister.java[logStaticSQL]:2947) -  Delete 0: delete from TYPES where TYPEID=?
 DEBUG [2015-06-07 17:14:45,551] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [NONE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:45,551] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:45,551] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 17:14:45,551] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [UPGRADE_NOWAIT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 17:14:45,551] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [FORCE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 17:14:45,551] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_READ]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? lock in share mode
 DEBUG [2015-06-07 17:14:45,551] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_WRITE]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 17:14:45,551] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [PESSIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=? for update
 DEBUG [2015-06-07 17:14:45,551] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:45,551] (EntityLoader.java[<init>]:123) - Static select for entity com.hibernate.vo.Types [OPTIMISTIC_FORCE_INCREMENT]: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:45,567] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_MERGE on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:45,567] (CascadeEntityLoader.java[<init>]:56) - Static select for action ACTION_REFRESH on entity com.hibernate.vo.Types: select types0_.TYPEID as TYPEID0_0_ from TYPES types0_ where types0_.TYPEID=?
 DEBUG [2015-06-07 17:14:45,707] (SessionFactoryObjectFactory.java[<clinit>]:61) - initializing class SessionFactoryObjectFactory
 DEBUG [2015-06-07 17:14:45,707] (SessionFactoryObjectFactory.java[addInstance]:99) - registered: a7cbf283-7a9c-43c7-ae30-62dd4e7f8e8e (unnamed)
  INFO [2015-06-07 17:14:45,707] (SessionFactoryObjectFactory.java[addInstance]:105) - Not binding factory to JNDI, no JNDI name configured
 DEBUG [2015-06-07 17:14:45,707] (SessionFactoryImpl.java[<init>]:367) - instantiated session factory
  INFO [2015-06-07 17:14:45,707] (SchemaValidator.java[validate]:121) - Running schema validator
  INFO [2015-06-07 17:14:45,707] (SchemaValidator.java[validate]:129) - fetching database metadata
 DEBUG [2015-06-07 17:14:45,707] (Configuration.java[processHbmXmlQueue]:3937) - Processing hbm.xml files
 DEBUG [2015-06-07 17:14:45,707] (Configuration.java[processAnnotatedClassesQueue]:3967) - Process annotated classes
 DEBUG [2015-06-07 17:14:45,707] (Configuration.java[processFkSecondPassInOrder]:1436) - processing fk mappings (*ToOne and JoinedSubclass)
 DEBUG [2015-06-07 17:14:45,707] (Configuration.java[originalSecondPassCompile]:1678) - processing extends queue
 DEBUG [2015-06-07 17:14:45,707] (Configuration.java[processExtendsQueue]:1732) - processing extends queue
 DEBUG [2015-06-07 17:14:45,723] (Configuration.java[originalSecondPassCompile]:1681) - processing collection mappings
 DEBUG [2015-06-07 17:14:45,723] (Configuration.java[originalSecondPassCompile]:1691) - processing native query and ResultSetMapping mappings
 DEBUG [2015-06-07 17:14:45,723] (Configuration.java[originalSecondPassCompile]:1699) - processing association property references
 DEBUG [2015-06-07 17:14:45,723] (Configuration.java[originalSecondPassCompile]:1721) - processing foreign key constraints
  INFO [2015-06-07 17:14:45,754] (TableMetadata.java[<init>]:65) - table found: test.types
  INFO [2015-06-07 17:14:45,754] (TableMetadata.java[<init>]:66) - columns: [typeid]
 DEBUG [2015-06-07 17:14:45,754] (DefaultIdentifierGeneratorFactory.java[setDialect]:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
 DEBUG [2015-06-07 17:14:45,770] (SessionFactoryImpl.java[checkNamedQueries]:537) - Checking 0 named HQL queries
 DEBUG [2015-06-07 17:14:45,770] (SessionFactoryImpl.java[checkNamedQueries]:557) - Checking 0 named SQL queries
 DEBUG [2015-06-07 17:14:45,770] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:45,770] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
 DEBUG [2015-06-07 17:14:45,770] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateTemplate'
 DEBUG [2015-06-07 17:14:45,770] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:45,770] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao'
 DEBUG [2015-06-07 17:14:45,770] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 17:14:45,770] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 17:14:45,786] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 17:14:45,786] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 17:14:45,786] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:45,786] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao.sqlSession
 DEBUG [2015-06-07 17:14:45,786] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:45,786] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:45,801] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:45,801] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:45,801] (Slf4jImpl.java[debug]:28) - Logging initialized using 'org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
 DEBUG [2015-06-07 17:14:45,817] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:45,817] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 17:14:45,817] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'dataSource'
 DEBUG [2015-06-07 17:14:45,817] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:45,832] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'dataSource'
 DEBUG [2015-06-07 17:14:45,832] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:46,098] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 17:14:46,098] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 17:14:46,098] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:46,129] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:46,129] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:46,129] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 17:14:46,145] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:46,145] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:46,145] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:46,145] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionFactory2' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:46,145] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 17:14:46,145] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:46,192] (Slf4jImpl.java[debug]:28) - Parsed configuration file: 'class path resource [local/sql/mybatis-config.xml]'
 DEBUG [2015-06-07 17:14:46,192] (Slf4jImpl.java[debug]:28) - Property 'mapperLocations' was not specified or no matching resources found
 DEBUG [2015-06-07 17:14:46,192] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:46,192] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:46,192] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 17:14:46,192] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:46,192] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:46,192] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:46,192] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:46,192] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'sqlSessionTemplate2' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:46,192] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:46,192] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:46,192] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao'
 DEBUG [2015-06-07 17:14:46,192] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao'
 DEBUG [2015-06-07 17:14:46,192] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 17:14:46,192] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 17:14:46,207] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 17:14:46,207] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 17:14:46,207] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.dao.MybatisDao2]: AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 17:14:46,207] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisDao2' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:46,207] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': ResourceElement for private org.apache.ibatis.session.SqlSession com.mybatis.dao.MybatisDao2.sqlSession
 DEBUG [2015-06-07 17:14:46,207] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:46,207] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)
 DEBUG [2015-06-07 17:14:46,207] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:46,207] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:46,207] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:46,207] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisDao2': AutowiredMethodElement for public final void org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 DEBUG [2015-06-07 17:14:46,207] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:46,207] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:46,207] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'mybatisDao2' to bean named 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:46,207] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'mybatisDao2'
 DEBUG [2015-06-07 17:14:46,207] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisDao2'
 DEBUG [2015-06-07 17:14:46,207] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 17:14:46,207] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 17:14:46,223] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.mybatis.service.MybatisService]: ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 17:14:46,223] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'mybatisService' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:46,223] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'mybatisService': ResourceElement for private com.mybatis.dao.MybatisDao2 com.mybatis.service.MybatisService.dao
 DEBUG [2015-06-07 17:14:46,223] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisDao2'
 DEBUG [2015-06-07 17:14:46,223] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'mybatisService'
 DEBUG [2015-06-07 17:14:46,223] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'configProperty'
 DEBUG [2015-06-07 17:14:46,223] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'configProperty'
 DEBUG [2015-06-07 17:14:46,239] (InjectionMetadata.java[checkConfigMembers]:71) - Registered injected element on class [com.spring.ConfigProperty]: AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 17:14:46,239] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'configProperty' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:46,239] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'configProperty': AutowiredFieldElement for private java.util.Properties com.spring.ConfigProperty.twitter4jprops
 DEBUG [2015-06-07 17:14:46,239] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 17:14:46,239] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 17:14:46,239] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'twitter4jprops' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:46,270] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'twitter4jprops'
  INFO [2015-06-07 17:14:46,270] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/twitter/twitter4j.properties]
 DEBUG [2015-06-07 17:14:46,270] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'twitter4jprops'
 DEBUG [2015-06-07 17:14:46,270] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 17:14:46,270] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 17:14:46,270] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernateProps' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:46,270] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernateProps'
  INFO [2015-06-07 17:14:46,287] (PropertiesLoaderSupport.java[loadProperties]:172) - Loading properties file from class path resource [local/db/hibernate/hibernate.properties]
 DEBUG [2015-06-07 17:14:46,288] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernateProps'
 DEBUG [2015-06-07 17:14:46,289] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'systemProperties'
 DEBUG [2015-06-07 17:14:46,289] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'configProperty' to bean named 'twitter4jprops'
 DEBUG [2015-06-07 17:14:46,290] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'configProperty'
 DEBUG [2015-06-07 17:14:46,290] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 DEBUG [2015-06-07 17:14:46,290] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:46,291] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 DEBUG [2015-06-07 17:14:46,291] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 DEBUG [2015-06-07 17:14:46,291] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 DEBUG [2015-06-07 17:14:46,291] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'twitter4jprops'
 DEBUG [2015-06-07 17:14:46,292] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateProps'
 DEBUG [2015-06-07 17:14:46,292] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 17:14:46,292] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 17:14:46,292] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:46,292] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateTemplate'
 DEBUG [2015-06-07 17:14:46,292] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:46,292] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:46,307] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'hibernatTransactionManager' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:46,323] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateSessionFactory'
 DEBUG [2015-06-07 17:14:46,323] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'hibernatTransactionManager'
  INFO [2015-06-07 17:14:46,354] (HibernateTransactionManager.java[afterPropertiesSet]:418) - Using DataSource [org.apache.commons.dbcp.BasicDataSource@4afd21c6] of Hibernate SessionFactory for HibernateTransactionManager
 DEBUG [2015-06-07 17:14:46,354] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:46,354] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:46,354] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:46,354] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager1' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:46,354] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource'
 DEBUG [2015-06-07 17:14:46,354] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager1'
 DEBUG [2015-06-07 17:14:46,354] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:46,354] (DefaultSingletonBeanRegistry.java[getSingleton]:220) - Creating shared instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:46,354] (AbstractAutowireCapableBeanFactory.java[createBean]:449) - Creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:46,354] (AbstractAutowireCapableBeanFactory.java[doCreateBean]:523) - Eagerly caching bean 'transactionManager2' to allow for resolving potential circular references
 DEBUG [2015-06-07 17:14:46,354] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'dataSource2'
 DEBUG [2015-06-07 17:14:46,354] (AbstractAutowireCapableBeanFactory.java[invokeInitMethods]:1595) - Invoking afterPropertiesSet() on bean with name 'transactionManager2'
 DEBUG [2015-06-07 17:14:46,354] (AbstractAutowireCapableBeanFactory.java[createBean]:477) - Finished creating instance of bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:46,354] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:46,370] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate'
 DEBUG [2015-06-07 17:14:46,370] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:46,370] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionTemplate2'
 DEBUG [2015-06-07 17:14:46,370] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 DEBUG [2015-06-07 17:14:46,370] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 DEBUG [2015-06-07 17:14:46,370] (AbstractApplicationContext.java[initLifecycleProcessor]:700) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@4d27d9d]
 DEBUG [2015-06-07 17:14:46,370] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 17:14:46,370] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:46,370] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:46,370] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 DEBUG [2015-06-07 17:14:46,370] (PropertySourcesPropertyResolver.java[getProperty]:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 DEBUG [2015-06-07 17:14:46,370] (PropertySourcesPropertyResolver.java[getProperty]:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 DEBUG [2015-06-07 17:14:46,370] (CacheAwareContextLoaderDelegate.java[loadContext]:93) - Storing ApplicationContext in cache under key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:46,385] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 17:14:46,385] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:46,385] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'hibernateDao'
 DEBUG [2015-06-07 17:14:46,385] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 17:14:46,385] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 17:14:46,385] (AutowiredAnnotationBeanPostProcessor.java[registerDependentBeans]:427) - Autowiring by type from bean name 'com.spring.SpringTest' to bean named 'mybatisService'
 DEBUG [2015-06-07 17:14:46,401] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.mybatisTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 17:14:46,401] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:46,417] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:46,417] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:46,417] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:46,417] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:46,432] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [mybatisTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 17:14:46,432] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 17:14:46,432] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 17:14:46,432] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:543) - Retrieved @TransactionConfiguration attributes [null] for test class [class com.spring.SpringTest].
 DEBUG [2015-06-07 17:14:46,432] (TransactionalTestExecutionListener.java[retrieveConfigurationAttributes]:561) - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@149c3204 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.spring.SpringTest].
 DEBUG [2015-06-07 17:14:46,432] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 17:14:46,432] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (1) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4e6f2bb5]; rollback [true]
 DEBUG [2015-06-07 17:14:46,448] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 17:14:46,448] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 17:14:46,463] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 17:14:46,479] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 17:14:46,667] (Slf4jImpl.java[debug]:28) - ==>  Executing: insert into types values(?) 
 DEBUG [2015-06-07 17:14:46,667] (Slf4jImpl.java[debug]:28) - ==> Parameters: 45(Integer)
 DEBUG [2015-06-07 17:14:46,682] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 17:14:46,682] (SessionFactoryUtils.java[doGetSession]:328) - Opening Hibernate Session
 DEBUG [2015-06-07 17:14:46,745] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336648866
 DEBUG [2015-06-07 17:14:46,745] (SessionFactoryUtils.java[doGetSession]:336) - Registering Spring transaction synchronization for new Hibernate Session
 DEBUG [2015-06-07 17:14:46,745] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 17:14:46,760] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 41, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 17:14:46,776] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 17:14:46,776] (Slf4jImpl.java[debug]:28) - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5] from current transaction
 DEBUG [2015-06-07 17:14:46,776] (Slf4jImpl.java[debug]:28) - ==>  Executing: select * from types; 
 DEBUG [2015-06-07 17:14:46,792] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 17:14:46,807] (Slf4jImpl.java[debug]:28) - <==    Columns: typeId
 DEBUG [2015-06-07 17:14:46,807] (Slf4jImpl.java[debug]:28) - <==        Row: 1
 DEBUG [2015-06-07 17:14:46,807] (Slf4jImpl.java[debug]:28) - <==        Row: 19
 DEBUG [2015-06-07 17:14:46,807] (Slf4jImpl.java[debug]:28) - <==        Row: 45
 DEBUG [2015-06-07 17:14:46,807] (Slf4jImpl.java[debug]:28) - <==        Row: 5
 DEBUG [2015-06-07 17:14:46,807] (Slf4jImpl.java[debug]:28) - <==        Row: 73
 DEBUG [2015-06-07 17:14:46,807] (Slf4jImpl.java[debug]:28) - <==        Row: 81
 DEBUG [2015-06-07 17:14:46,807] (Slf4jImpl.java[debug]:28) - <==        Row: 96
 DEBUG [2015-06-07 17:14:46,807] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 17:14:46,807] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:46,823] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 17:14:46,823] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 17:14:46,823] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 17:14:46,823] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7cada5]
 DEBUG [2015-06-07 17:14:46,823] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 17:14:46,823] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 17:14:46,823] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:46,838] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@53ca01a2, testMethod = mybatisTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 17:14:46,838] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:46,838] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:46,838] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 17:14:46,838] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:46,838] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 17:14:46,838] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:46,838] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 17:14:46,838] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 17:14:46,838] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.hibernateTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:46,838] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:46,838] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:46,838] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:46,838] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:46,838] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:46,838] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [hibernateTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:46,838] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336648868
 DEBUG [2015-06-07 17:14:46,838] (HibernateTransactionManager.java[doBegin]:498) - Opened new Session [org.hibernate.impl.SessionImpl@a2ddf26] for Hibernate transaction
 DEBUG [2015-06-07 17:14:46,838] (HibernateTransactionManager.java[doBegin]:509) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@a2ddf26]
 DEBUG [2015-06-07 17:14:46,854] (JDBCTransaction.java[begin]:78) - begin
 DEBUG [2015-06-07 17:14:46,854] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 17:14:46,854] (JDBCTransaction.java[begin]:83) - current autocommit status: true
 DEBUG [2015-06-07 17:14:46,854] (JDBCTransaction.java[begin]:86) - disabling autocommit
 DEBUG [2015-06-07 17:14:46,854] (HibernateTransactionManager.java[doBegin]:574) - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 17:14:46,854] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 17:14:46,854] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (2) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@16e7b402]; rollback [true]
 DEBUG [2015-06-07 17:14:46,854] (HibernateTemplate.java[doExecute]:402) - Found thread-bound Session for HibernateTemplate
 DEBUG [2015-06-07 17:14:46,854] (AbstractSaveEventListener.java[saveWithGeneratedId]:134) - generated identifier: 25, using strategy: org.hibernate.id.Assigned
 DEBUG [2015-06-07 17:14:46,854] (HibernateTemplate.java[doExecute]:427) - Not closing pre-bound Hibernate Session after HibernateTemplate
 DEBUG [2015-06-07 17:14:46,854] (SessionImpl.java[<init>]:265) - opened session at timestamp: 14336648868
 DEBUG [2015-06-07 17:14:46,948] (QueryTranslatorImpl.java[parse]:272) - parse() - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 17:14:46,963] (QueryTranslatorImpl.java[showHqlAst]:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'hibernate'
                |  \-[IDENT] Node: 'vo'
                \-[IDENT] Node: 'Types'

 DEBUG [2015-06-07 17:14:46,963] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 17:14:47,010] (HqlSqlBaseWalker.java[beforeStatement]:111) - select << begin [level=1, statement=select]
 DEBUG [2015-06-07 17:14:47,042] (FromElement.java[doInitialize]:157) - FromClause{level=1} :  com.hibernate.vo.Types (no alias) -> types0_
 DEBUG [2015-06-07 17:14:47,042] (HqlSqlBaseWalker.java[beforeStatementCompletion]:117) - select : finishing up [level=1, statement=select]
 DEBUG [2015-06-07 17:14:47,042] (HqlSqlWalker.java[processQuery]:620) - processQuery() :  ( SELECT ( FromClause{level=1} TYPES types0_ ) )
 DEBUG [2015-06-07 17:14:47,057] (HqlSqlWalker.java[createSelectClauseFromFromClause]:863) - Derived SELECT clause created.
 DEBUG [2015-06-07 17:14:47,057] (JoinProcessor.java[addJoinNodes]:179) - Using FROM fragment [TYPES types0_]
 DEBUG [2015-06-07 17:14:47,057] (HqlSqlBaseWalker.java[afterStatementCompletion]:123) - select >> end [level=1, statement=select]
 DEBUG [2015-06-07 17:14:47,057] (QueryTranslatorImpl.java[analyze]:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TYPES)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'types0_.TYPEID as TYPEID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[types0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TYPES types0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TYPES,tableAlias=types0_,origin=null,columns={,className=com.hibernate.vo.Types}}

 DEBUG [2015-06-07 17:14:47,057] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 17:14:47,073] (QueryTranslatorImpl.java[generate]:241) - HQL: from com.hibernate.vo.Types
 DEBUG [2015-06-07 17:14:47,073] (QueryTranslatorImpl.java[generate]:242) - SQL: select types0_.TYPEID as TYPEID0_ from TYPES types0_
 DEBUG [2015-06-07 17:14:47,073] (ErrorCounter.java[throwQueryException]:91) - throwQueryException() : no errors
 DEBUG [2015-06-07 17:14:47,104] (AbstractBatcher.java[logOpenPreparedStatement]:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
 DEBUG [2015-06-07 17:14:47,104] (ConnectionManager.java[openConnection]:444) - opening JDBC connection
 DEBUG [2015-06-07 17:14:47,135] (SQLStatementLogger.java[logStatement]:111) - 
    select
        types0_.TYPEID as TYPEID0_ 
    from
        TYPES types0_
 DEBUG [2015-06-07 17:14:47,135] (AbstractBatcher.java[logOpenResults]:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
 DEBUG [2015-06-07 17:14:47,135] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 17:14:47,135] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 17:14:47,135] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 17:14:47,135] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 17:14:47,135] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 17:14:47,135] (Loader.java[getRow]:1322) - result row: EntityKey[com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 17:14:47,135] (AbstractBatcher.java[logCloseResults]:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
 DEBUG [2015-06-07 17:14:47,135] (AbstractBatcher.java[logClosePreparedStatement]:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
 DEBUG [2015-06-07 17:14:47,151] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 17:14:47,151] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#1]
 DEBUG [2015-06-07 17:14:47,151] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 17:14:47,151] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#19]
 DEBUG [2015-06-07 17:14:47,151] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 17:14:47,151] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#5]
 DEBUG [2015-06-07 17:14:47,151] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 17:14:47,151] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#73]
 DEBUG [2015-06-07 17:14:47,151] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 17:14:47,151] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#81]
 DEBUG [2015-06-07 17:14:47,151] (TwoPhaseLoad.java[initializeEntity]:130) - resolving associations for [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 17:14:47,151] (TwoPhaseLoad.java[initializeEntity]:255) - done materializing entity [com.hibernate.vo.Types#96]
 DEBUG [2015-06-07 17:14:47,151] (StatefulPersistenceContext.java[initializeNonLazyCollections]:893) - initializing non-lazy collections
 DEBUG [2015-06-07 17:14:47,151] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 17:14:47,151] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 17:14:47,151] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:47,151] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 17:14:47,151] (HibernateTransactionManager.java[doRollback]:677) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@a2ddf26]
 DEBUG [2015-06-07 17:14:47,151] (JDBCTransaction.java[rollback]:182) - rollback
 DEBUG [2015-06-07 17:14:47,151] (JDBCTransaction.java[toggleAutoCommit]:223) - re-enabling autocommit
 DEBUG [2015-06-07 17:14:47,151] (JDBCTransaction.java[rollback]:193) - rolled back JDBC Connection
 DEBUG [2015-06-07 17:14:47,151] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
 DEBUG [2015-06-07 17:14:47,151] (HibernateTransactionManager.java[doCleanupAfterCompletion]:740) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@a2ddf26] after transaction
 DEBUG [2015-06-07 17:14:47,151] (SessionFactoryUtils.java[closeSession]:820) - Closing Hibernate Session
 DEBUG [2015-06-07 17:14:47,151] (ConnectionManager.java[closeConnection]:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
 DEBUG [2015-06-07 17:14:47,151] (ConnectionManager.java[afterTransaction]:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
  INFO [2015-06-07 17:14:47,151] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:47,151] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@1e86a5a7, testMethod = hibernateTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 17:14:47,151] (ProfileValueUtils.java[retrieveProfileValueSource]:70) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:47,151] (ProfileValueUtils.java[retrieveProfileValueSource]:82) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:47,151] (DependencyInjectionTestExecutionListener.java[prepareTestInstance]:73) - Performing dependency injection for test context [[DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 DEBUG [2015-06-07 17:14:47,151] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:47,151] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.hibernate.dao.HibernateDao com.spring.SpringTest.hibernateDao
 DEBUG [2015-06-07 17:14:47,151] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernateDao'
 DEBUG [2015-06-07 17:14:47,151] (InjectionMetadata.java[inject]:85) - Processing injected method of bean 'com.spring.SpringTest': AutowiredFieldElement for private com.mybatis.service.IMybatisService com.spring.SpringTest.mybatisService
 DEBUG [2015-06-07 17:14:47,151] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'mybatisService'
 DEBUG [2015-06-07 17:14:47,151] (AbstractFallbackTransactionAttributeSource.java[getTransactionAttribute]:108) - Adding transactional method 'SpringTest.deleteTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 17:14:47,151] (TransactionalTestExecutionListener.java[beforeTestMethod]:154) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'] found for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:47,151] (CacheAwareContextLoaderDelegate.java[loadContext]:104) - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:47,167] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'hibernatTransactionManager'
 DEBUG [2015-06-07 17:14:47,167] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager1'
 DEBUG [2015-06-07 17:14:47,167] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'transactionManager2'
 DEBUG [2015-06-07 17:14:47,167] (AbstractPlatformTransactionManager.java[getTransaction]:367) - Creating new transaction with name [deleteTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; 'transactionManager2'
 DEBUG [2015-06-07 17:14:47,167] (DataSourceTransactionManager.java[doBegin]:207) - Acquired Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] for JDBC transaction
 DEBUG [2015-06-07 17:14:47,167] (DataSourceTransactionManager.java[doBegin]:224) - Switching JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] to manual commit
 DEBUG [2015-06-07 17:14:47,167] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
  INFO [2015-06-07 17:14:47,167] (TransactionalTestExecutionListener.java[startNewTransaction]:276) - Began transaction (3) for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4e6f2bb5]; rollback [true]
 DEBUG [2015-06-07 17:14:47,167] (Slf4jImpl.java[debug]:28) - Creating SqlSession with JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 17:14:47,167] (Slf4jImpl.java[debug]:28) - ooo Connection Opened
 DEBUG [2015-06-07 17:14:47,167] (Slf4jImpl.java[debug]:28) - JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] will be managed by Spring
 DEBUG [2015-06-07 17:14:47,167] (Slf4jImpl.java[debug]:28) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d33393]
 DEBUG [2015-06-07 17:14:47,167] (Slf4jImpl.java[debug]:28) - ==>  Executing: delete from types where 1=1 
 DEBUG [2015-06-07 17:14:47,167] (Slf4jImpl.java[debug]:28) - ==> Parameters: 
 DEBUG [2015-06-07 17:14:47,167] (Slf4jImpl.java[debug]:28) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d33393]
 DEBUG [2015-06-07 17:14:47,167] (TransactionalTestExecutionListener.java[isRollback]:429) - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 DEBUG [2015-06-07 17:14:47,167] (AbstractPlatformTransactionManager.java[processRollback]:847) - Initiating transaction rollback
 DEBUG [2015-06-07 17:14:47,167] (DataSourceTransactionManager.java[doRollback]:282) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver]
 DEBUG [2015-06-07 17:14:47,182] (Slf4jImpl.java[debug]:28) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d33393]
 DEBUG [2015-06-07 17:14:47,182] (DataSourceTransactionManager.java[doCleanupAfterCompletion]:325) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/test, UserName=mysql@localhost, MySQL-AB JDBC Driver] after transaction
 DEBUG [2015-06-07 17:14:47,182] (DataSourceUtils.java[doReleaseConnection]:327) - Returning JDBC Connection to DataSource
  INFO [2015-06-07 17:14:47,182] (TransactionalTestExecutionListener.java[endTransaction]:298) - Rolled back transaction after test execution for test context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 DEBUG [2015-06-07 17:14:47,182] (DirtiesContextTestExecutionListener.java[afterTestMethod]:94) - After test method: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = com.spring.SpringTest@4ce94d2f, testMethod = deleteTest@SpringTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
 DEBUG [2015-06-07 17:14:47,182] (DirtiesContextTestExecutionListener.java[afterTestClass]:126) - After test class: context [DefaultTestContext@14ec4505 testClass = SpringTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@358c99f5 testClass = SpringTest, locations = '{classpath:local/spring/application-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
  INFO [2015-06-07 17:14:47,182] (AbstractApplicationContext.java[doClose]:873) - Closing org.springframework.context.support.GenericApplicationContext@4fe767f3: startup date [Sun Jun 07 17:14:42 KST 2015]; root of context hierarchy
 DEBUG [2015-06-07 17:14:47,182] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory'
 DEBUG [2015-06-07 17:14:47,182] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'sqlSessionFactory2'
 DEBUG [2015-06-07 17:14:47,182] (AbstractBeanFactory.java[doGetBean]:249) - Returning cached instance of singleton bean 'lifecycleProcessor'
 DEBUG [2015-06-07 17:14:47,182] (DefaultSingletonBeanRegistry.java[destroySingletons]:474) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65b104b9: defining beans [hibernateDao,mybatisDao,mybatisDao2,mybatisService,configProperty,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,twitter4jprops,hibernateProps,dataSource,dataSource2,hibernateSessionFactory,hibernateTemplate,hibernatTransactionManager,transactionManager1,transactionManager2,sqlSessionFactory,sqlSessionTemplate,sqlSessionFactory2,sqlSessionTemplate2,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
 DEBUG [2015-06-07 17:14:47,198] (DefaultSingletonBeanRegistry.java[destroyBean]:530) - Retrieved dependent beans for bean 'mybatisService': [com.spring.SpringTest]
 DEBUG [2015-06-07 17:14:47,198] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource'
 DEBUG [2015-06-07 17:14:47,198] (DisposableBeanAdapter.java[destroy]:244) - Invoking destroy() on bean with name 'hibernateSessionFactory'
  INFO [2015-06-07 17:14:47,198] (AbstractSessionFactoryBean.java[destroy]:225) - Closing Hibernate SessionFactory
  INFO [2015-06-07 17:14:47,198] (SessionFactoryImpl.java[close]:925) - closing
 DEBUG [2015-06-07 17:14:47,213] (DisposableBeanAdapter.java[invokeCustomDestroyMethod]:322) - Invoking destroy method 'close' on bean with name 'dataSource2'
 